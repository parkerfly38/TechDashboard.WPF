<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sage.SData.Client</name>
    </assembly>
    <members>
        <member name="T:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter">
            <summary>
            Represents a <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> that are used to fill an <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> or <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </summary>
            <remarks>
                <para>
                    The <see cref="T:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter"/> serves as a bridge between an <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> or <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> and an XML data source. 
                    The <see cref="T:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter"/> provides this bridge by mapping <see cref="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.Fill(Sage.SData.Client.Atom.AtomFeed)"/> or <see cref="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.Fill(Sage.SData.Client.Atom.AtomEntry)"/>, which changes the data 
                    in the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> or <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to match the data in the data source.
                </para>
                <para>
                    This syndication resource adapter is designed to fill <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> or <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> objects using 
                    a <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents XML data that conforms to the Atom 1.0 specification.</para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.#ctor(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="navigator">A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the syndication feed information.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the load operation of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.</param>
            <remarks>
                This class expects the supplied <paramref name="navigator"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.Fill(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to match the data source.
            </summary>
            <param name="resource">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be filled.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.Fill(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> to match the data source.
            </summary>
            <param name="resource">The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> to be filled.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.FillEntry(Sage.SData.Client.Atom.AtomEntry,System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to match the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> data source.
            </summary>
            <param name="entry">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill operation.</param>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entry"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.FillEntryCollections(Sage.SData.Client.Atom.AtomEntry,System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> collection entities to match the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> data source.
            </summary>
            <param name="entry">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill operation.</param>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entry"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.FillEntryOptionals(Sage.SData.Client.Atom.AtomEntry,System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> optional entities to match the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> data source.
            </summary>
            <param name="entry">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill operation.</param>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entry"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.FillFeedCollections(Sage.SData.Client.Atom.AtomFeed,System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> collection entities to match the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> data source.
            </summary>
            <param name="feed">The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill operation.</param>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="feed"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.Atom10SyndicationResourceAdapter.FillFeedOptionals(Sage.SData.Client.Atom.AtomFeed,System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> optional entities to match the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> data source.
            </summary>
            <param name="feed">The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill operation.</param>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="feed"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Adapter.SyndicationResourceAdapter">
            <summary>
            Represents a <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> that are used to fill a <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Adapter.SyndicationResourceAdapter.adapterNavigator">
            <summary>
            Private member to hold the XPathNavigator used to load a syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Adapter.SyndicationResourceAdapter.adapterSettings">
            <summary>
            Private member to hold the XPathNavigator used to configure the load of a syndication resource.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Adapter.SyndicationResourceAdapter.#ctor(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Adapter.SyndicationResourceAdapter"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="navigator">A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the syndication resource information.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the load operation of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Adapter.SyndicationResourceAdapter.Navigator">
            <summary>
            Gets the <see cref="T:System.Xml.XPath.XPathNavigator"/> used to fill a syndication resource.
            </summary>
            <value>The <see cref="T:System.Xml.XPath.XPathNavigator"/> used to fill a syndication resource.</value>
        </member>
        <member name="P:Sage.SData.Client.Adapter.SyndicationResourceAdapter.Settings">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill of a syndication resource.
            </summary>
            <value>The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill of a syndication resource.</value>
        </member>
        <member name="M:Sage.SData.Client.Adapter.SyndicationResourceAdapter.Fill(Sage.SData.Client.Common.ISyndicationResource,Sage.SData.Client.Common.SyndicationContentFormat)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to match the data source.
            </summary>
            <param name="resource">The <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to be filled.</param>
            <param name="format">The <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the type of syndication format that the <paramref name="resource"/> is expected to conform to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="format"/> is equal to <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.</exception>
            <exception cref="T:System.FormatException">The <paramref name="resource"/> data does not conform to the specified <paramref name="format"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Adapter.SyndicationResourceAdapter.FillAtomResource(Sage.SData.Client.Common.ISyndicationResource,Sage.SData.Client.Common.SyndicationResourceMetadata)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to match the data source.
            </summary>
            <param name="resource">The Atom <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to be filled.</param>
            <param name="resourceMetadata">A <see cref="T:Sage.SData.Client.Common.SyndicationResourceMetadata"/> object that represents the meta-data describing the <paramref name="resource"/>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resourceMetadata"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomCategory">
            <summary>
            Represents information about a category associated with a <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> or <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomEntry.Categories"/>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Categories"/>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.categoryTerm">
            <summary>
            Private member to hold a string that identifies the category to which the entry or feed belongs.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.categoryScheme">
            <summary>
            Private member to hold an IRI that identifies a categorization scheme.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomCategory.categoryLabel">
            <summary>
            Private member to hold a human-readable label for display in end-user applications.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> class using the supplied term.
            </summary>
            <param name="term">A string that identifies this category.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="term"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="term"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomCategory.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.Label">
            <summary>
            Gets or sets the human-readable label of this category for display in end-user applications.
            </summary>
            <value>The human-readable label of this category for display in end-user applications.</value>
            <remarks>
                <para>
                    The <see cref="P:Sage.SData.Client.Atom.AtomCategory.Label"/> property is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomCategory.Language"/> property. 
                    Entities represent their corresponding characters, not markup.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.Scheme">
            <summary>
            Gets or sets an IRI that identifies the categorization scheme used by this category.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies the categorization scheme used by this category.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomCategory.Term">
            <summary>
            Gets or sets a string that identifies this category.
            </summary>
            <value>A string that identifies this category.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomCategory.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomCategory.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomCategory.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomCategory.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomCategory"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomCategory"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomCategory"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomCategory"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.op_Equality(Sage.SData.Client.Atom.AtomCategory,Sage.SData.Client.Atom.AtomCategory)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.op_Inequality(Sage.SData.Client.Atom.AtomCategory,Sage.SData.Client.Atom.AtomCategory)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.op_LessThan(Sage.SData.Client.Atom.AtomCategory,Sage.SData.Client.Atom.AtomCategory)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomCategory.op_GreaterThan(Sage.SData.Client.Atom.AtomCategory,Sage.SData.Client.Atom.AtomCategory)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomContent">
            <summary>
            Represents information that contains or links to the content of an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </summary>
            <remarks>
                <para>
                    Atom Documents <b>must</b> conform to the following <i>processing model</i> rules. Atom Processors <b>must</b> interpret <see cref="T:Sage.SData.Client.Atom.AtomContent"/> according to the first applicable rule.
                    <list type="number">
                        <item>
                            <description>
                                 If the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> property is <b>text</b>, the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> property <b>must not</b> contain child elements. 
                                 Such text is intended to be presented to humans in a readable fashion. Thus, Atom Processors <i>may</i> collapse white space (including line breaks), 
                                 and display the text using typographic techniques such as justification and proportional fonts.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> property is <b>html</b>, the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> property <b>must not</b> contain child elements 
                                 and <i>should</i> be suitable for handling as HTML. The HTML markup <b>must</b> be escaped. The HTML markup <i>should</i> be such that it could validly appear 
                                 directly within an HTML <b>div</b> element. Atom Processors that display the content <i>may</i> use the markup to aid in displaying it.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> property is <b>xhtml</b>, the the value of the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> property <b>must</b> be a single XHTML div element 
                                 and <i>should</i> be suitable for handling as XHTML. The XHTML div element itself <b>must not</b> be considered part of the content. Atom Processors that display the 
                                 content <i>may</i> use the markup to aid in displaying it. The escaped versions of characters represent those characters, not markup.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If the value is an <a href="http://www.ietf.org/rfc/rfc3023.txt">XML media type</a> or ends with <b>+xml</b> or <b>/xml</b> (case insensitive), 
                                the content <i>may</i> include child elements and <i>should</i> be suitable for handling as the indicated media type. 
                                If the <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> is not provided, this would normally mean that the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> would contain a 
                                single child element that would serve as the root element of the XML document of the indicated type.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If the value begins with <b>text/</b> (case insensitive), the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> <b>must not</b> contain child elements.
                            </description>
                        </item>
                        <item>
                            <description>
                                For all other values , the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> <b>must</b> be a valid Base64 encoding, as described in 
                                <a href="http://www.ietf.org/rfc/rfc3548.txt">RFC 3548: The Base16, Base32, and Base64 Data Encodings</a>, section 3. 
                                When decoded, it <i>should</i> be suitable for handling as the indicated media type. In this case, the characters in 
                                the Base64 encoding <i>may</i> be preceded and followed in the atom:content element by white space, and lines are 
                                separated by a single newline (U+000A) character.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.contentValue">
            <summary>
            Private member to hold the local content of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.contentMediaType">
            <summary>
            Private member to hold a value indicating the entity encoding of the content.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomContent.contentSource">
            <summary>
            Private member to hold an IRI that identifies the remote location of the content.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomContent"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomContent"/> class using the supplied textual content.
            </summary>
            <param name="content">The local content of the entry.</param>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomContent"/> class using the supplied content and entity encoding.
            </summary>
            <param name="content">The local content of the entry.</param>
            <param name="encoding">A value indicating the entity encoding of the content.</param>
            <remarks>
                <para>
                    The Atom specification defines three initial values for the type of entry content:
                    <list type="bullet">
                        <item>
                            <description>
                                 <i>html</i>: The content <b>must not</b> contain child elements and <i>should</i> be suitable for handling as HTML. 
                                 The HTML markup <b>must</b> be escaped, and <i>should</i> be such that it could validly appear directly within an HTML <b>div</b> element. 
                                 Atom Processors that display the content <i>may</i> use the markup to aid in displaying it.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>text</i>: The content <b>must not</b> contain child elements. Such text is intended to be presented to humans in a readable fashion.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>xhtml</i>: The content <b>must</b> be a single XHTML div element and <i>should</i> be suitable for handling as XHTML. 
                                 The XHTML div element itself <b>must not</b> be considered part of the content. Atom Processors that display the content 
                                 <i>may</i> use the markup to aid in displaying it. The escaped versions of characters represent those characters, not markup.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomContent.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.Content">
            <summary>
            Gets or sets the local content of this entry.
            </summary>
            <value>The local content of this entry.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> property is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomContent.Language"/> property.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.ContentType">
            <summary>
            Gets or sets a value indicating the entity encoding of this content.
            </summary>
            <value>A value indicating the entity encoding of this content.</value>
            <remarks>
                <para>
                    The Atom specification defines three initial values for the type of entry content:
                    <list type="bullet">
                        <item>
                            <description>
                                 <i>html</i>: The content <b>must not</b> contain child elements and <i>should</i> be suitable for handling as HTML. 
                                 The HTML markup <b>must</b> be escaped, and <i>should</i> be such that it could validly appear directly within an HTML <b>div</b> element. 
                                 Atom Processors that display the content <i>may</i> use the markup to aid in displaying it.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>text</i>: The content <b>must not</b> contain child elements. Such text is intended to be presented to humans in a readable fashion.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>xhtml</i>: The content <b>must</b> be a single XHTML div element and <i>should</i> be suitable for handling as XHTML. 
                                 The XHTML div element itself <b>must not</b> be considered part of the content. Atom Processors that display the content 
                                 <i>may</i> use the markup to aid in displaying it. The escaped versions of characters represent those characters, not markup.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    If the value is an <a href="http://www.ietf.org/rfc/rfc3023.txt">XML media type</a> or ends with <b>+xml</b> or <b>/xml</b> (case insensitive), 
                    the content <i>may</i> include child elements and <i>should</i> be suitable for handling as the indicated media type. 
                    If the <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> is not provided, this would normally mean that the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> would contain a 
                    single child element that would serve as the root element of the XML document of the indicated type.
                </para>
                <para>
                    If the content type is not one of those specified above, it <b>must</b> conform to the syntax of a MIME media type, but <b>must not</b> be a composite type. 
                    See <a href="http://www.ietf.org/rfc/rfc4288.txt">RFC 4288: Media Type Specifications and Registration Procedures</a> for more details.
                </para>
                <para>
                    If the value begins with <b>text/</b> (case insensitive), the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> <b>must not</b> contain child elements.
                </para>
                <para>
                    For all other values , the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> <b>must</b> be a valid Base64 encoding, as described in 
                    <a href="http://www.ietf.org/rfc/rfc3548.txt">RFC 3548: The Base16, Base32, and Base64 Data Encodings</a>, section 3. 
                    When decoded, it <i>should</i> be suitable for handling as the indicated media type. In this case, the characters in 
                    the Base64 encoding <i>may</i> be preceded and followed in the atom:content element by white space, and lines are 
                    separated by a single newline (U+000A) character.
                </para>
                <para>
                    If neither the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> nor the <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> is provided, 
                    Atom Processors <b>must</b> behave as though the<see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> property has a value of <i>text</i>.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomContent.Source">
            <summary>
            Gets or sets an IRI that identifies the remote location of this content.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies the remote location of this content.</value>
            <remarks>
                <para>
                    If a <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> property is specified, the <see cref="P:Sage.SData.Client.Atom.AtomContent.Content"/> property <b>must</b> be empty. 
                    Atom Processors <i>may</i> use the IRI to retrieve the content and <i>may</i> choose to ignore remote content or to present it in a different manner than local content.
                </para>
                <para>
                    If a <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> property is specified, the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> <i>should</i> be provided and <b>must</b> be a 
                    <a href="http://www.ietf.org/rfc/rfc4288.txt">MIME media type</a>, rather than <b>text</b>, <b>html</b>, or <b>xhtml</b>. The value is advisory; 
                    that is to say, when the corresponding URI (mapped from an IRI, if necessary) is dereferenced, if the server providing that content also provides 
                    a media type, the server-provided media type is authoritative.
                </para>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomContent.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomContent.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomContent.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomContent.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomContent"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomContent"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomContent"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomContent"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomContent"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomContent"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomContent"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomContent"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomContent"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.op_Equality(Sage.SData.Client.Atom.AtomContent,Sage.SData.Client.Atom.AtomContent)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.op_Inequality(Sage.SData.Client.Atom.AtomContent,Sage.SData.Client.Atom.AtomContent)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.op_LessThan(Sage.SData.Client.Atom.AtomContent,Sage.SData.Client.Atom.AtomContent)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomContent.op_GreaterThan(Sage.SData.Client.Atom.AtomContent,Sage.SData.Client.Atom.AtomContent)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomEntry">
            <summary>
            Represents exactly one Atom entry, outside of the context of an <see cref="T:Sage.SData.Client.Atom.AtomFeed">Atom feed</see>.
            </summary>
            <seealso cref="T:Sage.SData.Client.Atom.AtomFeed"/>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/>
            <remarks>
                <para>
                    Atom is an an XML-based Web content and metadata syndication format that describes lists of related information known as <i>feeds</i>. 
                    Feeds are composed of a number of items, known as <i>entries</i>, each with an extensible set of attached metadata.
                </para>
                <para>
                    This implementation conforms to the Atom 1.0 specification, which can be found 
                    at <a href="http://www.atomenabled.org/developers/syndication/atom-format-spec.php">http://www.atomenabled.org/developers/syndication/atom-format-spec.php</a>.
                </para>
                <para>
                    Experience teaches that feeds that contain textual content are in general more useful than those that do not. 
                    Some applications (one example is full-text indexers) require a minimum amount of text or (X)HTML to function reliably and predictably. 
                    Feed producers should be aware of these issues. It is advisable that each <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object contain a non-empty <see cref="P:Sage.SData.Client.Atom.AtomEntry.Title"/>, 
                    a non-empty <see cref="P:Sage.SData.Client.Atom.AtomEntry.Content"/> when content is defined, and a non-empty <see cref="P:Sage.SData.Client.Atom.AtomEntry.Summary"/> when the entry contains does not provide a <see cref="P:Sage.SData.Client.Atom.AtomEntry.Content"/>. 
                    However, the absence of <see cref="P:Sage.SData.Client.Atom.AtomEntry.Summary"/> is not an error, and Atom Processors <b>must not</b> fail to function correctly as a consequence of such an absence.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.feedFormat">
            <summary>
            Private member to hold the syndication format for this syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.feedVersion">
            <summary>
            Private member to hold the version of the syndication format for this syndication resource conforms to.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.resourceAsyncLoadCancelled">
            <summary>
            Private member to hold a value indicating if the syndication resource asynchronous load operation was cancelled.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.resourceIsLoading">
            <summary>
            Private member to hold a value indicating if the syndication resource is in the process of loading.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.asyncHttpWebRequest">
            <summary>
            Private member to hold HTTP web request used by asynchronous load operations.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryAuthors">
            <summary>
            Private member to hold the collection of authors of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryCategories">
            <summary>
            Private member to hold the collection of categories associated with the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryContent">
            <summary>
            Private member to hold information that contains or links to the content of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryContributors">
            <summary>
            Private member to hold the collection of contributors of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryId">
            <summary>
            Private member to hold a permanent, universally unique identifier for the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryLinks">
            <summary>
            Private member to hold eferences from the entry to one or more Web resources.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryPublishedOn">
            <summary>
            Private member to hold a value indicating an instant in time associated with an event early in the life cycle of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryRights">
            <summary>
            Private member to hold information about rights held in and over the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entrySource">
            <summary>
            Private member to hold the meta-data of the source feed that the entry was copied from.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entrySummary">
            <summary>
            Private member to hold information that conveys a short summary, abstract, or excerpt of the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryTitle">
            <summary>
            Private member to hold information that conveys a human-readable title for the entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomEntry.entryUpdatedOn">
            <summary>
            Private member to hold a value indicating the most recent instant in time when the entry was modified in a way the publisher considers significant.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.#ctor(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomTextConstruct,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> class using the supplied <see cref="T:Sage.SData.Client.Atom.AtomId"/>, <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>, and <see cref="T:System.DateTime"/>.
            </summary>
            <param name="id">A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this entry.</param>
            <param name="title">A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this entry.</param>
            <param name="utcUpdatedOn">
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this entry was modified in a way the publisher considers significant. 
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="id"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="title"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="E:Sage.SData.Client.Atom.AtomEntry.Loaded">
            <summary>
            Occurs when the syndication resource state has been changed by a load operation.
            </summary>
            <seealso cref="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.OnEntryLoaded(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Raises the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event.
            </summary>
            <param name="e">A <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomEntry.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Authors">
            <summary>
            Gets or sets the authors of this entry.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the authors of this entry.</value>
            <remarks>
                <para>
                   An entry <b>must</b> contain one or more authors, unless the entry contains an <see cref="P:Sage.SData.Client.Atom.AtomEntry.Source"/> object that contains an author or, 
                   in an Atom Feed Document, the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> contains an author itself.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Categories">
            <summary>
            Gets or sets the categories associated with this entry.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> objects that represent the categories associated with this entry.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Content">
            <summary>
            Gets or sets information that contains or links to the content of this entry.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomContent"/> object that represents information that contains or links to the content of this entry.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Contributors">
            <summary>
            Gets or sets the entities who contributed to this entry.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the entities who contributed to this entry.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Format">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource implements.
            </summary>
            <value>The <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the type of syndication format that this syndication resource implements.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Id">
            <summary>
            Gets or sets a permanent, universally unique identifier for this entry.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this entry.</value>
            <remarks>
                <para>
                    When an <i>Atom Document</i> is relocated, migrated, syndicated, republished, exported, or imported, the content of its universally unique identifier <b>must not</b> change. 
                    Put another way, an <see cref="T:Sage.SData.Client.Atom.AtomId"/> pertains to all instantiations of a particular <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>; revisions retain the same 
                    content in their <see cref="T:Sage.SData.Client.Atom.AtomId"/> properties. It is suggested that the<see cref="T:Sage.SData.Client.Atom.AtomId"/> be stored along with the associated resource.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Links">
            <summary>
            Gets or sets references from this entry to one or more Web resources.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomLink"/> objects that represent references from this entry to one or more Web resources.</value>
            <remarks>
                <para>
                    An entry <b>must not</b> contain more than one <see cref="T:Sage.SData.Client.Atom.AtomLink"/> with a <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property of <i>alternate</i> 
                    that has the same combination of <see cref="P:Sage.SData.Client.Atom.AtomLink.ContentType"/> and <see cref="P:Sage.SData.Client.Atom.AtomLink.ContentLanguage"/> property values.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.PublishedOn">
            <summary>
            Gets or sets a date-time indicating an instant in time associated with an event early in the life cycle of this entry.
            </summary>
            <value>
                A <see cref="T:System.DateTime"/> that indicates an instant in time associated with an event early in the life cycle of this entry. 
                The default value is <see cref="F:System.DateTime.MinValue"/>, which indicates that no publication time was provided.
            </value>
            <remarks>
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Rights">
            <summary>
            Gets or sets information about rights held in and over this entry.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information about rights held in and over this entry.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomEntry.Rights"/> property <i>should not</i> be used to convey machine-readable licensing information. 
                If an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> does not provide any rights information, then the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Rights"/> of the containing feed, if present, is considered to apply to the entry.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Source">
            <summary>
            Gets or sets the meta-data of the source feed that this entry was copied from.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomSource"/> object that represents the meta-data of the source feed that this entry was copied from.</value>
            <remarks>
                <para>
                    The <see cref="T:Sage.SData.Client.Atom.AtomSource"/> is designed to allow the aggregation of entries from different feeds while retaining information about an entry's source feed. 
                    For this reason, Atom Processors that are performing such aggregation <i>should</i> include at least the required feed-level meta-data elements 
                    (<see cref="P:Sage.SData.Client.Atom.AtomFeed.Id">id</see>, <see cref="P:Sage.SData.Client.Atom.AtomFeed.Title">title</see>, and <see cref="P:Sage.SData.Client.Atom.AtomFeed.UpdatedOn">updated</see>) in the <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Summary">
            <summary>
            Gets or sets information that conveys a short summary, abstract, or excerpt for this entry.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a short summary, abstract, or excerpt for this entry.</value>
            <remarks>
                <para>
                    It is not advisable for the<see cref="P:Sage.SData.Client.Atom.AtomEntry.Summary"/> property to duplicate <see cref="P:Sage.SData.Client.Atom.AtomEntry.Title"/> or <see cref="P:Sage.SData.Client.Atom.AtomEntry.Content"/> because Atom Processors might assume there is a useful summary when there is none.
                </para>
                <para>
                    Entries <b>must</b> contain a <see cref="P:Sage.SData.Client.Atom.AtomEntry.Summary"/> in either of the following cases:
                    <list type="number">
                        <item>
                            <description>
                                 The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> contains an <see cref="P:Sage.SData.Client.Atom.AtomEntry.Content"/> property that has a <see cref="P:Sage.SData.Client.Atom.AtomContent.Source"/> property (and is thus empty).
                            </description>
                        </item>
                        <item>
                            <description>
                                 The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> contains content that is encoded in Base64; i.e., the <see cref="P:Sage.SData.Client.Atom.AtomContent.ContentType"/> property of <see cref="P:Sage.SData.Client.Atom.AtomEntry.Content"/> property 
                                 is a <a href="http://www.ietf.org/rfc/rfc4288.txt">MIME media type</a>, but is not an <a href="http://www.ietf.org/rfc/rfc3023.txt">XML media type</a>, 
                                 does not begin with <b>text/</b>, and does not end with <b>/xml</b> or <b>+xml</b>.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Title">
            <summary>
            Gets or sets information that conveys a human-readable title for this entry.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this entry.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.UpdatedOn">
            <summary>
            Gets or sets a date-time indicating the most recent instant in time when this entry was modified in a way the publisher considers significant.
            </summary>
            <value>
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this entry was modified in a way the publisher considers significant. 
                Publishers <i>may</i> change the value of this element over time. The default value is <see cref="F:System.DateTime.MinValue"/>, which indicates that no update time was provided.
            </value>
            <remarks>
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Atom.AtomEntry.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource conforms to.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Atom.AtomEntry.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource conforms to. The default value is <b>2.0</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.AsyncLoadHasBeenCancelled">
            <summary>
            Gets or sets a value indicating if the syndication resource asynchronous load operation was cancelled.
            </summary>
            <value><b>true</b> if syndication resource asynchronous load operation has been cancelled, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomEntry.LoadOperationInProgress">
            <summary>
            Gets or sets a value indicating if the syndication resource is in the process of loading.
            </summary>
            <value><b>true</b> if syndication resource is in the process of loading, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, <see cref="T:System.Net.IWebProxy"/>, and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Create(System.Uri,Sage.SData.Client.Common.WebRequestOptions,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, <see cref="T:System.Net.IWebProxy"/>, and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance asynchronously using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> is loaded using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> has a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance asynchronously using the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> has a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> has a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.WebRequestOptions,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> has a <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.LoadAsyncCancel">
            <summary>
            Cancels an asynchronous operation to load this syndication resource.
            </summary>
            <remarks>
                Use the LoadAsyncCancel method to cancel a pending <see cref="M:Sage.SData.Client.Atom.AtomEntry.LoadAsync(System.Uri,System.Object)"/> operation. 
                If there is a load operation in progress, this method releases resources used to execute the load operation. 
                If there is no load operation pending, this method does nothing.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.AsyncLoadCallback(System.IAsyncResult)">
            <summary>
            Called when a corresponding asynchronous load operation completes.
            </summary>
            <param name="result">The result of the asynchronous operation.</param>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.AsyncTimeoutCallback(System.Object,System.Boolean)">
            <summary>
            Represents a method to be called when a <see cref="T:System.Threading.WaitHandle"/> is signaled or times out.
            </summary>
            <param name="state">An object containing information to be used by the callback method each time it executes.</param>
            <param name="timedOut"><b>true</b> if the <see cref="T:System.Threading.WaitHandle"/> timed out; <b>false</b> if it was signaled.</param>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomEntry.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomEntry.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomEntry.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomEntry.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through nodes in this <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object.</returns>
            <remarks>
                The <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the root element of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>. 
                If there is no root element, the <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the first element in the XML representation of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.IO.Stream)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XmlReader)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XmlReader,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="settings"/> has a <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CharacterEncoding">character encoding</see> of <see cref="P:System.Text.Encoding.UTF8"/> 
                                the character encoding of the <paramref name="source"/> will be attempt to be determined automatically, otherwise the specified character encoding will be used. 
                                If automatic detection fails, a character encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used by default.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                If <paramref name="settings"/> has a <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CharacterEncoding">character encoding</see> of <see cref="P:System.Text.Encoding.UTF8"/> 
                                the character encoding of the <paramref name="source"/> will be attempt to be determined automatically, otherwise the specified character encoding will be used. 
                                If automatic detection fails, a character encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used by default.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Save(System.IO.Stream)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Save(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance. This value can be <b>null</b>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Save(System.Xml.XmlWriter,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> instance.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Loads the syndication resource using the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="navigator">A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the syndication resource information.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the load operation of the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>.</param>
            <param name="eventData">A <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> that contains the event data used when raising the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomEntry.Loaded"/> event is raised using the specified <paramref name="eventData"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="eventData"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="navigator"/> data does not conform to the expected syndication content format. In this case, the entry remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.WriteEntryCollections(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> collection entities to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomEntry.WriteEntryOptionals(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> optional entities to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomFeed">
            <summary>
            Represents an Atom syndication feed, including metadata about the feed, and some or all of the entries associated with it.
            </summary>
            <remarks>
                <para>
                    Atom is an an XML-based Web content and metadata syndication format that describes lists of related information known as <i>feeds</i>. 
                    Feeds are composed of a number of items, known as <i>entries</i>, each with an extensible set of attached metadata.
                </para>
                <para>
                    This implementation conforms to the Atom 1.0 specification, which can be found 
                    at <a href="http://www.atomenabled.org/developers/syndication/atom-format-spec.php">http://www.atomenabled.org/developers/syndication/atom-format-spec.php</a>.
                </para>
                <para>
                    If multiple <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> objects with the same <see cref="P:Sage.SData.Client.Atom.AtomEntry.Id"/> value appear in an Atom Feed Document, they represent the same entry. 
                    Their <see cref="P:Sage.SData.Client.Atom.AtomEntry.UpdatedOn"/> timestamps <i>should</i> be different. If an Atom Feed Document contains multiple entries with the same <see cref="P:Sage.SData.Client.Atom.AtomEntry.Id"/>, 
                    Atom Processors <u>may</u> choose to display all of them or some subset of them. One typical behavior would be to display only the entry with the latest <see cref="P:Sage.SData.Client.Atom.AtomEntry.UpdatedOn"/> timestamp.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedFormat">
            <summary>
            Private member to hold the syndication format for this syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedVersion">
            <summary>
            Private member to hold the version of the syndication format for this syndication resource conforms to.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.resourceAsyncLoadCancelled">
            <summary>
            Private member to hold a value indicating if the syndication resource asynchronous load operation was cancelled.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.resourceIsLoading">
            <summary>
            Private member to hold a value indicating if the syndication resource is in the process of loading.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.asyncHttpWebRequest">
            <summary>
            Private member to hold HTTP web request used by asynchronous load operations.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedAuthors">
            <summary>
            Private member to hold the collection of authors of the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedCategories">
            <summary>
            Private member to hold the collection of categories associated with the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedContributors">
            <summary>
            Private member to hold the collection of contributors of the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedGenerator">
            <summary>
            Private member to hold the agent used to generate the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedIcon">
            <summary>
            Private member to hold an image that provides iconic visual identification for the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedId">
            <summary>
            Private member to hold a permanent, universally unique identifier for the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedLinks">
            <summary>
            Private member to hold eferences from the feed to one or more Web resources.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedLogo">
            <summary>
            Private member to hold an image that provides visual identification for the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedRights">
            <summary>
            Private member to hold information about rights held in and over the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedSubtitle">
            <summary>
            Private member to hold inofmration that conveys a human-readable description or subtitle for the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedTitle">
            <summary>
            Private member to hold information that conveys a human-readable title for the feed.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedUpdatedOn">
            <summary>
            Private member to hold a value indicating the most recent instant in time when the feed was modified in a way the publisher considers significant.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomFeed.feedEntries">
            <summary>
            Private member to hold the collection of entries that comprise the distinct content published in the feed.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.#ctor(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomTextConstruct,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> class using the supplied <see cref="T:Sage.SData.Client.Atom.AtomId"/>, <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>, and <see cref="T:System.DateTime"/>.
            </summary>
            <param name="id">A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this feed.</param>
            <param name="title">A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this feed.</param>
            <param name="utcUpdatedOn">
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this feed was modified in a way the publisher considers significant. 
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="id"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="title"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the entry to get or set.</param>
            <returns>The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> is equal to or greater than the count for <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/>.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> that has the associated identifier.
            </summary>
            <param name="id">The <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/> that uniquely identifies the entry to get or set.</param>
            <returns>The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> with the associated <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/>.</returns>
            <remarks>
                If no entry exists for the specified <paramref name="id"/>, returns a <b>null</b> reference.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="id"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="id"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="E:Sage.SData.Client.Atom.AtomFeed.Loaded">
            <summary>
            Occurs when the syndication resource state has been changed by a load operation.
            </summary>
            <seealso cref="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.OnFeedLoaded(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Raises the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event.
            </summary>
            <param name="e">A <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Authors">
            <summary>
            Gets or sets the authors of this feed.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the authors of this feed.</value>
            <remarks>
                <para>A <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> <b>must</b> contain one or more authors, unless all of the feeds's child <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> objects contain at least one author.</para>
                <para>
                    The <see cref="P:Sage.SData.Client.Atom.AtomFeed.Authors"/> are considered to apply to any <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> contained in this feed if the entry does not contain any authors and the entry's source does contain any authors.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Categories">
            <summary>
            Gets or sets the categories associated with this feed.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> objects that represent the categories associated with this feed.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Contributors">
            <summary>
            Gets or sets the entities who contributed to this feed.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the entities who contributed to this feed.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Entries">
            <summary>
            Gets or sets the distinct content published in this feed.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> objects that represent distinct content published in this feed.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Format">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource implements.
            </summary>
            <value>The <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the type of syndication format that this syndication resource implements.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Generator">
            <summary>
            Gets or sets the agent used to generate this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> object that represents the agent used to generate this feed. The default value is a <b>null</b> reference.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Icon">
            <summary>
            Gets or sets an image that provides iconic visual identification for this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> object that represents an image that provides iconic visual identification for this feed. The default value is a <b>null</b> reference.</value>
            <remarks>
                The image <i>should</i> have an aspect ratio of one (horizontal) to one (vertical) and <i>should</i> be suitable for presentation at a small size.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Id">
            <summary>
            Gets or sets a permanent, universally unique identifier for this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this feed.</value>
            <remarks>
                <para>
                    When an <i>Atom Document</i> is relocated, migrated, syndicated, republished, exported, or imported, the content of its universally unique identifier <b>must not</b> change. 
                    Put another way, an <see cref="T:Sage.SData.Client.Atom.AtomId"/> pertains to all instantiations of a particular <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>; revisions retain the same 
                    content in their <see cref="T:Sage.SData.Client.Atom.AtomId"/> properties. It is suggested that the<see cref="T:Sage.SData.Client.Atom.AtomId"/> be stored along with the associated resource.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Links">
            <summary>
            Gets or sets references from this feed to one or more Web resources.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomLink"/> objects that represent references from this feed to one or more Web resources.</value>
            <remarks>
                <para>
                    A feed <i>should</i> contain one <see cref="T:Sage.SData.Client.Atom.AtomLink"/> with a <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property of <i>self</i>. 
                    This is the preferred URI for retrieving Atom Feed Documents representing this Atom feed.
                </para>
                <para>
                    A feed <b>must not</b> contain more than one <see cref="T:Sage.SData.Client.Atom.AtomLink"/> with a <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property of <i>alternate</i> 
                    that has the same combination of <see cref="P:Sage.SData.Client.Atom.AtomLink.ContentType"/> and <see cref="P:Sage.SData.Client.Atom.AtomLink.ContentLanguage"/> property values.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Logo">
            <summary>
            Gets or sets an image that provides visual identification for this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> object that represents an image that provides visual identification for this feed. The default value is a <b>null</b> reference.</value>
            <remarks>
                The image <i>should</i> have an aspect ratio of 2 (horizontal) to 1 (vertical).
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Rights">
            <summary>
            Gets or sets information about rights held in and over this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information about rights held in and over this feed.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomFeed.Rights"/> property <i>should not</i> be used to convey machine-readable licensing information.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Subtitle">
            <summary>
            Gets or sets information that conveys a human-readable description or subtitle for this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable description or subtitle for this feed.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Title">
            <summary>
            Gets or sets information that conveys a human-readable title for this feed.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this feed.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.UpdatedOn">
            <summary>
            Gets or sets a date-time indicating the most recent instant in time when this feed was modified in a way the publisher considers significant.
            </summary>
            <value>
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this feed was modified in a way the publisher considers significant. 
                Publishers <i>may</i> change the value of this element over time. The default value is <see cref="F:System.DateTime.MinValue"/>, which indicates that no update time was provided.
            </value>
            <remarks>
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource conforms to.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Atom.AtomFeed.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that this syndication resource conforms to. The default value is <b>2.0</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.AsyncLoadHasBeenCancelled">
            <summary>
            Gets or sets a value indicating if the syndication resource asynchronous load operation was cancelled.
            </summary>
            <value><b>true</b> if syndication resource asynchronous load operation has been cancelled, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomFeed.LoadOperationInProgress">
            <summary>
            Gets or sets a value indicating if the syndication resource is in the process of loading.
            </summary>
            <value><b>true</b> if syndication resource is in the process of loading, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomCategory},System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomCategory})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomLink},System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomLink})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomPersonConstruct},System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomPersonConstruct})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomTextConstruct},System.Collections.ObjectModel.Collection{Sage.SData.Client.Atom.AtomTextConstruct})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <remarks>
                The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> is created using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, <see cref="T:System.Net.IWebProxy"/>, and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Create(System.Uri,Sage.SData.Client.Common.WebRequestOptions,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Creates a new <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance using the specified <see cref="T:System.Uri"/>, <see cref="T:System.Net.ICredentials"/>, <see cref="T:System.Net.IWebProxy"/>, and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> object loaded using the <paramref name="source"/> data.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance asynchronously using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>The <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> is loaded using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> has a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance asynchronously using the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> has a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> has a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.WebRequestOptions,System.Object)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> has a <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.LoadAsyncCancel">
            <summary>
            Cancels an asynchronous operation to load this syndication resource.
            </summary>
            <remarks>
                Use the LoadAsyncCancel method to cancel a pending <see cref="M:Sage.SData.Client.Atom.AtomFeed.LoadAsync(System.Uri,System.Object)"/> operation. 
                If there is a load operation in progress, this method releases resources used to execute the load operation. 
                If there is no load operation pending, this method does nothing.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.AsyncLoadCallback(System.IAsyncResult)">
            <summary>
            Called when a corresponding asynchronous load operation completes.
            </summary>
            <param name="result">The result of the asynchronous operation.</param>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.AsyncTimeoutCallback(System.Object,System.Boolean)">
            <summary>
            Represents a method to be called when a <see cref="T:System.Threading.WaitHandle"/> is signaled or times out.
            </summary>
            <param name="state">An object containing information to be used by the callback method each time it executes.</param>
            <param name="timedOut"><b>true</b> if the <see cref="T:System.Threading.WaitHandle"/> timed out; <b>false</b> if it was signaled.</param>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomFeed.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.AddEntry(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to the current instance's <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/> collection.
            </summary>
            <param name="entry">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> was added to the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entry"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.RemoveEntry(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> from the current instance's <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/> collection.
            </summary>
            <param name="entry">The <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> was removed from the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomFeed.Entries"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Atom.AtomEntry"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entry"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through nodes in this <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object.</returns>
            <remarks>
                The <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the root element of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>. 
                If there is no root element, the <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the first element in the XML representation of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.IO.Stream)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XmlReader)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XmlReader,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="settings"/> has a <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CharacterEncoding">character encoding</see> of <see cref="P:System.Text.Encoding.UTF8"/> 
                                the character encoding of the <paramref name="source"/> will be attempt to be determined automatically, otherwise the specified character encoding will be used. 
                                If automatic detection fails, a character encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used by default.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    <list type="bullet">
                        <item>
                            <description>
                                If <paramref name="settings"/> has a <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CharacterEncoding">character encoding</see> of <see cref="P:System.Text.Encoding.UTF8"/> 
                                the character encoding of the <paramref name="source"/> will be attempt to be determined automatically, otherwise the specified character encoding will be used. 
                                If automatic detection fails, a character encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used by default.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event will be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Save(System.IO.Stream)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Save(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance. This value can be <b>null</b>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Save(System.Xml.XmlWriter,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> instance.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Loads the syndication resource using the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="navigator">A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the syndication resource information.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the load operation of the <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.</param>
            <param name="eventData">A <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> that contains the event data used when raising the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event.</param>
            <remarks>
                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Atom.AtomFeed.Loaded"/> event is raised using the specified <paramref name="eventData"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="eventData"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="navigator"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.WriteFeedCollections(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> collection entities to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomFeed.WriteFeedOptionals(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> optional entities to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomGenerator">
            <summary>
            Represents an agent used to generate an <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>, for debugging and other purposes.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Generator"/>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.generatorUri">
            <summary>
            Private member to hold an IRI that is relevant to the generating agent.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.generatorVersion">
            <summary>
            Private member to hold the version of the generating agent.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomGenerator.generatorText">
            <summary>
            Private member to hold a human-readable name for the generating agent.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> class using the supplied content.
            </summary>
            <param name="content">A human-readable name for the generating agent.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.Content">
            <summary>
            Gets or sets a human-readable name for the generating agent.
            </summary>
            <value>A human-readable name for the generating agent.</value>
            <remarks>
                Entities represent their corresponding characters, not markup.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.Uri">
            <summary>
            Gets or sets an IRI that is relevant to the generating agent.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Uri"/> that represents a Internationalized Resource Identifier (IRI) that is relevant to the generating agent.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomGenerator.Version">
            <summary>
            Gets or sets the version of the generating agent.
            </summary>
            <value>The version of the generating agent.</value>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomGenerator.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.op_Equality(Sage.SData.Client.Atom.AtomGenerator,Sage.SData.Client.Atom.AtomGenerator)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.op_Inequality(Sage.SData.Client.Atom.AtomGenerator,Sage.SData.Client.Atom.AtomGenerator)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.op_LessThan(Sage.SData.Client.Atom.AtomGenerator,Sage.SData.Client.Atom.AtomGenerator)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomGenerator.op_GreaterThan(Sage.SData.Client.Atom.AtomGenerator,Sage.SData.Client.Atom.AtomGenerator)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomIcon">
            <summary>
            Represents an image that provides iconic visual identification for an <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Icon"/>
            <remarks>
                The image <i>should</i> have an aspect ratio of one (horizontal) to one (vertical) and <i>should</i> be suitable for presentation at a small size.
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomIcon.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomIcon.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomIcon.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomIcon.iconUri">
            <summary>
            Private member to hold an IRI that identifies an image that provides iconic visual identification for the feed.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> class using the supplied <see cref="P:Sage.SData.Client.Atom.AtomIcon.Uri"/>.
            <param name="uri">A <see cref="P:Sage.SData.Client.Atom.AtomIcon.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies an image that provides iconic visual identification for this feed.</param>
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomIcon.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomIcon.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomIcon.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomIcon.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomIcon.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomIcon.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomIcon.Uri">
            <summary>
            Gets or sets an IRI that identifies an image that provides iconic visual identification for this feed.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomIcon.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies an image that provides iconic visual identification for this feed.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomIcon.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomIcon.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomIcon.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomIcon.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomIcon"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomIcon"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomIcon"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomIcon"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.op_Equality(Sage.SData.Client.Atom.AtomIcon,Sage.SData.Client.Atom.AtomIcon)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.op_Inequality(Sage.SData.Client.Atom.AtomIcon,Sage.SData.Client.Atom.AtomIcon)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.op_LessThan(Sage.SData.Client.Atom.AtomIcon,Sage.SData.Client.Atom.AtomIcon)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomIcon.op_GreaterThan(Sage.SData.Client.Atom.AtomIcon,Sage.SData.Client.Atom.AtomIcon)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomId">
            <summary>
            Represents a permanent, universally unique identifier for an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> or <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomEntry.Id"/>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Id"/>
            <remarks>
                <para>
                    When an <i>Atom Document</i> is relocated, migrated, syndicated, republished, exported, or imported, the content of its universally unique identifier <b>must not</b> change. 
                    Put another way, an <see cref="T:Sage.SData.Client.Atom.AtomId"/> pertains to all instantiations of a particular <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> or <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>; revisions retain the same 
                    content in their <see cref="T:Sage.SData.Client.Atom.AtomId"/> properties. It is suggested that the<see cref="T:Sage.SData.Client.Atom.AtomId"/> be stored along with the associated resource.
                </para>
                <para>
                    The content of an <see cref="T:Sage.SData.Client.Atom.AtomId"/> <b>must</b> be created in a way that assures uniqueness. 
                    Because of the risk of confusion between IRIs that would be equivalent if they were mapped to URIs and dereferenced, 
                    the following normalization strategy <i>should</i> be applied when generating unique identifiers: 
                    <list type="bullet">
                        <item>
                            <description>
                                 Provide the scheme in lowercase characters.
                            </description>
                        </item>
                        <item>
                            <description>
                                Provide the host, if any, in lowercase characters.
                            </description>
                        </item>
                        <item>
                            <description>
                               Only perform percent-encoding where it is essential.
                            </description>
                        </item>
                        <item>
                            <description>
                                Use uppercase A through F characters when percent-encoding.
                            </description>
                        </item>
                        <item>
                            <description>
                               Prevent dot-segments from appearing in paths.
                            </description>
                        </item>
                        <item>
                            <description>
                                For schemes that define a default authority, use an empty authority if the default is desired.
                            </description>
                        </item>
                        <item>
                            <description>
                               For schemes that define an empty path to be equivalent to a path of "/", use "/".
                            </description>
                        </item>
                        <item>
                            <description>
                                For schemes that define a port, use an empty port if the default is desired.
                            </description>
                        </item>
                        <item>
                            <description>
                               Preserve empty fragment identifiers and queries.
                            </description>
                        </item>
                        <item>
                            <description>
                               Ensure that all components of the IRI are appropriately character normalized, e.g., by using NFC or NFKC.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    Instances of <see cref="T:Sage.SData.Client.Atom.AtomId"/> objects can be compared to determine whether an entry or feed is the same as one seen before. 
                    Processors <b>must</b> compare <see cref="T:Sage.SData.Client.Atom.AtomId"/> objects on a character-by-character basis (in a case-sensitive fashion). 
                    Comparison operations <b>must</b> be based solely on the IRI character strings and <b>must not</b> rely on dereferencing the IRIs or URIs mapped from them.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomId.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomId.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomId.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomId.idUri">
            <summary>
            Private member to hold an IRI that represents a permanent, universally unique identifier for the entity.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomId"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomId"/> class using the supplied <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/>.
            <param name="uri">A <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/> that represents a Internationalized Resource Identifier (IRI) that represents a permanent, universally unique identifier for this entity.</param>
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomId.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomId.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomId.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomId.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomId.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomId.Uri">
            <summary>
            Gets or sets an IRI that represents a permanent, universally unique identifier for this entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/> that represents a Internationalized Resource Identifier (IRI) that represents a permanent, universally unique identifier for this entity.</value>
            <remarks>
                <para>This <see cref="P:Sage.SData.Client.Atom.AtomId.Uri"/> <b>must</b> represent an <i>absolute</i> URI.</para>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomId.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomId.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomId.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomId.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomId"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomId"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomId"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomId"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomId"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomId"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomId"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomId"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomId"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.op_Equality(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomId)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.op_Inequality(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomId)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.op_LessThan(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomId)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomId.op_GreaterThan(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomId)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomLink">
            <summary>
            Represents a reference from an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> or <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> to a Web resource.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomEntry.Links"/>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Links"/>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkResourceLocation">
            <summary>
            Private member to hold an IRI that identifies the location of the Web resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkRelation">
            <summary>
            Private member to hold a value that indicates the link relation type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkMediaType">
            <summary>
            Private member to hold an advisory media type for the Web resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkResourceLanguage">
            <summary>
            Private member to hold the natural language of the Web resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkTitle">
            <summary>
            Private member to hold human-readable information about the Web resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLink.linkLength">
            <summary>
            Private member to hold an advisory length of the resource content in octets.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> class using the supplied <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/>.
            </summary>
            <param name="href">A <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> that represents an IRI that identifies the location of this Web resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="href"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> class using the supplied <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> and link relation type.
            </summary>
            <param name="href">A <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> that represents an IRI that identifies the location of this Web resource.</param>
            <param name="relation">A value that indicates the link relation type.</param>
            <remarks>
                <para>
                    The Atom specification defines five initial values for the Registry of Link Relations:
                    <list type="bullet">
                        <item>
                            <description>
                                 <i>alternate</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies an alternate version of the resource described by the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>related</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies a resource related to the resource described by the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>self</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies a resource equivalent to the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>enclosure</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property identifies 
                                 a related resource that is potentially large in size and might require special handling.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>via</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property identifies 
                                 a resource that is the source of the information provided in the containing element.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="href"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomLink.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.ContentLanguage">
            <summary>
            Gets or sets the natural or formal language in which this Web resource content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which this resource content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.ContentType">
            <summary>
            Gets or sets an advisory media type for this Web resource.
            </summary>
            <value>An advisory MIME media type that provides a hint about the type of the representation that is expected to be returned by the Web resource.</value>
            <remarks>
                The advisory media type <b>does not</b> override the actual media type returned with the representation. 
                The value <b>must</b> conform to the syntax of a MIME media type as specified by <a href="http://www.ietf.org/rfc/rfc4288.txt">RFC 4288: Media Type Specifications and Registration Procedures</a>.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Length">
            <summary>
            Gets or sets an advisory length for this Web resource content in octets.
            </summary>
            <value>An advisory length for this Web resource content in octets. The default value is <see cref="F:System.Int64.MinValue"/>, which indicates that no advisory length was specified.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomLink.Length"/> does not override the actual content length of the representation as reported by the underlying protocol.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value"/> is less than <i>zero</i>.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Relation">
            <summary>
            Gets or sets a value that indicates the link relation type of this Web resource.
            </summary>
            <value>A value that indicates the link relation type.</value>
            <remarks>
                <para>If the <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property is not specified, the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> <b>must</b> be interpreted as if the link relation type is <i>alternate</i>.</para>
                <para>
                    The value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property <b>must</b> be a string that is non-empty and matches either the <i>isegment-nz-nc</i> or 
                    the <i>IRI</i> production in <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers (IRIs)</a>. 
                    Note that use of a relative reference other than a simple name is not allowed. If a name is given, implementations <b>must</b> consider the link relation type equivalent 
                    to the same name registered within the IANA Registry of Link Relations (<a href="http://www.atomenabled.org/developers/syndication/atom-format-spec.php#IANA">Section 7</a>), 
                    and thus to the IRI that would be obtained by appending the value of the rel attribute to the string "<i>http://www.iana.org/assignments/relation/</i>". 
                    The value of <see cref="P:Sage.SData.Client.Atom.AtomLink.Relation"/> property describes the meaning of the link, but does not impose any behavioral requirements on Atom Processors.
                </para>
                <para>
                    The Atom specification defines five initial values for the Registry of Link Relations:
                    <list type="bullet">
                        <item>
                            <description>
                                 <i>alternate</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies an alternate version of the resource described by the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>related</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies a resource related to the resource described by the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>self</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property 
                                 identifies a resource equivalent to the containing element.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>enclosure</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property identifies 
                                 a related resource that is potentially large in size and might require special handling.
                            </description>
                        </item>
                        <item>
                            <description>
                                 <i>via</i>: Signifies that the IRI in the value of the <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> property identifies 
                                 a resource that is the source of the information provided in the containing element.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Title">
            <summary>
            Gets or sets human-readable information about this Web resource.
            </summary>
            <value>Human-readable information about this Web resource.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomLink.Title"/> property is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomLink.Language"/> property. 
                Entities represent their corresponding characters, not markup.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLink.Uri">
            <summary>
            Gets or sets an IRI that identifies the location of this Web resource.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomLink.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies the location of this Web resource.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomLink.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomLink.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomLink.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomLink.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomLink"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomLink"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomLink"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomLink"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomLink"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomLink"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomLink"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomLink"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.op_Equality(Sage.SData.Client.Atom.AtomLink,Sage.SData.Client.Atom.AtomLink)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.op_Inequality(Sage.SData.Client.Atom.AtomLink,Sage.SData.Client.Atom.AtomLink)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.op_LessThan(Sage.SData.Client.Atom.AtomLink,Sage.SData.Client.Atom.AtomLink)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLink.op_GreaterThan(Sage.SData.Client.Atom.AtomLink,Sage.SData.Client.Atom.AtomLink)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomLogo">
            <summary>
            Represents an image that provides visual identification for an <see cref="T:Sage.SData.Client.Atom.AtomFeed"/>.
            </summary>
            <seealso cref="P:Sage.SData.Client.Atom.AtomFeed.Logo"/>
            <remarks>
                The image <i>should</i> have an aspect ratio of 2 (horizontal) to 1 (vertical).
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLogo.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLogo.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLogo.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomLogo.logoUri">
            <summary>
            Private member to hold an IRI that identifies an image that provides visual identification for the feed.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> class using the supplied <see cref="P:Sage.SData.Client.Atom.AtomLogo.Uri"/>.
            <param name="uri">A <see cref="P:Sage.SData.Client.Atom.AtomLogo.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies an image that provides visual identification for this feed.</param>
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLogo.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomLogo.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLogo.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLogo.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLogo.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomLogo.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomLogo.Uri">
            <summary>
            Gets or sets an IRI that identifies an image that provides visual identification for this feed.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomLogo.Uri"/> that represents a Internationalized Resource Identifier (IRI) that identifies an image that provides visual identification for this feed.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomLogo.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomLogo.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomLogo.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomLogo.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomLogo"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomLogo"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomLogo"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomLogo"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.op_Equality(Sage.SData.Client.Atom.AtomLogo,Sage.SData.Client.Atom.AtomLogo)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.op_Inequality(Sage.SData.Client.Atom.AtomLogo,Sage.SData.Client.Atom.AtomLogo)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.op_LessThan(Sage.SData.Client.Atom.AtomLogo,Sage.SData.Client.Atom.AtomLogo)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomLogo.op_GreaterThan(Sage.SData.Client.Atom.AtomLogo,Sage.SData.Client.Atom.AtomLogo)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomPersonConstruct">
            <summary>
            Represents a person, corporation, or similar entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.personConstructName">
            <summary>
            Private member to hold a human-readable name for the person.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.personConstructUri">
            <summary>
            Private member to hold an IRI associated with the person.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomPersonConstruct.personConstructEmailAddress">
            <summary>
            Private member to hold an e-mail address associated with the person.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> class using the supplied name.
            </summary>
            <param name="name">The human-readable name for this entity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.EmailAddress">
            <summary>
            Gets or sets the e-mail address associated with this entity.
            </summary>
            <value>The e-mail address associated with this entity.</value>
            <remarks>
                The email address <b>must</b> conform to <a href="http://www.ietf.org/rfc/rfc2822.txt">RFC 2822: Internet Message Format, 3.4.1, Addr-spec Specification</a>.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.Name">
            <summary>
            Gets or sets the human-readable name for this entity.
            </summary>
            <value>The human-readable name for this entity.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Name"/> property is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Language"/> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomPersonConstruct.Uri">
            <summary>
            Gets or sets the IRI associated with this entity.
            </summary>
            <value>A <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Uri"/> that represents a Internationalized Resource Identifier (IRI) associated with this entity.</value>
            <remarks>
                <para>See <a href="http://www.ietf.org/rfc/rfc3987.txt">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</para>
                <para>See <a href="http://msdn2.microsoft.com/en-us/library/system.uri.aspx">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomPersonConstruct.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <param name="elementName">The local name of the person construct being written.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elementName"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elementName"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance, with a generic element name of <i>PersonConstruct</i>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.op_Equality(Sage.SData.Client.Atom.AtomPersonConstruct,Sage.SData.Client.Atom.AtomPersonConstruct)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.op_Inequality(Sage.SData.Client.Atom.AtomPersonConstruct,Sage.SData.Client.Atom.AtomPersonConstruct)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.op_LessThan(Sage.SData.Client.Atom.AtomPersonConstruct,Sage.SData.Client.Atom.AtomPersonConstruct)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomPersonConstruct.op_GreaterThan(Sage.SData.Client.Atom.AtomPersonConstruct,Sage.SData.Client.Atom.AtomPersonConstruct)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomSource">
            <summary>
            Represents the meta-data of the source feed that an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> was copied from.
            </summary>
            <remarks>
                <para>
                    If an <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> is copied from one feed into another feed, then the source feed's metadata (all child elements of feed other than the entry elements) <i>may</i> be preserved 
                    within the copied entry by specifying an <see cref="T:Sage.SData.Client.Atom.AtomSource"/>, if it is not already present in the entry, and including some or all of the source feed's meta-data elements as the 
                    source's children. Such metadata <i>should</i> be preserved if the source <see cref="T:Sage.SData.Client.Atom.AtomFeed">feed</see> contains any of the child elements author, contributor, rights, or category 
                    and those child elements are not present in the source <see cref="T:Sage.SData.Client.Atom.AtomEntry">entry</see>.
                </para>
                <para>
                    The <see cref="T:Sage.SData.Client.Atom.AtomSource"/> is designed to allow the aggregation of entries from different feeds while retaining information about an entry's source feed. 
                    For this reason, Atom Processors that are performing such aggregation <i>should</i> include at least the required feed-level meta-data elements 
                    (<see cref="P:Sage.SData.Client.Atom.AtomFeed.Id">id</see>, <see cref="P:Sage.SData.Client.Atom.AtomFeed.Title">title</see>, and <see cref="P:Sage.SData.Client.Atom.AtomFeed.UpdatedOn">updated</see>) in the <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceAuthors">
            <summary>
            Private member to hold the collection of authors of the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceCategories">
            <summary>
            Private member to hold the collection of categories associated with the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceContributors">
            <summary>
            Private member to hold the collection of contributors of the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceGenerator">
            <summary>
            Private member to hold the agent used to generate the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceIcon">
            <summary>
            Private member to hold an image that provides iconic visual identification for the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceId">
            <summary>
            Private member to hold a permanent, universally unique identifier for the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceLinks">
            <summary>
            Private member to hold eferences from the source to one or more Web resources.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceLogo">
            <summary>
            Private member to hold an image that provides visual identification for the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceRights">
            <summary>
            Private member to hold information about rights held in and over the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceSubtitle">
            <summary>
            Private member to hold inofmration that conveys a human-readable description or subtitle for the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceTitle">
            <summary>
            Private member to hold information that conveys a human-readable title for the source.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomSource.sourceUpdatedOn">
            <summary>
            Private member to hold a value indicating the most recent instant in time when the source was modified in a way the publisher considers significant.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.#ctor(Sage.SData.Client.Atom.AtomId,Sage.SData.Client.Atom.AtomTextConstruct,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> class using the supplied <see cref="T:Sage.SData.Client.Atom.AtomId"/>, <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>, and <see cref="T:System.DateTime"/>.
            </summary>
            <param name="id">A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this source.</param>
            <param name="title">A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this source.</param>
            <param name="utcUpdatedOn">
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this source was modified in a way the publisher considers significant. 
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </param>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomSource.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Authors">
            <summary>
            Gets or sets the authors of this source.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the authors of this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Categories">
            <summary>
            Gets or sets the categories associated with this source.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomCategory"/> objects that represent the categories associated with this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Contributors">
            <summary>
            Gets or sets the entities who contributed to this source.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomPersonConstruct"/> objects that represent the entities who contributed to this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Generator">
            <summary>
            Gets or sets the agent used to generate this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomGenerator"/> object that represents the agent used to generate this source. The default value is a <b>null</b> reference.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Icon">
            <summary>
            Gets or sets an image that provides iconic visual identification for this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomIcon"/> object that represents an image that provides iconic visual identification for this source. The default value is a <b>null</b> reference.</value>
            <remarks>
                The image <i>should</i> have an aspect ratio of one (horizontal) to one (vertical) and <i>should</i> be suitable for presentation at a small size.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Id">
            <summary>
            Gets or sets a permanent, universally unique identifier for this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomId"/> object that represents a permanent, universally unique identifier for this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Links">
            <summary>
            Gets or sets references from this source to one or more Web resources.
            </summary>
            <value>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Atom.AtomLink"/> objects that represent references from this source to one or more Web resources.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Logo">
            <summary>
            Gets or sets an image that provides visual identification for this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomLogo"/> object that represents an image that provides visual identification for this source. The default value is a <b>null</b> reference.</value>
            <remarks>
                The image <i>should</i> have an aspect ratio of 2 (horizontal) to 1 (vertical).
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Rights">
            <summary>
            Gets or sets information about rights held in and over this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information about rights held in and over this source.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomSource.Rights"/> property <i>should not</i> be used to convey machine-readable licensing information.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Subtitle">
            <summary>
            Gets or sets information that conveys a human-readable description or subtitle for this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable description or subtitle for this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.Title">
            <summary>
            Gets or sets information that conveys a human-readable title for this source.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> object that represents information that conveys a human-readable title for this source.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomSource.UpdatedOn">
            <summary>
            Gets or sets a date-time indicating the most recent instant in time when this source was modified in a way the publisher considers significant.
            </summary>
            <value>
                A <see cref="T:System.DateTime"/> that indicates the most recent instant in time when this source was modified in a way the publisher considers significant. 
                Publishers <i>may</i> change the value of this element over time. The default value is <see cref="F:System.DateTime.MinValue"/>, which indicates that no update time was provided.
            </value>
            <remarks>
                The <see cref="T:System.DateTime"/> should be provided in Coordinated Universal Time (UTC).
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomSource.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomSource.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomSource.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomSource.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomSource"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomSource"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomSource"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.op_Equality(Sage.SData.Client.Atom.AtomSource,Sage.SData.Client.Atom.AtomSource)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.op_Inequality(Sage.SData.Client.Atom.AtomSource,Sage.SData.Client.Atom.AtomSource)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.op_LessThan(Sage.SData.Client.Atom.AtomSource,Sage.SData.Client.Atom.AtomSource)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.op_GreaterThan(Sage.SData.Client.Atom.AtomSource,Sage.SData.Client.Atom.AtomSource)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.LoadCollections(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomSource"/> collection elements using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> collection entities were initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomSource.LoadOptionals(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomSource"/> optional elements using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve XML namespace prefixes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomSource"/> optional entities were initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomSource"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomTextConstruct">
            <summary>
            Represents human-readable text.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstruct.commonObjectBaseUri">
            <summary>
            Private member to hold the base URI other than the base URI of the document or external entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstruct.commonObjectLanguage">
            <summary>
            Private member to hold the natural or formal language in which the content is written.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstruct.objectSyndicationExtensions">
            <summary>
            Private member to hold the collection of syndication extensions that have been applied to this syndication entity.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstruct.textConstructType">
            <summary>
            Private member to hold the entity encoding utilized by the human-readable text.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstruct.textConstructContent">
            <summary>
            Private member to hold the content of the human-readable text.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> class using the supplied content.
            </summary>
            <param name="content">The content of this human-readable text.</param>
            <remarks>
                The <paramref name="content"/> is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Language"/> property.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to this syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to this syndication entity.</value>
            <remarks>
                This <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects is internally represented as a <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.HasExtensions">
            <summary>
            Gets a value indicating if this syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions"/> collection for this entity contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.Content">
            <summary>
            Gets or sets the content of this human-readable text.
            </summary>
            <value>The content of this human-readable text.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Content"/> property is <i>language-sensitive</i>, with the natural language of the value being specified by the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Language"/> property.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomTextConstruct.TextType">
            <summary>
            Gets or sets the entity encoding utilized by this human-readable text.
            </summary>
            <value>
                An <see cref="T:Sage.SData.Client.Atom.AtomTextConstructType"/> enumeration value that represents the entity encoding utilized by this human-readable text. 
                The default value is <see cref="F:Sage.SData.Client.Atom.AtomTextConstructType.None"/>.
            </value>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.ConstructTypeAsString(Sage.SData.Client.Atom.AtomTextConstructType)">
            <summary>
            Returns the text construct identifier for the supplied <see cref="T:Sage.SData.Client.Atom.AtomTextConstructType"/>.
            </summary>
            <param name="type">The <see cref="T:Sage.SData.Client.Atom.AtomTextConstructType"/> to get the text construct identifier for.</param>
            <returns>The text construct identifier for the supplied <paramref name="type"/>, otherwise returns an empty string.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.ConstructTypeByName(System.String)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Atom.AtomTextConstructType"/> enumeration value that corresponds to the specified text construct type name.
            </summary>
            <param name="name">The name of the text construct type.</param>
            <returns>A <see cref="T:Sage.SData.Client.Atom.AtomTextConstructType"/> enumeration value that corresponds to the specified string, otherwise returns <b>AtomTextConstructType.None</b>.</returns>
            <remarks>This method disregards case of specified text construct type name.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <remarks>
                If the <see cref="P:Sage.SData.Client.Atom.AtomTextConstruct.Extensions"/> collection of the current instance does not contain the specified <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>, will return <b>false</b>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.Load(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the load operation.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <param name="elementName">The local name of the text construct being written.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elementName"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elementName"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance, with a generic element name of <i>TextConstruct</i>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.op_Equality(Sage.SData.Client.Atom.AtomTextConstruct,Sage.SData.Client.Atom.AtomTextConstruct)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.op_Inequality(Sage.SData.Client.Atom.AtomTextConstruct,Sage.SData.Client.Atom.AtomTextConstruct)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.op_LessThan(Sage.SData.Client.Atom.AtomTextConstruct,Sage.SData.Client.Atom.AtomTextConstruct)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomTextConstruct.op_GreaterThan(Sage.SData.Client.Atom.AtomTextConstruct,Sage.SData.Client.Atom.AtomTextConstruct)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomTextConstructType">
            <summary>
            Represents the entity encoding utilized by human-readable text constructs. 
            </summary>
            <seealso cref="T:Sage.SData.Client.Atom.AtomTextConstruct"/>
            <remarks>
                
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstructType.None">
            <summary>
            No entity-encoding type specified.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstructType.Html">
            <summary>
            Indicates that the human-readable text is Hyper-Text Markup Language (HTML) encoded.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstructType.Text">
            <summary>
            Indicates that the human-readable text is not encoded per a specific entity scheme.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomTextConstructType.Xhtml">
            <summary>
            Indicates that the human-readable text is Extensible Hyper-Text Markup Language (XHTML) encoded.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Atom.AtomUtility">
            <summary>
            Provides methods that comprise common utility features shared across the Atom syndication entities. This class cannot be inherited.
            </summary>
            <remarks>This utility class is not intended for use outside the Atom syndication entities within the framework.</remarks>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomUtility.ATOM_NAMESPACE">
            <summary>
            Private member to hold the Atom 1.0 namespace identifier.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomUtility.ATOMPUB_NAMESPACE">
            <summary>
            Private member to hold the Atom Publishing Protocol 1.0 namespace identifier.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomUtility.XHTML_NAMESPACE">
            <summary>
            Private member to hold the XHTML namespace identifier.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Atom.AtomUtility.XML_NAMESPACE">
            <summary>
            Private member to hold the XML 1.1 namespace identifier.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomUtility.AtomNamespace">
            <summary>
            Gets the XML namespace URI for the Atom 1.0 specification.
            </summary>
            <value>The XML namespace URI for the Atom 1.0 specification.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomUtility.AtomPublishingNamespace">
            <summary>
            Gets the XML namespace URI for the Atom Publishing Protocol 1.0 specification.
            </summary>
            <value>The XML namespace URI for the Atom Publishing Protocol 1.0 specification.</value>
        </member>
        <member name="P:Sage.SData.Client.Atom.AtomUtility.XhtmlNamespace">
            <summary>
            Gets the XML namespace URI for the XHTML specification.
            </summary>
            <value>The XML namespace URI for the Extensible Hyper-Text Markup Lanaguage (XHTML) specification.</value>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomUtility.CreateNamespaceManager(System.Xml.XmlNameTable)">
            <summary>
            Initializes a <see cref="T:System.Xml.XmlNamespaceManager"/> object for resolving prefixed XML namespaces within Atom syndication entities.
            </summary>
            <param name="nameTable">The table of atomized string objects.</param>
            <returns>A <see cref="T:System.Xml.XmlNamespaceManager"/> that resolves prefixed XML namespaces and provides scope management for these namespaces.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="nameTable"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomUtility.CompareCommonObjectAttributes(Sage.SData.Client.Atom.IAtomCommonObjectAttributes,Sage.SData.Client.Atom.IAtomCommonObjectAttributes)">
            <summary>
            Compares objects that implement the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> interface.
            </summary>
            <param name="source">A object that implements the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> interface to be compared.</param>
            <param name="target">A object that implements the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> to compare with the <paramref name="source"/>.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomUtility.FillCommonObjectAttributes(Sage.SData.Client.Atom.IAtomCommonObjectAttributes,System.Xml.XPath.XPathNavigator)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> to match the data source.
            </summary>
            <param name="target">The object that implements the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> interface to be filled.</param>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract Atom common attribute information from.</param>
            <returns><b>true</b> if the <paramref name="target"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Atom.AtomUtility.WriteCommonObjectAttributes(Sage.SData.Client.Atom.IAtomCommonObjectAttributes,System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="source">A object that implements the <see cref="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes"/> interface to extract Atom common attribute information from.</param>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which the <paramref name="source"/> information will be written.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Atom.IAtomCommonObjectAttributes">
            <summary>
            Allows an object to implement common Atom entity attributes by representing a set of properties, methods, indexers and events common to Atom syndication resources.
            </summary>
            <seealso cref="T:Sage.SData.Client.Atom.AtomEntry"/>
            <seealso cref="T:Sage.SData.Client.Atom.AtomFeed"/>
        </member>
        <member name="P:Sage.SData.Client.Atom.IAtomCommonObjectAttributes.BaseUri">
            <summary>
            Gets or sets the base URI other than the base URI of the document or external entity.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents a base URI other than the base URI of the document or external entity. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is interpreted as a URI Reference as defined in <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396: Uniform Resource Identifiers</a>, 
                    after processing according to <a href="http://www.w3.org/TR/xmlbase/#escaping">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Atom.IAtomCommonObjectAttributes.Language">
            <summary>
            Gets or sets the natural or formal language in which the content is written.
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> that represents the natural or formal language in which the content is written. The default value is a <b>null</b> reference.</value>
            <remarks>
                <para>
                    The value of this property is a language identifier as defined by <a href="http://www.ietf.org/rfc/rfc3066.txt">RFC 3066: Tags for the Identification of Languages</a>, or its successor.
                </para>
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Common.ComparisonUtility">
            <summary>
            Provides methods for performing logical comparison operations. This class cannot be inherited.
            </summary>
            <remarks>
                Primary used within this framework to determine the lexical relationship between generic collections.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.DayOfWeek},System.Collections.ObjectModel.Collection{System.DayOfWeek})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Int32},System.Collections.ObjectModel.Collection{System.Int32})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Int64},System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String},System.StringComparison)">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands. 
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Type},System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Uri},System.Collections.ObjectModel.Collection{System.Uri},System.StringComparison)">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands. 
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Xml.XPath.XPathNavigator},System.Collections.ObjectModel.Collection{System.Xml.XPath.XPathNavigator})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ComparisonUtility.CompareSequence(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.StringComparison)">
            <summary>
            Compares two specified generic dictionaries.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint">
            <summary>
            Represents a discoverable syndication endpoint that is being broadcast by a web resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.endpointMediaType">
            <summary>
            Private member to hold the content MIME type of the syndication endpoint.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.endpointTitle">
            <summary>
            Private member to hold the title of the syndication endpoint.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.endpointSource">
            <summary>
            Private member to hold the Uniform Resource Locator (URL) of the syndication endpoint.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> class using the supplied <see cref="T:System.Uri"/> and MIME content type.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the Uniform Resource Locator (URL) of the syndication endpoint.</param>
            <param name="contentType">The MIME content type that the syndicated resource conforms to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> class using the supplied <see cref="T:System.Uri"/>, MIME content type and title.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the Uniform Resource Locator (URL) of the syndication endpoint.</param>
            <param name="contentType">The MIME content type that the syndicated resource conforms to.</param>
            <param name="title">The title of the syndication endpoint.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.ContentFormat">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndication endpoint.
            </summary>
            <value>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the syndication content format that the auto-discoverable syndicated content conforms to. 
                If a format cannot be determined for the <see cref="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.ContentType">content type</see>, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </value>
            <remarks>The syndication content format is determined based upon the <see cref="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.ContentType"/> of the current instance.</remarks>
        </member>
        <member name="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.ContentType">
            <summary>
            Gets or sets the MIME content type of the syndication endpoint.
            </summary>
            <value>The registered MIME type of the syndication endpoint.</value>
            <remarks>See <a href="http://www.iana.org/assignments/media-types/">http://www.iana.org/assignments/media-types/</a> for a listing of registered MIME types.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.Source">
            <summary>
            Gets or sets the Uniform Resource Locator (URL) of the syndication endpoint.
            </summary>
            <value>The <see cref="T:System.Uri"/> of the syndication endpoint.</value>
            <remarks>The <see cref="T:System.Uri"/>can be either <b>Relative</b> or <b>Absolute</b>. It is up to the caller to resolve the endpoint source as appropriate.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.Title">
            <summary>
            Gets or sets the title of the syndication endpoint.
            </summary>
            <value>The title of the syndication endpoint.</value>
            <remarks>This property will be empty if no title attribute was assigned to the syndication endpoint link.</remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the auto-discoverable syndicated content located at the <see cref="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.Source">endpoint location</see>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the auto-discoverable syndicated content.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.Source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/>.</returns>
            <remarks>
                This method returns the XHTML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.op_Equality(Sage.SData.Client.Common.DiscoverableSyndicationEndpoint,Sage.SData.Client.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.op_Inequality(Sage.SData.Client.Common.DiscoverableSyndicationEndpoint,Sage.SData.Client.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.op_LessThan(Sage.SData.Client.Common.DiscoverableSyndicationEndpoint,Sage.SData.Client.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint.op_GreaterThan(Sage.SData.Client.Common.DiscoverableSyndicationEndpoint,Sage.SData.Client.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.EnumerationMetadataAttribute">
            <summary>
            Associates enumeration field description information with a target element. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.EnumerationMetadataAttribute.enumMetadataDisplayName">
            <summary>
             Private member to hold the display name for the attributed field.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.EnumerationMetadataAttribute.enumMetadataAlternateValue">
            <summary>
            Private member to hold the alterate textual value for the attributed field.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.EnumerationMetadataAttribute"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Common.EnumerationMetadataAttribute.AlternateValue">
            <summary>
            Gets or sets the alternate textual value for the attributed field.
            </summary>
            <value>The alternate textual value for the attributed field.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.EnumerationMetadataAttribute.DisplayName">
            <summary>
            Gets or sets the display name for the attributed field.
            </summary>
            <value>The display name for the attributed field.</value>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.EnumerationMetadataAttribute"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.EnumerationMetadataAttribute"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.op_Equality(Sage.SData.Client.Common.EnumerationMetadataAttribute,Sage.SData.Client.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.op_Inequality(Sage.SData.Client.Common.EnumerationMetadataAttribute,Sage.SData.Client.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.op_LessThan(Sage.SData.Client.Common.EnumerationMetadataAttribute,Sage.SData.Client.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.EnumerationMetadataAttribute.op_GreaterThan(Sage.SData.Client.Common.EnumerationMetadataAttribute,Sage.SData.Client.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.Guard">
            <summary>
            Provides common validation methods shared across the framework entities. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not a null reference.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <remarks>
                If the <paramref name="value"/> is a <b>null</b> reference, an <see cref="T:System.ArgumentNullException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not a null reference or an empty string.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <remarks>
                If the <paramref name="value"/> is a <b>null</b> reference or an empty string, an <see cref="T:System.ArgumentNullException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotGreaterThan(System.Int32,System.String,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotGreaterThan(System.Int64,System.String,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotGreaterThan(System.Decimal,System.String,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotLessThan(System.Int32,System.String,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotLessThan(System.Int64,System.String,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotLessThan(System.Decimal,System.String,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotOutOfRange(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotOutOfRange(System.Int64,System.String,System.Int32,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.Guard.ArgumentNotOutOfRange(System.Decimal,System.String,System.Int32,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Common.ISyndicationResource">
            <summary>
            Allows an object to implement a syndication resource by representing a set of properties, methods, indexers and events common to web content syndication resources.
            </summary>
            <seealso cref="T:Sage.SData.Client.Common.SyndicationResourceMetadata"/>
        </member>
        <member name="P:Sage.SData.Client.Common.ISyndicationResource.Format">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that the resource implements.
            </summary>
            <value>The <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the type of syndication format that the resource implements.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.ISyndicationResource.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Common.ISyndicationResource.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that the resource conforms to.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Common.ISyndicationResource.Version"/> of the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that the resource conforms to.</value>
        </member>
        <member name="E:Sage.SData.Client.Common.ISyndicationResource.Loaded">
            <summary>
            Occurs when the syndication resource state has been changed by a load operation.
            </summary>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through nodes in this <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object.</returns>
            <remarks>
                The <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the root element of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>. 
                If there is no root element, the <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the first element in the XML representation of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="source"/> should be passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.</para>
                <para><b>Notes to Implementers:</b> After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.IO.Stream)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.IO.Stream"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="stream"/> should be passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.IO.Stream"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="stream"/> should be used to create a <see cref="T:System.Xml.XPath.XPathNavigator"/> 
                                that is then passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="reader"/> should be passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader,Sage.SData.Client.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="reader"/> should be used to create a <see cref="T:System.Xml.XPath.XPathNavigator"/> 
                                that is then passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="source"/>, <paramref name="credentials"/>, and <paramref name="proxy"/> parameters should be passed 
                                to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)"/> method with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request should be made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request should be made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request should be made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request should be made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                Implementers should consider using the <see cref="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Text.Encoding)"/> utility method 
                                to retrieve the syndication resource information in a safe manner.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,Sage.SData.Client.Common.WebRequestOptions,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/>.</para>
                <para>The <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> should be loaded using the default <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> has a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> has a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/> and <see cref="T:System.Net.IWebProxy"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> has a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.WebRequestOptions,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/>, <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/> and <see cref="T:System.Net.IWebProxy"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> has a <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,Sage.SData.Client.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsyncCancel">
            <summary>
            Cancels an asynchronous operation to load the syndication resource.
            </summary>
            <remarks>
                Use the LoadAsyncCancel method to cancel a pending <see cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> operation. 
                If there is a load operation in progress, this method releases resources used to execute the load operation. 
                If there is no load operation pending, this method does nothing.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.IO.Stream)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, the <paramref name="stream"/> should be passed 
                    to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceSaveSettings)"/> method with the <item>settings</item> parameter as <b>null</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, the <paramref name="stream"/> should be used to create a <see cref="T:System.Xml.XmlWriter"/> 
                    that is then passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.Xml.XmlWriter)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, a default instance the <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> should be created 
                    and then passed to the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Sage.SData.Client.Common.SyndicationResourceSaveSettings)"/> method along with the supplied <paramref name="writer"/>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> instance.</param>
            <remarks>
                Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/> using the <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="T:Sage.SData.Client.Common.MimeMediaTypeAttribute">
            <summary>
            Associates IANA MIME media type information with a target element. This class cannot be inherited.
            </summary>
            <remarks>
                See <a href="http://www.iana.org/assignments/media-types">http://www.iana.org/assignments/media-types</a> for a listing of the registered IANA MIME media types and sub-types.
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Common.MimeMediaTypeAttribute.mimeMediaTypeName">
            <summary>
            Private member to hold the MIME media type name.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.MimeMediaTypeAttribute.mimeMediaSubTypeName">
            <summary>
            Private member to hold the MIME media sub-type name.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.MimeMediaTypeAttribute.mimeMediaDocumentation">
            <summary>
            Private member to hold a URI that points to the documentation the describes the MIME media type.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.MimeMediaTypeAttribute"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Common.MimeMediaTypeAttribute.Documentation">
            <summary>
            Gets or sets a URI that points to the documentation the describes the MIME media type for the attributed field.
            </summary>
            <value>A <see cref="T:System.Uri"/> that points to the documentation the describes the MIME media type for the attributed field.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.MimeMediaTypeAttribute.Name">
            <summary>
            Gets or sets the MIME media type name for the attributed field.
            </summary>
            <value>The MIME media type name for the attributed field.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.MimeMediaTypeAttribute.SubName">
            <summary>
            Gets or sets the MIME media sub-type name for the attributed field.
            </summary>
            <value>The MIME media sub-type name for the attributed field.</value>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.MimeMediaTypeAttribute"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.MimeMediaTypeAttribute"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.op_Equality(Sage.SData.Client.Common.MimeMediaTypeAttribute,Sage.SData.Client.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.op_Inequality(Sage.SData.Client.Common.MimeMediaTypeAttribute,Sage.SData.Client.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.op_LessThan(Sage.SData.Client.Common.MimeMediaTypeAttribute,Sage.SData.Client.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.MimeMediaTypeAttribute.op_GreaterThan(Sage.SData.Client.Common.MimeMediaTypeAttribute,Sage.SData.Client.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationContentFormat">
            <summary>
            Specifies the web content syndication format that the syndicated content conforms to.
            </summary>
            <seealso cref="T:Sage.SData.Client.Common.EnumerationMetadataAttribute"/>
            <seealso cref="T:Sage.SData.Client.Common.MimeMediaTypeAttribute"/>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.None">
            <summary>
            No web content syndication format specified.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Apml">
            <summary>
            Indicates that the syndication resource conforms to the Attention Profiling Markup Language (APML) 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Atom">
            <summary>
             Indicates that the syndication resource conforms to the Atom 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.BlogML">
            <summary>
            Indicates that the syndication resource conforms to the Web Log Markup Language (BlogML) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.MicroSummaryGenerator">
            <summary>
            Indicates that the syndication resource conforms to the Microsummary Generator 0.1 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.NewsML">
            <summary>
            Indicates that the syndication resource conforms to the News Markup Language (NewsML) G2 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.OpenSearchDescription">
            <summary>
            Indicates that the syndication resource conforms to the OpenSearch Description 1.1 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Opml">
            <summary>
            Indicates that the syndication resource conforms to the Outline Processor Markup Language (OPML) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Rsd">
            <summary>
            Indicates that the syndication resource conforms to the Really Simple Discovery (RSD) 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Rss">
            <summary>
            Indicates that the syndication resource conforms to the Really Simple Syndication (RSS) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.Rdf">
            <summary>
            Indicates that the syndication resource conforms to the Resource Description Framework (RDF) 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.AtomCategoryDocument">
            <summary>
             Indicates that the syndication resource conforms to the Atom Publishing Protocol 1.0 Category Document syndication format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationContentFormat.AtomServiceDocument">
            <summary>
             Indicates that the syndication resource conforms to the Atom Publishing Protocol 1.0 Service Document syndication format.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationDateTimeUtility">
            <summary>
            Provides methods for generating and parsing date-time information exposed by syndicated content. This class cannot be inherited.
            </summary>
            <remarks>
                See <a href="http://www.ietf.org/rfc/rfc0822.txt">RFC #822: Standard for ARPA Internet Text Messages (Date and Time Specification)</a> 
                and <a href="http://www.ietf.org/rfc/rfc3339.txt">RFC #3339: Date and Time on the Internet (Timestamps)</a> for further information about 
                the date-time formats implemented in the <see cref="T:Sage.SData.Client.Common.SyndicationDateTimeUtility"/> class.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.ParseRfc3339DateTime(System.String)">
            <summary>
            Converts the specified string representation of a RFC-3339 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-3339 formatted date to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> equivalent to the RFC-3339 formatted date contained in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value"/> is not a recognized as a RFC-3339 formatted date.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.ToRfc3339DateTime(System.DateTime)">
            <summary>
            Converts the value of the supplied <see cref="T:System.DateTime"/> object to its equivalent RFC-3339 date string representation.
            </summary>
            <param name="utcDateTime">The UTC <see cref="T:System.DateTime"/> object to convert.</param>
            <returns>A string that contains the RFC-3339 date string representation of the supplied <see cref="T:System.DateTime"/> object.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.TryParseRfc3339DateTime(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a RFC-3339 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-3339 formatted date to convert.</param>
            <param name="result">
                When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <paramref name="value"/>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue">MinValue</see> if the conversion failed. 
                The conversion fails if the <paramref name="value"/> parameter is a <b>null</b> or empty string, or does not contain a valid string representation of a RFC-3339 formatted date. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="value"/> parameter was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.ReplaceRfc822TimeZoneWithOffset(System.String)">
            <summary>
            Replaces the RFC-822 time-zone component with its offset equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <returns>A string containing a RFC-822 formatted date, with the <i>zone</i> component converted to its offset equivalent.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <seealso cref="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.TryParseRfc822DateTime(System.String,System.DateTime@)"/>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.ParseRfc822DateTime(System.String)">
            <summary>
            Converts the specified string representation of a RFC-822 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> equivalent to the RFC-822 formatted date contained in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value"/> is not a recognized as a RFC-822 formatted date.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.ToRfc822DateTime(System.DateTime)">
            <summary>
            Converts the value of the supplied <see cref="T:System.DateTime"/> object to its equivalent RFC-822 date string representation.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/> object to convert.</param>
            <returns>A string that contains the RFC-822 date string representation of the supplied <see cref="T:System.DateTime"/> object.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDateTimeUtility.TryParseRfc822DateTime(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a RFC-822 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <param name="result">
                When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <paramref name="value"/>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue">MinValue</see> if the conversion failed. 
                The conversion fails if the <paramref name="value"/> parameter is a <b>null</b> or empty string, or does not contain a valid string representation of a RFC-822 formatted date. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="value"/> parameter was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationDiscoveryUtility">
            <summary>
            Provides methods for extracting peer-to-peer auto-discovery and resource information from syndicated content. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationDiscoveryUtility.frameworkUserAgent">
            <summary>
            Private member to hold the default user agent sent by the framework when making HTTP web requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationDiscoveryUtility.FrameworkUserAgent">
            <summary>
            Gets the raw user agent string used by the framework when sending web requests.
            </summary>
            <value>A string that represents information such as the client application name, version, host operating system, and language.</value>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatByName(System.String)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that corresponds to the specified format name.
            </summary>
            <param name="name">The name of the syndication content format.</param>
            <returns>A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that corresponds to the specified string, otherwise returns <b>SyndicationContentFormat.None</b>.</returns>
            <remarks>This method disregards case of specified format name.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Uri)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndicated resource located at the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the syndication resource to determine syndication content format for.</param>
            <returns>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndicated resource located at the specified <see cref="T:System.Uri"/> using the supplied <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the syndication resource to determine syndication content format for.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.IO.Stream)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Xml.XmlReader)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">A <see cref="T:System.Xml.XmlReader"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Xml.XPath.XPathNavigator)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractHtmlAttributes(System.String)">
            <summary>
            Returns a <see cref="T:System.Collections.Hashtable"/> of the HTML attribute name/value pairs for the supplied content.
            </summary>
            <param name="content">The HTML content to parse.</param>
            <returns>A <see cref="T:System.Collections.Hashtable"/> of the HTML attribute name/value pairs extracted the supplied <paramref name="content"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractUrls(System.String)">
            <summary>
            Returns a collection of <see cref="T:System.Uri"/> instances that represent HTML header links and/or anchor tags in the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>A collection of <see cref="T:System.Uri"/> instances that represent HTML anchor elements and header links in the supplied HTML markup.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.GetAbsoluteBaseUri(System.Web.HttpRequest)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents the absolute base URI of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </summary>
            <param name="request">The <see cref="T:System.Web.HttpRequest"/> to generate an absolute base <see cref="T:System.Uri"/> for.</param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute base URI of the supplied <see cref="T:System.Web.HttpRequest"/>. 
                If unable to build an absolute base <see cref="T:System.Uri"/>, returns the absolute URI of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="request"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SourceReferencesTarget(System.Uri,System.Uri)">
            <summary>
            Returns a value indicating if the source <see cref="T:System.Uri"/> references the target <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the source web resource that will be searched.</param>
            <param name="target">A <see cref="T:System.Uri"/> that represents the target web resource being searched for.</param>
            <returns><b>true</b> if the <paramref name="source"/> contains at least one link to the <paramref name="target"/>, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.SourceReferencesTarget(System.Uri,System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the source <see cref="T:System.Uri"/> references the target <see cref="T:System.Uri"/>, using the specifed <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the source web resource that will be searched.</param>
            <param name="target">A <see cref="T:System.Uri"/> that represents the target web resource being searched for.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> contains at least one link to the <paramref name="target"/>, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.UriExists(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> exists.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> exists, otherwise <b>false</b>.</returns>
            <remarks>
                This method will return <b>false</b> if the <paramref name="uri"/> is a null reference or the <paramref name="uri"/> is otherwise inaccessible.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.UriExists(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> exists using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> exists, otherwise <b>false</b>.</returns>
            <remarks>
                This method will return <b>false</b> if the <paramref name="uri"/> is a null reference or the <paramref name="uri"/> is otherwise inaccessible.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/> and entity tag.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/> and entity tag.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.IWebProxy,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,Sage.SData.Client.Common.WebRequestOptions,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractDiscoverableSyndicationEndpoints(System.String)">
            <summary>
            Extracts auto-discoverable syndication endpoints from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints contained within the <paramref name="content"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractDiscoverableSyndicationEndpoints(System.IO.Stream)">
            <summary>
            Extracts auto-discoverable syndication endpoints from the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints contained within the <paramref name="stream"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocateDiscoverableSyndicationEndpoints(System.Uri)">
            <summary>
            Returns a collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the  web resource to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocateDiscoverableSyndicationEndpoints(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the supplied <see cref="T:System.Uri"/> 
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the web resource to parse.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractPingbackNotificationServer(System.String)">
            <summary>
            Extracts a <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that represents a pingback auto-discovery link from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that represents the pingback auto-discovery link extracted from the <paramref name="content"/>. 
                If no pingback auto-discovery link was found, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    Pingback enabled resources that utilize the link mechanism will contain a 
                    &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                </para>
                <para>
                    The <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that is returned will have an <i>Href</i> property that points to the 
                    absolute URI of the pingback XML-RPC server, and a <i>rel</i> attribute of pingback. 
                    The <i>Title</i> property and <i>type</i> attribute will also be extracted if available.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.IsPingbackEnabled(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a pingback enabled web resource.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> is pingback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to determine pingback enablement by examining the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.IsPingbackEnabled(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a pingback enabled web resource using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> is pingback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to determine pingback enablement by examining the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocatePingbackNotificationServer(System.Uri)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents a pingback XML-RPC server endpoint using the Pingback server auto-discovery mechanisms for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of a web resource to perform pingback auto-discovery against.</param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute URI of the pingback XML-RPC server. 
                If pingback server auto-discovery fails to locate a pingback XML-RPC server endpoint, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to locate the pingback XML-RPC server endpoint within the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocatePingbackNotificationServer(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents a pingback XML-RPC server endpoint using the Pingback server auto-discovery mechanisms for the supplied <see cref="T:System.Uri"/>
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of a web resource to perform pingback auto-discovery against.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute URI of the pingback XML-RPC server. 
                If pingback server auto-discovery fails to locate a pingback XML-RPC server endpoint, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to locate the pingback XML-RPC server endpoint within the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractTrackbackNotificationServers(System.String)">
            <summary>
            Extracts embedded RDF Trackback discovery meta-data from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs contained within the <paramref name="content"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.ExtractTrackbackNotificationServers(System.IO.Stream)">
            <summary>
            Extracts embedded RDF Trackback discovery meta-data from the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs contained within the <paramref name="stream"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.IsTrackbackEnabled(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a trackback enabled web resource.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> is trackback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    The auto-discovery mechanism for trackback utilizes embedded RDF meta-data elements within the web resource.
                </para>
                <para>
                    To conform to the Trackback 1.2 specification, the following information should apply to a trackback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Trackback enabled resources will contain one or more embedded RDF elements that describe where to send pings for web log entries.
                            </description>
                        </item>
                        <item>
                            <description>
                                A sample embedded RDF element looks like this: 
                                <para>
                                    &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;
                                        &lt;rdf:Description 
                                            rdf:about="http://www.foo.com/archive.html#foo" 
                                            dc:identifier="http://www.foo.com/archive.html#foo" 
                                            dc:title="Foo Bar" 
                                            trackback:ping="http://www.foo.com/tb.cgi/5" 
                                        /&gt;
                                    &lt;/rdf:RDF&gt;
                                </para>
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                    further information about the auto-discovery of Trackback ping URLs.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.IsTrackbackEnabled(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a trackback enabled web resource using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> is trackback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    The auto-discovery mechanism for trackback utilizes embedded RDF meta-data elements within the web resource.
                </para>
                <para>
                    To conform to the Trackback 1.2 specification, the following information should apply to a trackback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Trackback enabled resources will contain one or more embedded RDF elements that describe where to send pings for web log entries.
                            </description>
                        </item>
                        <item>
                            <description>
                                A sample embedded RDF element looks like this: 
                                <para>
                                    &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;
                                        &lt;rdf:Description 
                                            rdf:about="http://www.foo.com/archive.html#foo" 
                                            dc:identifier="http://www.foo.com/archive.html#foo" 
                                            dc:title="Foo Bar" 
                                            trackback:ping="http://www.foo.com/tb.cgi/5" 
                                        /&gt;
                                    &lt;/rdf:RDF&gt;
                                </para>
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                    further information about the auto-discovery of Trackback ping URLs.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocateTrackbackNotificationServers(System.Uri)">
            <summary>
            Returns a collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent trackback ping URL endpoints for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the  web resource to parse.</param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationDiscoveryUtility.LocateTrackbackNotificationServers(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent trackback ping URL endpoints for the supplied <see cref="T:System.Uri"/> 
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the web resource to parse.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A collection of <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationEncodingUtility">
            <summary>
            Provides methods for encoding and decoding information exposed by syndicated content. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.String)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied XML data.
            </summary>
            <param name="xml">The XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied XML data. 
                The supplied <paramref name="xml"/> data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xml"/> data is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xml"/> data is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.Stream)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="stream"/>. 
                The supplied <paramref name="stream"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <remarks>
                The character encoding of the supplied <paramref name="stream"/> is automatically determined based on the <i>encoding</i> attribute of the XML document declaration. 
                If the character encoding cannot be determined, a default encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.Stream"/> using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when reading the supplied <paramref name="stream"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="stream"/>. 
                The supplied <paramref name="stream"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encoding"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.TextReader)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="reader"/>. 
                The supplied <paramref name="reader"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
            </param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
            </param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the expected character encoding of the supplied <paramref name="source"/>. This value can be <b>null</b>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <remarks>
                If the <paramref name="encoding"/> is <b>null</b>, the character encoding of the supplied <paramref name="source"/> is determined automatically. 
                Otherwise the specified <paramref name="encoding"/> is used when reading the XML data represented by the supplied <paramref name="source"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,Sage.SData.Client.Common.WebRequestOptions,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the expected character encoding of the supplied <paramref name="source"/>. This value can be <b>null</b>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <remarks>
                If the <paramref name="encoding"/> is <b>null</b>, the character encoding of the supplied <paramref name="source"/> is determined automatically. 
                Otherwise the specified <paramref name="encoding"/> is used when reading the XML data represented by the supplied <paramref name="source"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateWebRequest(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Returns a <see cref="T:System.Net.WebRequest"/> that makes a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials if supported by the underlying protocol.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings if supported by the underlying protocol.
            </param>
            <returns>
                An <see cref="T:System.Net.WebRequest"/> that makes a request to the <paramref name="source"/>. If unable to create a <see cref="T:System.Net.WebRequest"/> for 
                the specified <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateWebRequest(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Returns a <see cref="T:System.Net.WebRequest"/> that makes a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>
                An <see cref="T:System.Net.WebRequest"/> that makes a request to the <paramref name="source"/>. If unable to create a <see cref="T:System.Net.WebRequest"/> for 
                the specified <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateWebResponse(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Returns the <see cref="T:System.Net.WebResponse"/> to a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials if supported by the underlying protocol.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings if supported by the underlying protocol.
            </param>
            <returns>
                An <see cref="T:System.Net.WebResponse"/> that contains the response from the requested resource. If unable to create a <see cref="T:System.Net.WebResponse"/> for 
                the requested <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.CreateWebResponse(System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Returns the <see cref="T:System.Net.WebResponse"/> to a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <returns>
                An <see cref="T:System.Net.WebResponse"/> that contains the response from the requested resource. If unable to create a <see cref="T:System.Net.WebResponse"/> for 
                the requested <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.DecodeBase64String(System.String)">
            <summary>
            Decodes a base64 encoded string.
            </summary>
            <param name="encodedValue">The base64 encoded string to decode.</param>
            <returns>A <see cref="T:System.IO.Stream"/> the represents the decoded result of the base64 encoded value.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encodedValue"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encodedValue"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.DecodeHtmlEscapedString(System.String)">
            <summary>
            Decodes an HTML escaped string.
            </summary>
            <param name="escapedValue">The HTML escaped string to decode.</param>
            <returns>A string the represents the unescaped result of the HTML escaped value.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="escapedValue"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="escapedValue"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.EncodeInvalidXmlHexadecimalCharacters(System.String)">
            <summary>
            Encodes the supplied string so that it can be safely represented in XML.
            </summary>
            <param name="content">A string that represents the XML data to parse for invalid XML hexadecimal characters.</param>
            <returns>A string that has been encoded to be safe for XML.</returns>
            <remarks>
                <para>The encoding process replaces invalid XML hexadecimal characters with their equivalent decimal representation.</para>
                <para>
                    Hexadecimal characters that are valid include: #x9, #xA, #xD, [#x20-#xD7FF], [#xE000-#xFFFD], [#x10000-#x10FFFF], 
                    and any Unicode character; excluding the surrogate blocks FFFE and FFFF.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.GetCharacterEncoding(System.Web.HttpRequest)">
            <summary>
            Extracts the character encoding for the content type of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </summary>
            <param name="request">The HTTP values sent by a client during a Web request.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents character encoding of the Content-Type <i>charset</i> attribute. 
                If the <i>charset</i> attribute is unavailable or invalid, returns <b>null</b>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="request"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.GetXmlEncoding(System.Byte[])">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied array of bytes.
            </summary>
            <param name="data">An array of bytes that represents an XML data source to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data source. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.GetXmlEncoding(System.IO.Stream)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents an XML data source to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data source. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.GetXmlEncoding(System.String)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied content.
            </summary>
            <param name="content">A string that represents the XML data to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.RemoveInvalidXmlHexadecimalCharacters(System.String)">
            <summary>
            Sanitizes the supplied string so that it can be safely represented in XML.
            </summary>
            <param name="content">A string that represents the XML data to parse for invalid XML hexadecimal characters.</param>
            <returns>A string that has been sanitized to be safe for XML.</returns>
            <remarks>
                <para>The sanitation process removes characters that are invalid for XML encoding.</para>
                <para>
                    Hexadecimal characters that are valid include: #x9, #xA, #xD, [#x20-#xD7FF], [#xE000-#xFFFD], [#x10000-#x10FFFF], 
                    and any Unicode character; excluding the surrogate blocks FFFE and FFFF.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.EncodeSafeDirectoryName(System.String)">
            <summary>
            Converts a string into a value that can be safely used as a <see cref="T:System.IO.Directory">directory</see> name.
            </summary>
            <param name="name">The directory name to encode.</param>
            <returns>A string that can be safely used as an argument when <see cref="M:System.IO.Directory.CreateDirectory(System.String)">creating a directory</see>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationEncodingUtility.GetStreamBytes(System.IO.Stream)">
            <summary>
            Gets an array of bytes that represent the data of the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to get an array of bytes for.</param>
            <returns>An array of bytes that represent the data of the supplied <paramref name="stream"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings">
            <summary>
            Specifies a set of features to support on a <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> object loaded by the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Common.SyndicationResourceLoadSettings)"/> method.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadSettings.characterEncoding">
            <summary>
            Private member to hold the character encoding to use when reading the syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadSettings.maximumEntitiesToRetrieve">
            <summary>
            Private member to hold a value indicating the maximum number of resource entities to retrieve from a syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadSettings.requestTimeout">
            <summary>
            Private member to hold a value that specifies the amount of time after which a asynchronous load operation call times out.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadSettings.supportedSyndicationExtensions">
            <summary>
            Private member to hold a collection of types that represent the syndication extensions supported by the load operation.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadSettings.syndicationExtensionAutodetectionEnabled">
            <summary>
            Private member to hold a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.AutoDetectExtensions">
            <summary>
            Gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
            <value>
                <b>true</b> if the syndication extensions supported by the load operation are automatically determined based on the XML namespaces declared on a syndication resource; otherwise <b>false</b>. 
                The default value is <b>true</b>.
            </value>
            <remarks>
                Automatic detection of supported syndication extensions will <b>not</b> remove any syndication extensions already added 
                to the <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.SupportedExtensions"/> collection prior to the load operation execution.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CharacterEncoding">
            <summary>
            Gets or sets the character encoding to use when parsing a syndication resource.
            </summary>
            <value>A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when parsing a syndication resource. The default value is <see cref="P:System.Text.Encoding.UTF8"/>.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.RetrievalLimit">
            <summary>
            Gets or sets the maximum number of resource entities to retrieve from a syndication resource.
            </summary>
            <value>The maximum number of entities to retrieve from a syndication resource. The default value is 0, which indicates there is <b>no limit</b>.</value>
            <remarks>
                This setting is typically used to optimize processing by reducing the number of resource entities that must be parsed. 
                Some syndication resources may not utilize this setting if they do not represent a list of retrievable entities.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value"/> is less than zero.</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.SupportedExtensions">
            <summary>
            Gets the syndication extensions to attempt to load from a syndication resource.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent syndication extension instances to attempt to instantiate during the load operation. 
                The default value is an <i>empty</i> collection.
            </value>
            <remarks>
                If <see cref="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.AutoDetectExtensions"/> is <b>true</b>, this collection will be automatically filled during the load operation based on the XML namespaces declared on the syndication resource. 
                Automatic detection will <b>not</b> remove any syndication extensions already added to this collection prior to the load operation execution.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadSettings.Timeout">
            <summary>
            Gets or sets a value that specifies the amount of time after which asynchronous load operations will time out.
            </summary>
            <value>An <see cref="T:System.TimeSpan"/> that specifies the time-out period. The default value is 15 seconds.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The time-out period is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The time-out period is greater than a year.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.op_Equality(Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.op_Inequality(Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.op_LessThan(Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadSettings.op_GreaterThan(Sage.SData.Client.Common.SyndicationResourceLoadSettings,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event.
            </summary>
            <remarks>
                A <see cref="E:Sage.SData.Client.Common.ISyndicationResource.Loaded"/> event occurs whenever the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/> 
                or <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> methods are called.
            </remarks>
            <seealso cref="T:Sage.SData.Client.Common.ISyndicationResource"/>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.emptyEventArguments">
            <summary>
            Private member to hold instance of event with no event data.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.eventNavigator">
            <summary>
            Private member to hold read-only XPathNavigator object for navigating the XML data used to load the syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.eventSource">
            <summary>
            Private member to hold the URI that the syndication resource information was retrieved from.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.eventOptions">
            <summary>
            Private member to hold the web request options.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.eventUserToken">
            <summary>
            Private member to hold an object containing state information that was passed to the asynchronous load operation.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="credentials">
               The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="proxy">
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,Sage.SData.Client.Common.WebRequestOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and user token.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="credentials">
               The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="proxy">
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="state">The user-defined object that was passed to the asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,Sage.SData.Client.Common.WebRequestOptions,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and user token.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="options">A <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> that holds options that should be applied to web requests.</param>
            <param name="state">The user-defined object that was passed to the asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Empty">
            <summary>
            Represents an syndication resource loaded event with no event data.
            </summary>
            <value>An uninitialized instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> class.</value>
            <remarks>The value of Empty is a read-only instance of <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/> equivalent to the result of calling the <see cref="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.#ctor"/> constructor.</remarks>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Credentials">
            <summary>
            Gets the network credentials used for authenticating the request to the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. 
                If the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> was not loaded by an Internet resource or no credentials were provided, returns <b>null</b>.
            </value>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Data">
            <summary>
            Gets a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication resource.
            </summary>
            <value>
                A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication resource.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Proxy">
            <summary>
            Gets the network proxy used to access the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. 
                If the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> was not loaded by an Internet resource or no proxy was specified, returns <b>null</b>.
            </value>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Source">
            <summary>
            Gets the <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. 
                If the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> was not loaded by an Internet resource, returns <b>null</b>.
            </value>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.State">
            <summary>
            Gets an <see cref="T:System.Object"/> containing state information that was passed to the asynchronous load operation.
            </summary>
            <value>
                A <see cref="T:System.Object"/> containing state information that was passed to the asynchronous load operation. 
                If the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> was not loaded by an Internet resource or no user token provided, returns <b>null</b>.
            </value>
            <seealso cref="M:Sage.SData.Client.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.op_Equality(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.op_Inequality(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.op_LessThan(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs.op_GreaterThan(Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs,Sage.SData.Client.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationResourceMetadata">
            <summary>
            Represents metadata associated with a <see cref="T:Sage.SData.Client.Common.ISyndicationResource">syndication resource</see>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceMetadata.resourceFormat">
            <summary>
            Private member to hold the syndication content format that the syndication resource conforms to.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceMetadata.resourceNamespaces">
            <summary>
            Private member to hold the XML namespaces declared in the syndication resource's root element.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceMetadata.resourceVersion">
            <summary>
            Private member to hold the version of the syndication specification that the resource conforms to.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceMetadata.resourceRootNode">
            <summary>
            Private member to hold a XPath navigator that can be used to navigate the root element of the syndication resource.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceMetadata"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the syndication resource meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Format">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> that the syndication resource conforms to.
            </summary>
            <value>
                A <see cref="T:Sage.SData.Client.Common.SyndicationContentFormat"/> enumeration value that indicates the syndication specification the resource conforms to. 
                If the syndication content format is unable to be determined, returns <see cref="F:Sage.SData.Client.Common.SyndicationContentFormat.None"/>.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Namespaces">
            <summary>
            Gets a dictionary of the XML namespaces declared in the syndication resource.
            </summary>
            <value>A dictionary of the resource's XML namespaces, keyed off of the namespace prefix. If no XML namespaces are declared on the root element of the resource, returns an empty dictionary.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Resource">
            <summary>
            Gets a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object that can be used to navigate the root element of the syndication resource.
            </summary>
            <value>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object that can be used to navigate the root element of the syndication resource.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Version"/> of the syndication specification that the resource conforms to.
            </summary>
            <value>The version number of the syndication specification that the resource conforms to. If format version is unable to be determined, returns <b>null</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.GetVersionFromAttribute(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Returns a <see cref="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Version"/> object for the value of the XML attribute in <paramref name="navigator"/> with a local name specified by <paramref name="name"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the XML attribute value from.</param>
            <param name="name">The name of the attribute to parse in the <paramref name="navigator"/>.</param>
            <returns>The <see cref="P:Sage.SData.Client.Common.SyndicationResourceMetadata.Version"/> represented by the value of the specified XML attribute. If unable to determine version, returns <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseApmlResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Attention Profiling Markup Language (APML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Attention Profiling Markup Language (APML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseAtomResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Atom formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Atom formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseAtomPublishingCategoriesResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Atom Publishing Protocol category document formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Atom formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseAtomPublishingServiceResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Atom Publishing Protocol service document formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Atom formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseBlogMLResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a  Web Log Markup Language (BlogML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a  Web Log Markup Language (BlogML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseMicroSummaryGeneratorResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Microsummary Generator formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Microsummary Generator formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseNewsMLResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a News Markup Language (NewsML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a News Markup Language (NewsML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseOpenSearchDescriptionResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a OpenSearch Description formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a OpenSearch Description formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseOpmlResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a  Outline Processor Markup Language (OPML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a  Outline Processor Markup Language (OPML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseRsdResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Really Simple Discovery (RSD) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Really Simple Discovery (RSD) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.TryParseRssResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Really Simple Syndication (RSS) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Really Simple Syndication (RSS) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Extracts the content format, version, and XML namespaces for a syndication resource from the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="resource">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the syndication resource meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceMetadata"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceMetadata"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.op_Equality(Sage.SData.Client.Common.SyndicationResourceMetadata,Sage.SData.Client.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.op_Inequality(Sage.SData.Client.Common.SyndicationResourceMetadata,Sage.SData.Client.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.op_LessThan(Sage.SData.Client.Common.SyndicationResourceMetadata,Sage.SData.Client.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceMetadata.op_GreaterThan(Sage.SData.Client.Common.SyndicationResourceMetadata,Sage.SData.Client.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings">
            <summary>
            Specifies a set of features to support on a <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> object persisted by the <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.IO.Stream,Sage.SData.Client.Common.SyndicationResourceSaveSettings)"/> method.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceSaveSettings.characterEncoding">
            <summary>
            Private member to hold the character encoding to use when reading the syndication resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceSaveSettings.minimizeOutputSize">
            <summary>
            Private member to hold a value indicating if write/save operations should attempt to minimize the size of the resulting output.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceSaveSettings.supportedSyndicationExtensions">
            <summary>
            Private member to hold a collection of types that represent the syndication extensions supported by the save operation.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.SyndicationResourceSaveSettings.syndicationExtensionAutodetectionEnabled">
            <summary>
            Private member to hold a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.AutoDetectExtensions">
            <summary>
            Gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
            <value>
                <b>true</b> if the syndication extensions supported by the save operation are automatically determined based on the syndication extensions added to the syndication resource and its child entities; otherwise <b>false</b>. 
                The default value is <b>true</b>.
            </value>
            <remarks>
                Automatic detection of supported syndication extensions will <b>not</b> remove any syndication extensions already added 
                to the <see cref="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.SupportedExtensions"/> collection prior to the save operation execution.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.CharacterEncoding">
            <summary>
            Gets or sets the character encoding to use when persisting a syndication resource.
            </summary>
            <value>A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when persisting a syndication resource. The default value is <see cref="P:System.Text.Encoding.UTF8"/>.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.MinimizeOutputSize">
            <summary>
            Gets or sets a value indicating if syndication resource persist operations should attempt to minimize the physical size of the resulting output.
            </summary>
            <value><b>true</b> if output size should be as small as possible; otherwise <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.SupportedExtensions">
            <summary>
            Gets the syndication extensions that extend the syndication resource.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent syndication extension instances used during the save operation. 
                The default value is an <i>empty</i> collection.
            </value>
            <remarks>
                During a save operation, each of these syndication extension types is instantiated and used to write the prefixed XML namespace declarations on the root syndication resource entity.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.SyndicationResourceSaveSettings"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.op_Equality(Sage.SData.Client.Common.SyndicationResourceSaveSettings,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.op_Inequality(Sage.SData.Client.Common.SyndicationResourceSaveSettings,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.op_LessThan(Sage.SData.Client.Common.SyndicationResourceSaveSettings,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.SyndicationResourceSaveSettings.op_GreaterThan(Sage.SData.Client.Common.SyndicationResourceSaveSettings,Sage.SData.Client.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata">
            <summary>
            Represents metadata about a web log entry that allows clients to auto-discover the TrackBack ping URL for that entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.RDF_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Resource Description Framework (RDF) entities.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.DUBLIN_CORE_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Dublin Core entities.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.TRACKBACK_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Trackback entities.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryTitle">
            <summary>
            Private member to hold the title of the discoverable web log entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryAbout">
            <summary>
            Private member to hold Resource Description Framework entity reference.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryIdentifier">
            <summary>
            Private member to hold the unique identifier of the discoverable web log entry.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryPingEndpoint">
            <summary>
            Private member to hold Trackback ping endpoint of the discoverable web log entry.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the Trackback auto-discovery meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.About">
            <summary>
            Gets or sets the Resource Description Framework (RDF) entity reference.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the Resource Description Framework (RDF) entity reference.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.Identifier">
            <summary>
            Gets or sets the unique identifier for the discoverable web log entry.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the unique identifier for the discoverable web log entry.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.PingUrl">
            <summary>
            Gets or sets the Trackback ping notification endpoint for the discoverable web log entry.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the Trackback ping URL for the discoverable web log entry.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.Title">
            <summary>
            Gets or sets the title of the discoverable web log entry.
            </summary>
            <value>The title of the discoverable web log entry.</value>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the Trackback auto-discovery meta-data from.</param>
            <returns><b>true</b> if Trackback auto-discovery meta-data was extracted from the <paramref name="navigator"/>, otherwise <b>false</b>.</returns>
            <remarks>
                Will return <b>false</b> if the <i>trackback:ping</i> attribute is not found on the <b>rdf:Description</b> element.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Common.TrackbackDiscoveryMetadata"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.op_Equality(Sage.SData.Client.Common.TrackbackDiscoveryMetadata,Sage.SData.Client.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.op_Inequality(Sage.SData.Client.Common.TrackbackDiscoveryMetadata,Sage.SData.Client.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.op_LessThan(Sage.SData.Client.Common.TrackbackDiscoveryMetadata,Sage.SData.Client.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Common.TrackbackDiscoveryMetadata.op_GreaterThan(Sage.SData.Client.Common.TrackbackDiscoveryMetadata,Sage.SData.Client.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Common.WebRequestOptions">
            <summary>
            Holds options that should be applied to web requests.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.WebRequestOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Common.WebRequestOptions.#ctor(System.Net.ICredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> class using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the source resource when required. This value can be <b>null</b>.
            </param>
        </member>
        <member name="M:Sage.SData.Client.Common.WebRequestOptions.#ctor(System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Common.WebRequestOptions"/> class using the specified <see cref="T:System.Net.ICredentials">credentials</see> and  <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the source resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the source resource when required. This value can be <b>null</b>.
            </param>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.AuthenticationLevel">
            <summary>Gets or sets values indicating the level of authentication and impersonation used for this request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.CachePolicy">
            <summary>Gets or sets the cache policy for this request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ConnectionGroupName">
            <summary>Gets or sets the name of the connection group for the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Credentials">
            <summary>Gets or sets the network credentials used for authenticating the request with the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Headers">
            <summary>Gets or sets the collection of header name/value pairs associated with the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ImpersonationLevel">
            <summary>Gets or sets the impersonation level for the current request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.PreAuthenticate">
            <summary>Indicates whether to pre-authenticate the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Proxy">
            <summary>Gets or sets the network proxy to use to access this Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Timeout">
            <summary>Gets or sets the length of time before the request times out.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.UseDefaultCredentials">
            <summary>Gets or sets a <see cref="T:System.Boolean"/> value that controls whether <see cref="P:System.Net.CredentialCache.DefaultCredentials"></see> are sent with requests.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ContentOffset">
            <summary>Gets or sets a byte offset into the file being downloaded by this request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.EnableSsl">
            <summary>Gets or sets a <see cref="T:System.Boolean"/> that specifies that an SSL connection should be used.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.RenameTo">
            <summary>Gets or sets the new name of a file being renamed.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.UseBinary">
            <summary>Gets or sets a <see cref="T:System.Boolean"/> value that specifies the data type for file transfers.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.UsePassive">
            <summary>Gets or sets the behavior of a client application's data transfer process.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Accept">
            <summary>Gets or sets the value of the Accept HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.AllowAutoRedirect">
            <summary>Gets or sets a value that indicates whether the request should follow redirection responses.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.AllowWriteStreamBuffering">
            <summary>Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.AutomaticDecompression">
            <summary>Gets or sets the type of decompression that is used.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Connection">
            <summary>Gets or sets the value of the Connection HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ContinueDelegate">
            <summary>Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.CookieContainer">
            <summary>Gets or sets the cookies associated with the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Expect">
            <summary>Gets or sets the value of the Expect HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.MaximumAutomaticRedirections">
            <summary>Gets or sets the maximum number of redirects that the request follows.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.MaximumResponseHeadersLength">
            <summary>Gets or sets the maximum allowed length of the response headers.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.MediaType">
            <summary>Gets or sets the media type of the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Pipelined">
            <summary>Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ProtocolVersion">
            <summary>Gets or sets the version of HTTP to use for the request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.Referer">
            <summary>Gets or sets the value of the Referer HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.SendChunked">
            <summary>Gets or sets a value that indicates whether to send data in segments to the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.TransferEncoding">
            <summary>Gets or sets the value of the Transfer-encoding HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.UnsafeAuthenticatedConnectionSharing">
            <summary>Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.UserAgent">
            <summary>Gets or sets the value of the User-agent HTTP header.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ClientCertificates">
            <summary>Gets or sets the collection of security certificates that are associated with this request.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.KeepAlive">
            <summary>Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</summary>
        </member>
        <member name="P:Sage.SData.Client.Common.WebRequestOptions.ReadWriteTimeout">
            <summary>Gets or sets a time-out when writing to or reading from a stream.</summary>
        </member>
        <member name="M:Sage.SData.Client.Common.WebRequestOptions.ApplyOptions(System.Net.WebRequest)">
            <summary>
            Applies all options on the current instance to the supplied <see cref="T:System.Net.WebRequest"/>.
            </summary>
            <param name="request">A <see cref="T:System.Net.WebRequest"/> that should be configured.</param>
        </member>
        <member name="T:Sage.SData.Client.Core.AsyncRequest">
            <summary>
            Encapsulates the return value of an asychronous call to a service operation or a batch operation.
            </summary>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the AsyncRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="CREATE a Service Operation (Asynchronous)" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.AsyncRequest.#ctor(Sage.SData.Client.Core.ISDataService,System.String,Sage.SData.Client.Framework.Tracking)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.AsyncRequest"/> class.
            </summary>
            <param name="service">The service that performs requests.</param>
            <param name="trackingUrl">The url used to make progress requests.</param>
            <param name="tracking">The tracking information from the initial request.</param>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.Service">
            <summary>
            The service that performs requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.Phase">
            <summary>
            The current phase of the process.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.PhaseDetail">
            <summary>
            The description of the current phase.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.Progress">
            <summary>
            The percentage of the process that has been completed so far.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.ElapsedSeconds">
            <summary>
            The amount of time in seconds that the process has been running.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.RemainingSeconds">
            <summary>
            The amount of time in seconds that the process has remaining.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.PollingMilliseconds">
            <summary>
            The amount of time in milliseconds that clients should wait between progress requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AsyncRequest.TrackingUrl">
            <summary>
            A url representing the location where progress requests can be made.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.AsyncRequest.Refresh">
            <summary>
            Makes a progress update request and refreshes the various progress properties.
            If the process has completed on the server then a <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/>
            result will be returned. Otherwise a null reference is returned.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Core.AtomFeedReader">
            <summary>
            A standard list that fetches pages of feed entries as the user
            iterates over, indexes into or navigates through it.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.ItemsAvailable">
            <summary>
            The total number of items available.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.EntryIndex">
            <summary>
            The current index of the current entry. This value is 1-based.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.Request">
            <summary>
            The request used to fetch pages of feed entries.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.Parent">
            <summary>
            The request used to fetch pages of feed entries.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.#ctor(Sage.SData.Client.Core.SDataResourceCollectionRequest)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.AtomFeedReader"/> class.
            </summary>
            <param name="request">The request used to fetch pages of feed entries.</param>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.Read">
            <summary>
            Loads the reader and configures the internal pages.
            </summary>
            <returns>A value indicating whether the reader was successfully configured.</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the AtomFeedReader class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ ResourceCollection using AtomFeedReader" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.First">
            <summary>
            Sets the current entry to the first item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.MoveFirst">
            <summary>
            Sets the current entry to the first item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.Last">
            <summary>
            Sets the current entry to the last item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.MoveLast">
            <summary>
            Sets the current entry to the last item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.MoveNext">
            <summary>
            Sets the current entry to the next item in the reader.
            If the end of the current page is reached then the next page will be retrieved.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.Previous">
            <summary>
            Sets the current entry to the previous item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.AtomFeedReader.MovePrevious">
            <summary>
            Sets the current entry to the previous item in the reader.
            </summary>
            <returns>A value indicating whether the navigation was successful.</returns>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.Current">
            <summary>
            The current entry.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.AtomFeedReader.CurrentIndex">
            <summary>
            The current index of the current entry. This value is 0-based.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Core.BatchProcess">
            <summary>
            Class used to batch process atom entries for Insert, Update, and Delete
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Core.BatchProcess.Instance">
            <summary>
            The only instance of the BatchProcess class
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.BatchProcess.Requests">
            <summary>
            Current stack
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.BatchProcess.AddToBatch(Sage.SData.Client.Core.SDataBatchRequestItem)">
            <summary>
            Adds a url to the batch for processing
            </summary>
            <param name="item">url for batch item</param>
            <returns>True if an appropriate pending batch operation was found</returns>
        </member>
        <member name="T:Sage.SData.Client.Core.ISDataRequestSettings">
            <summary>
            Interface which defines the settings common to all
            SData Requests
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataRequestSettings.Protocol">
            <summary>
            Accessor method for protocol
            </summary>
            <remarks>HTTP is the default but can be HTTPS</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataRequestSettings.ServerName">
            <remarks>IP address is also allowed (192.168.1.1).
            Can be followed by port number. For example www.example.com:5493. 
            5493 is the recommended port number for SData services that are not exposed on the Internet.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataRequestSettings.Port">
            <summary>
            Accessor method for port
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataRequestSettings.VirtualDirectory">
             <summary>
             Accessor method for virtual directory
             </summary>
             <remarks>
             Must be sdata, unless the technical framework imposes something different.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Core.ISDataService">
            <summary>
            Interface for SDataServices
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Initialized">
            <summary>
            Flag set when service has been initialized
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Url">
            <remarks>
            Creates the service with predefined values for the url
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Protocol">
            <summary>
            Accessor method for protocol, 
            </summary>
            <remarks>HTTP is the default but can be HTTPS</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.ServerName">
            <remarks>IP address is also allowed (192.168.1.1).
            Can be followed by port number. For example www.example.com:5493. 
            5493 is the recommended port number for SData services that are not exposed on the Internet.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Port">
            <summary>
            Accessor method for port
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.VirtualDirectory">
             <summary>
             Accessor method for virtual directory
             </summary>
             <remarks>Must be sdata, unless the technical framework imposes something different.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Core.ISDataService.ApplicationName"/> is used to identify users specific to an application. That is, the same syndication resource can exist in the data store 
                for multiple applications that specify a different <see cref="P:Sage.SData.Client.Core.ISDataService.ApplicationName"/>. This enables multiple applications to use the same data store to store resource 
                information without running into duplicate syndication resource conflicts. Alternatively, multiple applications can use the same syndication resource data store 
                by specifying the same <see cref="P:Sage.SData.Client.Core.ISDataService.ApplicationName"/>. The <see cref="P:Sage.SData.Client.Core.ISDataService.ApplicationName"/> can be set programmatically or declaratively in the configuration for the application.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.ContractName">
            <summary>
            Accessor method for contractName
            </summary>
            <remarks>An SData service can support several “integration contracts” side-by-side. 
            For example, a typical Sage ERP service will support a crmErp contract which exposes 
            the resources required by CRM integration (with schemas imposed by the CRM/ERP contract) 
            and a native or default contract which exposes all the resources of the ERP in their native format.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.DataSet">
             <summary>
             Accessor method for dataSet
             </summary>
             <remarks>Identifies the dataset when the application gives access to several datasets, such as several companies and production/test datasets.
             If the application can only handle a single dataset, or if it can be configured with a default dataset, 
             a hyphen can be used as a placeholder for the default dataset. 
             For example, if prod is the default dataset in the example above, the URL could be shortened as:
             http://www.example.com/sdata/sageApp/test/-/accounts?startIndex=21&amp;count=10 
             If several parameters are required to specify the dataset (for example database name and company id), 
             they should be formatted as a single segment in the URL. For example, sageApp/test/demodb;acme/accounts -- the semicolon separator is application specific, not imposed by SData.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.UserName">
            <summary>
            Get set for the user name to authenticate with
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Password">
            <summary>
            Get/set for the password to authenticate with
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Timeout">
            <summary>
            Gets or sets the timeout in milliseconds used during requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.Cookies">
            <summary>
            Gets or sets the cookies passed during requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.ISDataService.UserAgent">
            <summary>
            Gets or sets the user agent passed during requests.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.CreateEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Adds a new syndication resource to the data source.
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="entry">The <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to be created within the data source.</param>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.CreateFeed(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Adds new syndication resource to the data source returning an AtomFeed
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="feed">The <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> to be created within the data source.</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.CreateFeed(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomFeed,System.String@)">
            <summary>
            Adds new syndication resource to the data source returning an AtomFeed
            </summary>
            <param name="request"></param>
            <param name="feed"></param>
            <param name="eTag"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.CreateAsync(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Common.ISyndicationResource)">
            <summary>
            Asynchronous PUT to the server
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="resource">The resource that should be created asynchronously.</param>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.Delete(System.String)">
            <summary>
            Generic delete from server
            </summary>
            <param name="url">the url for the operation</param>
            <returns><b>true</b> returns true if the operation was successful</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.DeleteEntry(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Removes a resource from the syndication data source.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.DeleteEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Removes a resource from the syndication data source.
            </summary>
            <param name="request">The request from the syndication data source for the resource to be removed.</param>
            <param name="entry">The resource that is being deleted</param>
            <returns><b>true</b> if the syndication resource was successfully deleted; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.Read(System.String)">
            <summary>
            generic read from the specified url
            </summary>
            <param name="url">url to read from </param>
            <returns>string response from server</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.ReadFeed(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Reads resource information from the data source based on the URL.
            </summary>
            <param name="request">request for the syndication resource to get information for.</param>
            <returns>AtomFeed <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> populated with the specified resources's information from the data source.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.ReadFeed(Sage.SData.Client.Core.SDataBaseRequest,System.String@)">
            <summary>
            Reads resource information from the data source based on the URL and the specified ETag.
            </summary>
            <param name="request"></param>
            <param name="eTag"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.ReadEntry(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Reads resource information from the data source based on the URL.
            </summary>
            <param name="request">request for the syndication resource to get information for.</param>
            <returns>An AtomEntry <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> populated with the specified resources's information from the data source.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.ReadEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Reads resource information from the data source based on the URL and the ETag of the specified entry.
            </summary>
            <param name="request"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.ReadSchema(Sage.SData.Client.Core.SDataResourceSchemaRequest)">
            <summary>
            Reads xsd from a $schema request
            </summary>
            <param name="request">url for the syndication resource to get information for.</param>
            <returns>A schema or a schema resource</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.UpdateEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Updates information about a syndication resource in the data source.
            </summary>
            <param name="request">The url from the syndication data source for the resource to be updated.</param>
            <param name="entry">
                An object that implements the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> interface that represents the updated information for the resource.
            </param>
        </member>
        <member name="M:Sage.SData.Client.Core.ISDataService.Initialize">
            <summary>
            Initializes the <see cref="T:Sage.SData.Client.Core.SDataService"/> 
            </summary>
            <remarks>Set the User Name and Password to authenticate with and build the url</remarks>
        </member>
        <member name="T:Sage.SData.Client.Core.IntermediateApplicationsRequest">
            <summary>
            Intermediate request to retrieve enumeration of applications
            </summary>
            <example>http://sdata.acme.com/sdata</example>
            <remarks>Feed level category = provider Entry level category = application</remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateApplicationsRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor 
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateApplicationsRequest.Read">
            <summary>
            Reads the AtomFeed for enumeration of applications
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IntermediateApplicatonsRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ Enumeration of Applications" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.IntermediateContractsRequest">
            <summary>
            Intermediate request to retrieve enumeration of contracts
            from the specified application and dataset
            </summary>
            <example>http://sdata.acme.com/sdata/sageApp</example>
            <remarks>Feed level category = application Entry level category = contract</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.IntermediateContractsRequest.ApplicationName">
            <summary>
            Accessor method for application
            </summary>
            <remarks>the application name</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.IntermediateContractsRequest.Application">
            <summary>
            Accessor method for application
            </summary>
            <remarks>the application name</remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateContractsRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateContractsRequest.Read">
            <summary>
            Reads the AtomFeed for enumeration of contracts
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IntermediateContractsRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ Enumeration of Contracts" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.IntermediateDataSetsRequest">
            <summary>
            Intermediate URL to retrieve enumeration of datasets
            from the specified application
            </summary>
            <example>http://sdata.acme.com/sdata/sageApp/test</example>
            <remarks>Feed level category = contract Entry level category = dataset</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.IntermediateDataSetsRequest.ContractName">
            <summary>
            Accessor method for contractName
            </summary>
            <remarks>An SData service can support several “integration contracts” side-by-side. 
            For example, a typical Sage ERP service will support a crmErp contract which exposes 
            the resources required by CRM integration (with schemas imposed by the CRM/ERP contract) 
            and a native or default contract which exposes all the resources of the ERP in their native format.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateDataSetsRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateDataSetsRequest.Read">
            <summary>
            Reads the AtomFeed for enumeration of datasets
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IntermediateDataSetsRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ Enumeration of DataSets" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.IntermediateResourceCollectionsRequest">
            <summary>
            Intermediate request to retrieve enumeration of resource collections
            from the specified by a given contract
            </summary>
            <example>http://sdata.acme.com/sdata/sageApp/test/prod</example>
            <remarks>
            Feed level category = dataset Entry level category = collection
            Enumeration of resource collections exposed by the test contract
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.IntermediateResourceCollectionsRequest.DataSet">
             <summary>
             Accessor method for dataSet
             </summary>
             <remarks>Identifies the dataset when the application gives access to several datasets, such as several companies and production/test datasets.
             If the application can only handle a single dataset, or if it can be configured with a default dataset, 
             a hyphen can be used as a placeholder for the default dataset. 
             For example, if prod is the default dataset in the example above, the URL could be shortened as:
             http://www.example.com/sdata/sageApp/test/-/accounts?startIndex=21&amp;count=10 
             If several parameters are required to specify the dataset (for example database name and company id), 
             they should be formatted as a single segment in the URL. For example, sageApp/test/demodb;acme/accounts -- the semicolon separator is application specific, not imposed by SData.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateResourceCollectionsRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateResourceCollectionsRequest.Read">
            <summary>
            Reads the AtomFeed for enumeration of resource collections
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IntermediateResourceCollectionsRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ Enumeration of Resource Collections" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.IntermediateServicesRequest">
            <summary>
            Intermediate URL to retrieve enumeration of services
            from the specified contract or contract and resource kind
            </summary>
            <example>
            http://sdata.acme.com/sdata/sageApp/test/prod/$service
            http://sdata.acme.com/sdata/sageApp/test/prod/accounts/$service
            </example>
            <remarks>Feed level category = service field level category = operation</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.IntermediateServicesRequest.ResourceKind">
            <summary>
            Accessor method for resourceKind
            </summary>
            <remarks>
            This URL segment identifies the kind of resource that is queried (account, contact, salesOrder, etc.)
            This URL returns the collection of all account resources, as an Atom feed. 
            If the contract exposes a large number of resources kinds, a functional group can be inserted before the 
            resource kind segment (eventually a hierarchy of functional groups), which act as a folder (a hierarchy of folders) to organize the resources.
            Typical functional groups would be financials, commercials, HR, etc.
            NOTE Can be empty
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.IntermediateServicesRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.IntermediateServicesRequest"/> class.
            </summary>
            <param name="service"></param>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataApplicationRequest">
            <summary>
            Base class for urls containing Application and Contract
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataApplicationRequest.ApplicationName">
            <summary>
            Accessor method for application
            </summary>
            <remarks>the application name</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataApplicationRequest.Application">
            <summary>
            Accessor method for application
            </summary>
            <remarks>the application name</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataApplicationRequest.ContractName">
            <summary>
            Accessor method for contractName
            </summary>
            <remarks>An SData service can support several “integration contracts” side-by-side. 
            For example, a typical Sage ERP service will support a crmErp contract which exposes 
            the resources required by CRM integration (with schemas imposed by the CRM/ERP contract) 
            and a native or default contract which exposes all the resources of the ERP in their native format.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataApplicationRequest.DataSet">
             <summary>
             Accessor method for dataSet
             </summary>
             <remarks>Identifies the dataset when the application gives access to several datasets, such as several companies and production/test datasets.
             If the application can only handle a single dataset, or if it can be configured with a default dataset, 
             a hyphen can be used as a placeholder for the default dataset. 
             For example, if prod is the default dataset in the example above, the URL could be shortened as:
             http://www.example.com/sdata/sageApp/test/-/accounts?startIndex=21&amp;count=10 
             If several parameters are required to specify the dataset (for example database name and company id), 
             they should be formatted as a single segment in the URL. For example, sageApp/test/demodb;acme/accounts -- the semicolon separator is application specific, not imposed by SData.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataApplicationRequest.ResourceKind">
            <summary>
            Accessor method for resourceKind
            </summary>
            <remarks>
            This URL segment identifies the kind of resource that is queried (account, contact, salesOrder, etc.)
            This URL returns the collection of all account resources, as an Atom feed. 
            If the contract exposes a large number of resources kinds, a functional group can be inserted before the 
            resource kind segment (eventually a hierarchy of functional groups), which act as a folder (a hierarchy of folders) to organize the resources.
            Typical functional groups would be financials, commercials, HR, etc.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataApplicationRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataBaseRequest">
            <summary>
            Base class for all SData Requests
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Core.SDataBaseRequest.Http">
            <summary>
            Protocol value for http
            </summary>
            <remarks>the default</remarks>
        </member>
        <member name="F:Sage.SData.Client.Core.SDataBaseRequest.Https">
            <summary>
            Protocol value for https
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.Protocol">
            <summary>
            Accessor method for protocol
            </summary>
            <remarks>HTTP is the default but can be HTTPS</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.ServerName">
            <summary>
            Accessor method for server
            </summary>
            <remarks>IP address is also allowed (192.168.1.1).
            Can be followed by port number. For example www.example.com:5493. 
            5493 is the recommended port number for SData services that are not exposed on the Internet.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.Port">
            <summary>
            Accessor method for port
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.VirtualDirectory">
             <summary>
             Accessor method for virtual directory
             </summary>
             <remarks>Must be sdata, unless the technical framework imposes something different.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.QueryValues">
            <summary>
            Dictionary of query name-value pairs
            </summary>
            <example>where, salesorderamount lt 15.00
            orderby, salesorderid
            </example>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBaseRequest.Service">
            <summary>
            the ISDataService to use for this request
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataBaseRequest.ToString">
            <summary>
            function to format url string for the request
            </summary>
            <returns>formatted string</returns>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataBatchRequest">
            <summary>
            SData Batch URL class
            </summary>
            <example>http://sdata/sageApp/test/-/salesOrders/$batch </example>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequest.Items">
            <summary>
            Collection of batch request items
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequest.Requests">
            <summary>
            Collection of batch request items
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataBatchRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataBatchRequest.CreateAsync">
            <summary>
            Processes the request asynchronously
            </summary>
            <returns>AsyncRequest object to manage the transaction</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataBatchRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="CREATE a BATCH Operation (Asynchronous)" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataBatchRequest.CreateAsync(System.String)">
            <summary>
            Processes the request asynchronously
            </summary>
            <param name="trackingId">unique identifier for the async transaction</param>
            <returns>AsyncRequest object to manage the transaction</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataBatchRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="CREATE a BATCH Operation (Asynchronous)" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataBatchRequest.Commit">
            <summary>
            Processes the batch
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataBatchRequestItem">
            <summary>
            SData batch request item class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequestItem.Url">
            <summary>
            The url of the request item.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequestItem.Method">
            <summary>
            The HTTP method of the request item.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequestItem.Entry">
            <summary>
            The input entry of the request item.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataBatchRequestItem.ETag">
            <summary>
            The ETag of the request item.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataClientException">
            <summary>
            Exception for SDataClient
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataClientException.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataClientException.#ctor(System.String)">
            <summary>
            costructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataClientException.#ctor(System.String,System.Exception)">
            <summary>
            constructor
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataEndPointCollectionRequest">
            <summary>
            SData request for an endpoint collection
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataEndPointCollectionRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataEndPointCollectionRequest.Read">
            <summary>
            Reads the AtomFeed for a resource collection
            </summary>
            <returns>AtomFeed</returns>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataOperationalRequest">
            <summary>
            Base classes for non Resource based URLs
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataOperationalRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataResourceCollectionRequest">
            <summary>
            SData URL for a resource collection
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataResourceCollectionRequest.StartIndex">
            <summary>
            Indicates the index of the first resource returned by the query. This index is 1-based (not 0-based).
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataResourceCollectionRequest.Count">
            <summary>
            Indicates the number of resources requested by the service consumer.
            The service may choose to return a different number of resources and it
            indicates this by setting the itemsPerPage element in the returned feed.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceCollectionRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceCollectionRequest.Read">
            <summary>
            Reads the AtomFeed for a resource collection
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataResourceCollectionRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Resource Collection Feed" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceCollectionRequest.ExecuteReader">
            <summary>
            Performs initial read from AtomFeedReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceCollectionRequest.Read(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Performs initial read from AtomFeedReader
            </summary>
            <param name="feed">the feed</param>
            <returns></returns>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataResourcePropertyRequest">
            <summary>
            SData Resource Property URL
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataResourcePropertyRequest.ResourceProperties">
            <summary>
            Dictionary containing the resource properties
            </summary>
            <remarks>
            SData only allows “relationship properties” in this context, 
            i.e., properties that point to another resource or to a collection of related resources. 
            So, properties like postalAddress or contacts are valid in the example above 
            (assuming that address and contact are treated as resource kinds by the service) 
            but a property like accountName would not be allowed (at least in a first version of the SData standard, this restriction may be lifted later).
            If the relationship designates a single resource, as in the example above (an account has a single postal address), the URL returns an Atom entry. 
            If the relationship designates a collection of resources (if we had used a property like addresses in the example above), the URL returns an Atom feed. 
            The sme:isCollection schema attribute can be used to determine whether the relationships is a collection or not (see Relationship Definition section for details).
            SData only allows property segments following a URL that identifies a single resource. So, URLs like accounts('A001')/postalAddress or accounts('A001')/contacts 
            are valid but a URL like accounts/postalAddress (all postal addresses of all accounts) is invalid.
            SData allows property segments to be chained, as long as the previous rule is satisfied. So, the following URLs are also valid:
            http://sdata.acme.com/sdata/sageApp/test/accounts('A001')/postalAddress/country
            http://sdata.acme.com/sdata/sageApp/test/accounts('A001')/addresses(type eq 'postal')/country
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourcePropertyRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourcePropertyRequest.ReadFeed">
            <summary>
            Reads the AtomFeed for the resource property
            </summary>
            <returns>AtomFeed</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataResourceProperty class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Resource Property Request (AtomFeed)" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourcePropertyRequest.Read">
            <summary>
            Reads the AtomEntry for the resource property
            </summary>
            <returns>AtomEntry</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataResourcePropertyRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Resource Property (AtomEntry)" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataResourceSchemaRequest">
            <summary>
            Request to to get resource schema
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataResourceSchemaRequest.Version">
            <summary>
            Accessor method for version
            </summary>
            <remarks>
            SData recommends that schema links include a version parameter. 
            This enables consumers to cache them more efficiently (see Resource Versioning section for details).
            NOTE Not Required
            </remarks>
            <example>
            without resource kind http://sdata.acme.com/sdata/sageApp/test/$schema 
            with resource kind and version http://sdata.acme.com/sdata/sageApp/test/accounts/$schema?version=5
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceSchemaRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataResourceSchemaRequest.Read">
            <summary>
            Reads the Xml Schema for a resource
            </summary>
            <returns>XmlSchema</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataResourceSchemaRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Resource Schema" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataService">
            <summary>
            Service class for processing SData Request
            </summary>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataService class.">
                    <code 
                        source=".\Example.cs" 
                        region="SDataService Configuration" 
                    />
                </code>
            </example>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Initialized">
            <summary>
            Flag set when Service is initialized
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Url">
            <remarks>
            Creates the service with predefined values for the url
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Protocol">
            <summary>
            Accessor method for protocol, 
            </summary>
            <remarks>HTTP is the default but can be HTTPS</remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.ServerName">
            <remarks>
            IP address is also allowed (192.168.1.1).
            Can be followed by port number. For example www.example.com:5493. 
            5493 is the recommended port number for SData services that are not exposed on the Internet.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Port">
            <summary>
            Gets or sets the port.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.VirtualDirectory">
             <summary>
             Accessor method for virtual directory
             </summary>
             <remarks>Must be sdata, unless the technical framework imposes something different.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
            <remarks>
                The <see cref="P:Sage.SData.Client.Core.SDataService.ApplicationName"/> is used to identify users specific to an application. That is, the same syndication resource can exist in the data store 
                for multiple applications that specify a different <see cref="P:Sage.SData.Client.Core.SDataService.ApplicationName"/>. This enables multiple applications to use the same data store to store resource 
                information without running into duplicate syndication resource conflicts. Alternatively, multiple applications can use the same syndication resource data store 
                by specifying the same <see cref="P:Sage.SData.Client.Core.SDataService.ApplicationName"/>. The <see cref="P:Sage.SData.Client.Core.SDataService.ApplicationName"/> can be set programmatically or declaratively in the configuration for the application.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.ContractName">
            <summary>
            Accessor method for contractName
            </summary>
            <remarks>An SData service can support several “integration contracts” side-by-side. 
            For example, a typical Sage ERP service will support a crmErp contract which exposes 
            the resources required by CRM integration (with schemas imposed by the CRM/ERP contract) 
            and a native or default contract which exposes all the resources of the ERP in their native format.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.DataSet">
             <summary>
             Accessor method for dataSet
             </summary>
             <remarks>Identifies the dataset when the application gives access to several datasets, such as several companies and production/test datasets.
             If the application can only handle a single dataset, or if it can be configured with a default dataset, 
             a hyphen can be used as a placeholder for the default dataset. 
             For example, if prod is the default dataset in the example above, the URL could be shortened as:
             http://www.example.com/sdata/sageApp/test/-/accounts?startIndex=21&amp;count=10 
             If several parameters are required to specify the dataset (for example database name and company id), 
             they should be formatted as a single segment in the URL. For example, sageApp/test/demodb;acme/accounts -- the semicolon separator is application specific, not imposed by SData.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.UserName">
            <summary>
            Get set for the user name to authenticate with
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Password">
            <summary>
            Get/set for the password to authenticate with
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Timeout">
            <summary>
            Gets or sets the timeout in milliseconds used during requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.Cookies">
            <summary>
            Gets the cookie collection associated with all requests to the server.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataService.UserAgent">
            <summary>
            Gets or sets the user agent passed during requests.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.CreateFeed(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Adds a new syndication resource to the data source.
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="feed"></param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.CreateFeed(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomFeed,System.String@)">
            <summary>
            Adds a new syndication resource to the data source.
            </summary>
            <param name="request"></param>
            <param name="feed"></param>
            <param name="eTag"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.CreateEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Adds a new syndication resource to the data source.
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="entry">The entry that should be created.</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.CreateAsync(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Common.ISyndicationResource)">
            <summary>
            Asynchronous PUT to the server
            </summary>
            <param name="request">The request that identifies the resource within the syndication data source.</param>
            <param name="resource">The resource that should be created asynchronously.</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.Delete(System.String)">
            <summary>
            Generic delete from server
            </summary>
            <param name="url">the url for the operation</param>
            <returns><b>true</b> returns true if the operation was successful</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.DeleteEntry(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Removes a resource from the syndication data source.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.DeleteEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Removes a resource from the syndication data source.
            </summary>
            <param name="request">The request from the syndication data source for the resource to be removed.</param>
            <param name="entry">the resource that is being deleted</param>
            <returns><b>true</b> if the syndication resource was successfully deleted; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.Read(System.String)">
            <summary>
            generic read from the specified url
            </summary>
            <param name="url">url to read from </param>
            <returns>string response from server</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.ReadFeed(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Reads resource information from the data source based on the URL.
            </summary>
            <param name="request">request for the syndication resource to get information for.</param>
            <returns>AtomFeed <see cref="T:Sage.SData.Client.Atom.AtomFeed"/> populated with the specified resources's information from the data source.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.ReadFeed(Sage.SData.Client.Core.SDataBaseRequest,System.String@)">
            <summary>
            Reads resource information from the data source based on the URL and the specified ETag.
            </summary>
            <param name="request"></param>
            <param name="eTag"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.ReadEntry(Sage.SData.Client.Core.SDataBaseRequest)">
            <summary>
            Reads resource information from the data source based on the URL.
            </summary>
            <param name="request">Request for the syndication resource to get information for.</param>
            <returns>An <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> populated with the specified resources' information from the data source.</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.ReadEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Reads resource information from the data source based on the URL and the ETag of the specified entry.
            </summary>
            <param name="request"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.ReadSchema(Sage.SData.Client.Core.SDataResourceSchemaRequest)">
            <summary>
            Reads xsd from a $schema request
            </summary>
            <param name="request">url for the syndication resource to get information for.</param>
            <returns>SDataSchema</returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.UpdateEntry(Sage.SData.Client.Core.SDataBaseRequest,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Updates information about a syndication resource in the data source.
            </summary>
            <param name="request">The url from the syndication data source for the resource to be updated.</param>
            <param name="entry">
                An object that implements the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> interface that represents the updated information for the resource.
            </param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.SDataService"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.SDataService"/> class, initialized with a target url.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Core.SDataService"/> class, initialized with a target url, user name and password.
            </summary>
            <param name="url"></param>
            <param name="userName">user name used for credentials</param>
            <param name="password">password for user</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataService.Initialize">
            <summary>
            Initializes the <see cref="T:Sage.SData.Client.Core.SDataService"/> 
            </summary>
            <remarks>Set the User Name and Password to authenticate with and build the url</remarks>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataServiceOperationRequest">
            <summary>
            Service Operation URL
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataServiceOperationRequest.OperationName">
            <summary>
            Accessor method for operationName
            </summary>
            <remarks>
            This element identifies a service operation. The operation must be invoked by posting an Atom entry containing the parameters to this URL. 
            The SData service will return the computed prices as an Atom entry containing the result (see the description of Synchronous Service Operations for details).
            In the example above, the input and output are Atom entries, but SData also supports Atom feeds as input and/or output to service operations 
            (see Service Operations section for details).
            The $service component may be placed after the contract segment (after test in the example above), 
            if it applies globally to the entire contract or it may be placed after the resource kind segment (as in the example above), if it applies to resources of a specific kind.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataServiceOperationRequest.Entry">
            <summary>
            The input entry containing parameter values to be submitted to the service.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataServiceOperationRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataServiceOperationRequest.Create">
            <summary>
            Creates POST to the server
            </summary>
            <returns>AtomFeed returned from the server</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataServiceOperationRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="CREATE a Service Operation (Synchronous)" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataServiceOperationRequest.CreateAsync">
            <summary>
            Execute the service operation asynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataSingleResourceRequest">
            <summary>
            Single Resource URL
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataSingleResourceRequest.Entry">
            <summary>
            Accessor method for entry
            </summary>
            <remarks>
            this atom entry will be filled with the return from a resource template request and should be used for creating 
            a new SingleResource Request;
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataSingleResourceRequest.ResourceSelector">
            <summary>
            Accessor method for resourceSelector can be null
            </summary>
            <remarks>
            http://sdata.acme.com/sdata/sageApp/test/accounts('A001') Example:('A001')
             This element identifies a single resource. The value between quotes is the primary key of the resource.
            The resource selector may also contain a predicate (a Boolean expression). This makes it possible to identify a 
            resource by a criteria other than its primary key, which may be helpful in mashup scenarios. For example, the following URL identifies an account by its taxID:
            http://sdata.acme.com/sdata/sageApp/test/accounts(taxID eq '1234')
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Core.SDataSingleResourceRequest.Include">
            <summary>
            A comma separated list of properties whose payloads should be nested.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.#ctor(Sage.SData.Client.Core.ISDataService,Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            initializes the single resource request and loads the atom entry
            </summary>
            <remarks>this should be used with the atom entry returned from the 
            SDataTemplateResourceRequest</remarks>
            <param name="service"></param>
            <param name="entry"></param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.Read">
            <summary>
            Reads the AtomEntry for the single resource request
            </summary>
            <returns>AtomEntry</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataSingleResourceRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Single Resource Entry" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.Create">
            <summary>
            Creates the AtomEntry for the single resource request
            </summary>
            <returns>AtomEntry</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataSingleResourceRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="CREATE Single Resource Entry" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.Update">
            <summary>
            Delete the AtomEntry for the single resource request
            </summary>
            <returns>AtomEntry</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataSingleResourceRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="UPDATE Single Resource Entry" 
                    />
                </code>
            </example>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSingleResourceRequest.Delete">
            <summary>
            Delete the AtomEntry for the single resource request
            </summary>
            <returns>AtomEntry</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataSingleResourceRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="DELETE a Single Resource Entry" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataSystemRequest">
            <summary>
            SData reserves the following URL for “system” resources and services:
            At this stage, SData only reserves the $system segment name, it does not standardize the URLs below this level.
            </summary>
            <remarks>http://sdata.acme.com/sdata/$system</remarks>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSystemRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            Constructor
            </summary>
            <param name="service">ISDataService for this request</param>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataSystemRequest.Read">
            <summary>
            Sends a PUT request to the server based on the URL for the request
            </summary>
            <returns>AtomFeed returned from the server</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SDataSystemRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ System Resources or Services" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Core.SDataTemplateResourceRequest">
            <summary>
            The template resource allows a service consumer to obtain the resource's default property values. 
            For example, the URL in the example could be used to fill the contents of a “Create Account” form.
            The $template segment is only valid after the resource kind segment (accounts in the example).
            Template resources are usually read only, but some applications could expose them in read/write mode, typically to admin accounts.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataTemplateResourceRequest.#ctor(Sage.SData.Client.Core.ISDataService)">
            <summary>
            gets the string version of this SData URL
            </summary>
            <returns>return the string </returns>
        </member>
        <member name="M:Sage.SData.Client.Core.SDataTemplateResourceRequest.Read">
            <summary>
            Reads the template 
            </summary>
            <returns>AtomEntry representing the template</returns>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the AsyncRequest class.">
                    <code 
                        source=".\Example.cs" 
                        region="READ a Template Resource" 
                    />
                </code>
            </example>
        </member>
        <member name="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject">
            <summary>
            Defines generalized extension properties, methods, indexers and events that a value type or class 
            implements to create a type-specific implementation of extension properties, methods, indexers and events.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions">
            <summary>
            Gets or sets the syndication extensions applied to the syndication entity.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent syndication extensions applied to the syndication entity.</value>
            <seealso cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.HasExtensions">
            <summary>
            Gets a value indicating if the syndication entity has one or more syndication extensions applied to it.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection contains one or more <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects, otherwise returns <b>false</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.AddExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Adds the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be added.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was added to the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Sage.SData.Client.Extensions.ISyndicationExtension})">
            <summary>
            Searches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to search for.</param>
            <returns>
                The first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </returns>
            <remarks>
                The <see cref="T:System.Predicate`1"/> is a delegate to a method that returns <b>true</b> if the object passed to it matches the conditions defined in the delegate. 
                The elements of the current <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> are individually passed to the <see cref="T:System.Predicate`1"/> delegate, moving forward in 
                the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/>, starting with the first element and ending with the last element. Processing is stopped when a match is found.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="match"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.RemoveExtension(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Removes the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> from the current instance's <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be removed.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> was removed from the <see cref="P:Sage.SData.Client.Extensions.IExtensibleSyndicationObject.Extensions"/> collection, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.ISyndicationExtension">
            <summary>
            Allows an object to implement a syndication extension by representing a set of properties, methods, indexers and events common to web content syndication extensions.
            </summary>
            <seealso cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.Description">
            <summary>
            Gets a human-readable description of the syndication extension.
            </summary>
            <value>A human-readable description for the syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.Documentation">
            <summary>
            Gets a <see cref="T:System.Uri"/> that points to documentation for the syndication extension.
            </summary>
            <value>A <see cref="T:System.Uri"/> that points to the documentation or implementation details for the syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.Name">
            <summary>
            Gets the human-readable name of the syndication extension.
            </summary>
            <value>A human-readable name for the syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.Version"/> of the specification that the syndication extension conforms to.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.Version"/> of the specification that the syndication extension conforms to.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlNamespace">
            <summary>
            Gets the XML namespace that is used when qualifying the syndication extension's element and attribute names.
            </summary>
            <value>The XML namespace that is used when qualifying the syndication extension's element and attribute names.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlPrefix">
            <summary>
            Gets the prefix used to associate the syndication extension's element and attribute names with the syndication extension's XML namespace.
            </summary>
            <value>The prefix used to associate the syndication extension's element and attribute names with the syndication extension's <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlNamespace">XML namespace</see>.</value>
        </member>
        <member name="E:Sage.SData.Client.Extensions.ISyndicationExtension.Loaded">
            <summary>
            Occurs when the syndication extension state has been changed by a load operation.
            </summary>
            <seealso cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.ExistsInSource(System.Xml.XPath.XPathNavigator)">
            <summary>
            Determines if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> exists in the XML data in the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to parse.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>  elements or attributes are present in the <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                This method should be as lightweight as possible when determining if the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> or its related entities are present in the <paramref name="source"/>. 
                                It is recommended that implementers utilize the <see cref="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)"/> method to determine if the <paramref name="source"/> contains 
                                the expected namespace(s) for the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.CreateNamespaceManager(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a <see cref="T:System.Xml.XmlNamespaceManager"/> object for resolving prefixed XML namespaces utilized by this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="navigator">Provides a cursor model for navigating syndication extension data.</param>
            <returns>A <see cref="T:System.Xml.XmlNamespaceManager"/> that resolves prefixed XML namespaces and provides scope management for these namespaces.</returns>
            <remarks>
                This method will return a <see cref="T:System.Xml.XmlNamespaceManager"/> that has a namespace added to it using the <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlPrefix"/> and <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlNamespace"/> 
                of the extension unless the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> already has an XML namespace associated to the <see cref="P:Sage.SData.Client.Extensions.ISyndicationExtension.XmlPrefix"/>, in which case 
                the associated XML namespace is used instead. This is to prevent collisions and is an attempt to gracefully handle the case where a XML namespace that 
                is not per the extension's specification has been declared on the syndication resource.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication extension.</param>
            <returns><b>true</b> if the syndication extension was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Extensions.ISyndicationExtension.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication extension.</param>
            <returns><b>true</b> if the syndication extension was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <see cref="T:System.Xml.XmlReader"/> should be used to create a <see cref="T:System.Xml.XPath.IXPathNavigable"/> 
                                that is then passed to the <see cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Extensions.ISyndicationExtension.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.ISyndicationExtension.WriteXmlNamespaceDeclaration(System.Xml.XmlWriter)">
            <summary>
            Writes the prefixed XML namespace for the current syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the prefixed XML namespace declaration to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.OpenSearchExtension">
            <summary>
            Extends the atomentry to handle OpenSearch.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.OpenSearchExtension.extensionContext">
            <summary>
            Private member to hold specific information about the extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.OpenSearchExtension.Context">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtensionContext"/> object associated with this extension.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtensionContext"/> object that contains information associated with the current syndication extension.</value>
            <remarks>
                The <b>Context</b> encapsulates all of the syndication extension information that can be retrieved or written to an extended syndication entity. 
                Its purpose is to prevent property naming collisions between the base <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class and any custom properties that 
                are defined for the custom syndication extension.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.MatchByType(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Predicate delegate that returns a value indicating if the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> 
            represents the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be compared.</param>
            <returns><b>true</b> if the <paramref name="extension"/> is the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load this <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load this <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.OpenSearchExtensionContext">
            <summary>
            Encapsulates specific information about an individual <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtension"/>.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.OpenSearchExtensionContext.ItemsPerPage">
            <summary>
            Items Per Page
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.OpenSearchExtensionContext.TotalResults">
            <summary>
            Total Results
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.OpenSearchExtensionContext.StartIndex">
            <summary>
            Start Index
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes the syndication extension context using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <b>XPathNavigator</b> used to load this <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtensionContext"/>.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.OpenSearchExtensionContext"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the current context to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.OpenSearchExtensionHelper">
            <summary>
            Open Search Extensions
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.GetOpenSearchItemsPerPage(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Extension method to retrieve opensearch items per page
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.GetOpenSearchTotalResults(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Extension method to retrieve opensearch total results
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.GetOpenSearchStartIndex(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Extension method to retrieve opensearch start index
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.SetOpenSearchItemsPerPage(Sage.SData.Client.Atom.AtomFeed,System.Int32)">
            <summary>
            Extension method to set opensearch items per page
            </summary>
            <param name="feed"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.SetOpenSearchTotalResults(Sage.SData.Client.Atom.AtomFeed,System.Int32)">
            <summary>
            Extension method to set opensearch total results
            </summary>
            <param name="feed"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.OpenSearchExtensionHelper.SetOpenSearchStartIndex(Sage.SData.Client.Atom.AtomFeed,System.Int32)">
            <summary>
            Extension method to set opensearch start index
            </summary>
            <param name="feed"></param>
            <param name="value"></param>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataHttpExtension">
            <summary>
            Extends the atomentry to handle SDataHttp.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SDataHttpExtension.extensionContext">
            <summary>
            Private member to hold specific information about the extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SDataHttpExtension"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtension.Context">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Extensions.SDataHttpExtensionContext"/> object associated with this extension.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.SDataHttpExtensionContext"/> object that contains information associated with the current syndication extension.</value>
            <remarks>
                The <b>Context</b> encapsulates all of the syndication extension information that can be retrieved or written to an extended syndication entity. 
                Its purpose is to prevent property naming collisions between the base <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class and any custom properties that 
                are defined for the custom syndication extension.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.MatchByType(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Predicate delegate that returns a value indicating if the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> 
            represents the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be compared.</param>
            <returns><b>true</b> if the <paramref name="extension"/> is the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataHttpExtensionContext">
            <summary>
            Encapsulates specific information about an individual <see cref="T:Sage.SData.Client.Extensions.SDataHttpExtension"/>.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.HttpMethod">
            <summary>
            Http Method
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.HttpStatus">
            <summary>
            Http Status
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.HttpMessage">
            <summary>
            Http Message
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.ETag">
            <summary>
            ETag
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataHttpExtensionContext.IfMatch">
            <summary>
            If Match
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes the syndication extension context using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <b>XPathNavigator</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/>.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the current context to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataHttpExtensionHelper">
            <summary>
            Helper class for accessing AtomEntry SDataHttpExtensions
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpMethod(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http method
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpStatus(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http status
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpMessage(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http message
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpLocation(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http location
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpETag(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http etag
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.GetSDataHttpIfMatch(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata http if match
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpMethod(Sage.SData.Client.Atom.AtomEntry,System.Nullable{Sage.SData.Client.Framework.HttpMethod})">
            <summary>
            Extension method to set sdata http method
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpStatus(Sage.SData.Client.Atom.AtomEntry,System.Nullable{System.Net.HttpStatusCode})">
            <summary>
            Extension method to set sdata http status
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpMessage(Sage.SData.Client.Atom.AtomEntry,System.String)">
            <summary>
            Extension method to set sdata http message
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpLocation(Sage.SData.Client.Atom.AtomEntry,System.Uri)">
            <summary>
            Extension method to set sdata http location
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpETag(Sage.SData.Client.Atom.AtomEntry,System.String)">
            <summary>
            Extension method to set sdata http etag
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataHttpExtensionHelper.SetSDataHttpIfMatch(Sage.SData.Client.Atom.AtomEntry,System.String)">
            <summary>
            Extension method to set sdata http if method
            </summary>
            <param name="entry"></param>
            <param name="value"></param>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataSyncExtension">
            <summary>
            Extends atom feeds and entries to handle SDataSync.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SDataSyncExtension.extensionContext">
            <summary>
            Private member to hold specific information about the extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SDataSyncExtension"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataSyncExtension.Context">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Extensions.SDataSyncExtensionContext"/> object associated with this extension.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.SDataSyncExtensionContext"/> object that contains information associated with the current syndication extension.</value>
            <remarks>
                The <b>Context</b> encapsulates all of the syndication extension information that can be retrieved or written to an extended syndication entity. 
                Its purpose is to prevent property naming collisions between the base <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class and any custom properties that 
                are defined for the custom syndication extension.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.MatchByType(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Predicate delegate that returns a value indicating if the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> 
            represents the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be compared.</param>
            <returns><b>true</b> if the <paramref name="extension"/> is the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataSyncExtensionContext">
            <summary>
            Encapsulates specific information about an individual <see cref="T:Sage.SData.Client.Extensions.SDataSyncExtension"/>.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataSyncExtensionContext.SyncMode">
            <summary>
            Sync Mode
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataSyncExtensionContext.Digest">
            <summary>
            Digest
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataSyncExtensionContext.SyncState">
            <summary>
            Sync State
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes the syndication extension context using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <b>XPathNavigator</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/>.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the current context to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataSyncExtensionHelper">
            <summary>
            Helper class for accessing atom feed and entry SDataSyncExtensions
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtensionHelper.GetSDataSyncMode(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Extension method to retrieve sdata sync mode
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtensionHelper.GetSDataSyncDigest(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Extension method to retrieve sdata sync digest
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataSyncExtensionHelper.GetSDataSyncState(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata sync state
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataExtension">
            <summary>
            Extends the atomentry to handle SData.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SDataExtension.extensionContext">
            <summary>
            Private member to hold specific information about the extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataExtension.Context">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/> object associated with this extension.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/> object that contains information associated with the current syndication extension.</value>
            <remarks>
                The <b>Context</b> encapsulates all of the syndication extension information that can be retrieved or written to an extended syndication entity. 
                Its purpose is to prevent property naming collisions between the base <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class and any custom properties that 
                are defined for the custom syndication extension.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.MatchByType(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Predicate delegate that returns a value indicating if the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> 
            represents the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be compared.</param>
            <returns><b>true</b> if the <paramref name="extension"/> is the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataExtensionContext">
            <summary>
            Encapsulates specific information about an individual <see cref="T:Sage.SData.Client.Extensions.SDataExtension"/>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SDataExtensionContext._diagnoses">
            <summary>
            Private member to hold information that allows the client to diagnose errors
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataExtensionContext.Payload">
            <summary>
            SDataPayload that represent the sdata:payload element in an AtomEntry
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataExtensionContext.Diagnoses">
            <summary>
            Gets information that allows the client to diagnose errors
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataExtensionContext.Schema">
            <summary>
            Gets the inline XML schema that describes the feed or entry
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes the syndication extension context using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <b>XPathNavigator</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/>.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SDataExtensionContext"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the current context to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataExtensionHelper">
            <summary>
            SDataExtension Helpers Extension Methods
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.GetSDataPayload(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Extension method to retrieve sdata payload
            </summary>
            <param name="entry">the entry</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.GetSDataDiagnoses(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Retrieves diagnosis from the feed
            </summary>
            <param name="feed">the AtomFeed</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.GetSDataDiagnoses(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Retrieves the diagnosis from an entry
            </summary>
            <param name="entry">the AtomEntry</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.GetSDataSchema(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Retrieves the inline XML schema embedded in the feed
            </summary>
            <param name="feed"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.GetSDataSchema(Sage.SData.Client.Atom.AtomEntry)">
            <summary>
            Retrieves the inline XML schema embedded in the feed entry
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataExtensionHelper.SetSDataPayload(Sage.SData.Client.Atom.AtomEntry,Sage.SData.Client.Extensions.SDataPayload)">
            <summary>
            Extension method to set sdata payload
            </summary>
            <param name="entry"></param>
            <param name="payload"></param>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SDataPayloadTypeDescriptionProvider">
            <summary>
             A <see cref="T:System.ComponentModel.TypeDescriptionProvider"/> that allows the <see cref="T:Sage.SData.Client.Extensions.SDataPayload"/>
             class to be data bound.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SDataPayloadTypeDescriptionProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SDataPayloadTypeDescriptionProvider"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SDataSimpleCollection.ItemElementName">
            <summary>
            Specifies the local element name of the item when serialized to the XML Array.
            </summary>
            <remarks>This is inferred from the first element's <see cref="P:System.Xml.XPath.XPathNavigator.LocalName">local name</see></remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListDataType">
            <summary>
            Represents the data-type of a simple list property.
            </summary>
            <seealso cref="P:Sage.SData.Client.Extensions.SimpleListSort.DataType"/>
            <seealso cref="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeAsString(Sage.SData.Client.Extensions.SimpleListDataType)"/>
            <seealso cref="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeByName(System.String)"/>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListDataType.None">
            <summary>
            No data-type specified.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListDataType.Date">
            <summary>
            The data type of the simple list property represents a date-time value.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListDataType.Number">
            <summary>
            The data type of the simple list property represents a numeric value.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListDataType.Text">
            <summary>
            The data type of the simple list property represents a textual value.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListGroup">
            <summary>
            Represents information that informs the client that the property to which it refers is one that is <i>groupable</i>, 
            meaning that the client should provide a user interface that allows the user to group or filter on the values of that property.
            </summary>
            <remarks>
                <para>
                    This informational entity makes reference to XML elements that are child-elements within the items of the same feed, using the supported extension mechanism of the feed format. 
                    Groupable properties <i>should</i> contain a small set of discrete values.
                </para>
                <para>
                    The value which is to be grouped <b>must be</b> the text content of the element itself (i.e. the character data contained in the element). 
                    Values of attributes or nested elements <b>cannot</b> be used for grouping. The property referred to must have no child-elements. 
                    In general, only one instance of a property should appear in each item. Clients are free to ignore repeated instances of properties.
                </para>
            </remarks>
            <seealso cref="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.Grouping"/>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListGroup.groupNamespace">
            <summary>
            Private member to hold the full namespace used in the groupable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListGroup.groupElement">
            <summary>
            Private member to hold the name of the groupable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListGroup.groupLabel">
            <summary>
            Private member to hold a human-readable name for the groupable property.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListGroup.Element">
            <summary>
            Get or sets the name of this groupable property.
            </summary>
            <value>The name of this groupable property. The default value is <see cref="F:System.String.Empty"/>.</value>
            <remarks>
                If this property is equal to <see cref="F:System.String.Empty"/>, it is assumed that the <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Label"/> property is included 
                and that this <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> refers to the default sort order.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListGroup.Label">
            <summary>
            Get or sets a human-readable name for this groupable property.
            </summary>
            <value>A human-readable name for this groupable property. The default value is <see cref="F:System.String.Empty"/>.</value>
            <remarks>
                <para>
                    If this property is <see cref="F:System.String.Empty"/>, the client should use the value of the <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Element"/> property as the human-readable name.
                </para>
                <para>The <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Label"/> property is <b>required</b> if the <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Element"/> property is an <i>empty string</i>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListGroup.Namespace">
            <summary>
            Gets or sets the full namespace identifier used to qualify this <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Element"/>.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the full namespace identifier used to qualify this <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Element"/> property. The default value is <b>null</b>.</value>
            <remarks>
                If the value of this property is <b>null</b>, it is assumed that the <see cref="P:Sage.SData.Client.Extensions.SimpleListGroup.Element"/> does not live in a namespace.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.op_Equality(Sage.SData.Client.Extensions.SimpleListGroup,Sage.SData.Client.Extensions.SimpleListGroup)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.op_Inequality(Sage.SData.Client.Extensions.SimpleListGroup,Sage.SData.Client.Extensions.SimpleListGroup)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.op_LessThan(Sage.SData.Client.Extensions.SimpleListGroup,Sage.SData.Client.Extensions.SimpleListGroup)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListGroup.op_GreaterThan(Sage.SData.Client.Extensions.SimpleListGroup,Sage.SData.Client.Extensions.SimpleListGroup)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListSort">
            <summary>
            Represents information that enables the publisher to indicate to the client that the property to which it refers is one that is <i>sortable</i>, 
            meaning that the client should provide a user interface that allows the user to sort on that property.
            </summary>
            <remarks>
                <para>
                    This informational entity makes reference to XML elements that are child-elements within the items of the same feed, using the supported extension mechanism of the feed format. 
                    This entity can also be used to provide a label for the default sort that appears in the list.
                </para>
                <para>
                    The value which is to be sorted <b>must be</b> the text content of the element itself (i.e. the character data contained in the element). 
                    Values of attributes or nested elements <b>cannot</b> be used for sorting. The property referred to must have no child-elements. 
                    In general, only one instance of a property should appear in each item. Clients are free to ignore repeated instances of properties.
                </para>
            </remarks>
            <seealso cref="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.Sorting"/>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSort.sortNamespace">
            <summary>
            Private member to hold the full namespace used in the sortable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSort.sortElement">
            <summary>
            Private member to hold the name of the sortable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSort.sortLabel">
            <summary>
            Private member to hold a human-readable name for the sortable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSort.sortDataType">
            <summary>
            Private member to hold the data-type of the sortable property.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSort.sortIsDefault">
            <summary>
            Private member to hold a value indicating if the sortable property is the default sort order in the list.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSort.DataType">
            <summary>
            Gets or sets the data-type of this sortable property.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.SimpleListDataType"/> enumeration value that represents the data-type of this sortable property. The default value is <see cref="F:Sage.SData.Client.Extensions.SimpleListDataType.None"/>.</value>
            <remarks>
                If the value of this property is <see cref="F:Sage.SData.Client.Extensions.SimpleListDataType.None"/>, it <i>should</i> be assumed default data-type of this sortable property is <see cref="F:Sage.SData.Client.Extensions.SimpleListDataType.Text"/>.
            </remarks>
            <seealso cref="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeAsString(Sage.SData.Client.Extensions.SimpleListDataType)"/>
            <seealso cref="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeByName(System.String)"/>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSort.Element">
            <summary>
            Get or sets the name of this sortable property.
            </summary>
            <value>The name of this sortable property. The default value is <see cref="F:System.String.Empty"/>.</value>
            <remarks>
                If this property is equal to <see cref="F:System.String.Empty"/>, it is assumed that the <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Label"/> property is included 
                and that this <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> refers to the default sort order.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSort.IsDefault">
            <summary>
            Gets or sets a value indicating if this sortable property is the default sort order in the list.
            </summary>
            <value><b>true</b> if this sortable property is the default sort order in the list; otherwise <b>false</b>. The default value is <b>false</b>.</value>
            <remarks>
                The items in the list <b>must</b> be already be sorted by the element, meaning the client <b>should not</b> expect to have to resort by this field if it displaying content directly from the list. 
                The client <i>should</i> respect only the first <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> that has a <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.IsDefault"/> property with a value of <b>true</b> that it encounters.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSort.Label">
            <summary>
            Get or sets a human-readable name for this sortable property.
            </summary>
            <value>A human-readable name for this sortable property. The default value is <see cref="F:System.String.Empty"/>.</value>
            <remarks>
                <para>
                    If this property is <see cref="F:System.String.Empty"/>, the client should use the value of the <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Element"/> property as the human-readable name.
                </para>
                <para>The <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Label"/> property is <b>required</b> if the <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Element"/> property is an <i>empty string</i>.</para>
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSort.Namespace">
            <summary>
            Gets or sets the full namespace identifier used to qualify this <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Element"/>.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the full namespace identifier used to qualify this <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Element"/> property. The default value is <b>null</b>.</value>
            <remarks>
                If the value of this property is <b>null</b>, it is assumed that the <see cref="P:Sage.SData.Client.Extensions.SimpleListSort.Element"/> does not live in a namespace.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeAsString(Sage.SData.Client.Extensions.SimpleListDataType)">
            <summary>
            Returns the data type identifier for the supplied <see cref="T:Sage.SData.Client.Extensions.SimpleListDataType"/>.
            </summary>
            <param name="type">The <see cref="T:Sage.SData.Client.Extensions.SimpleListDataType"/> to get the data type identifier for.</param>
            <returns>The data type identifier for the supplied <paramref name="type"/>, otherwise returns an empty string.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.DataTypeByName(System.String)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Extensions.SimpleListDataType"/> enumeration value that corresponds to the specified data type name.
            </summary>
            <param name="name">The name of the data type.</param>
            <returns>A <see cref="T:Sage.SData.Client.Extensions.SimpleListDataType"/> enumeration value that corresponds to the specified string, otherwise returns <b>SimpleListDataType.None</b>.</returns>
            <remarks>This method disregards case of specified data type name.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.op_Equality(Sage.SData.Client.Extensions.SimpleListSort,Sage.SData.Client.Extensions.SimpleListSort)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.op_Inequality(Sage.SData.Client.Extensions.SimpleListSort,Sage.SData.Client.Extensions.SimpleListSort)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.op_LessThan(Sage.SData.Client.Extensions.SimpleListSort,Sage.SData.Client.Extensions.SimpleListSort)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSort.op_GreaterThan(Sage.SData.Client.Extensions.SimpleListSort,Sage.SData.Client.Extensions.SimpleListSort)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension">
            <summary>
            Extends syndication specifications to provide a means of exposing ordered lists of items easier and more accessible to users.
            </summary>
            <remarks>
                <para>
                    The <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/> extends syndicated content to make exposing ordered lists of items easier and more accessible to users. 
                    This syndication extension conforms to the <b>Simple List Extensions</b> 1.0a specification, which can be found 
                    at <a href="http://msdn2.microsoft.com/en-us/xml/bb190612.aspx">http://msdn2.microsoft.com/en-us/xml/bb190612.aspx</a>.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.extensionContext">
            <summary>
            Private member to hold specific information about the extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.Context">
            <summary>
            Gets or sets the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext"/> object associated with this extension.
            </summary>
            <value>A <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext"/> object that contains information associated with the current syndication extension.</value>
            <remarks>
                The <b>Context</b> encapsulates all of the syndication extension information that can be retrieved or written to an extended syndication entity. 
                Its purpose is to prevent property naming collisions between the base <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class and any custom properties that 
                are defined for the custom syndication extension.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Extensions.SimpleListGroup},System.Collections.ObjectModel.Collection{Sage.SData.Client.Extensions.SimpleListGroup})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.CompareSequence(System.Collections.ObjectModel.Collection{Sage.SData.Client.Extensions.SimpleListSort},System.Collections.ObjectModel.Collection{Sage.SData.Client.Extensions.SimpleListSort})">
            <summary>
            Compares two specified <see cref="T:System.Collections.ObjectModel.Collection`1"/> collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.MatchByType(Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Predicate delegate that returns a value indicating if the supplied <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> 
            represents the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="extension">The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> to be compared.</param>
            <returns><b>true</b> if the <paramref name="extension"/> is the same <see cref="T:System.Type"/> as this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/>.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.op_Equality(Sage.SData.Client.Extensions.SimpleListSyndicationExtension,Sage.SData.Client.Extensions.SimpleListSyndicationExtension)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.op_Inequality(Sage.SData.Client.Extensions.SimpleListSyndicationExtension,Sage.SData.Client.Extensions.SimpleListSyndicationExtension)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.op_LessThan(Sage.SData.Client.Extensions.SimpleListSyndicationExtension,Sage.SData.Client.Extensions.SimpleListSyndicationExtension)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtension.op_GreaterThan(Sage.SData.Client.Extensions.SimpleListSyndicationExtension,Sage.SData.Client.Extensions.SimpleListSyndicationExtension)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext">
            <summary>
            Encapsulates specific information about an individual <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtension"/>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.extensionTreatAsList">
            <summary>
            Private member to hold a value indicating if the feed is intended to be consumed as a list.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.extensionGroups">
            <summary>
            Private member to hold information that allows the client to group or filter on the values of feed properties.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.extensionSorts">
            <summary>
            Private member to hold information that allows the client to sort on the values of feed properties.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.Grouping">
            <summary>
            Gets information that allows the client to group or filter on the values of feed properties.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> objects that represent information that allows the client to group or filter on the values of feed properties. 
                The default value is an <i>empty</i> collection.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.Sorting">
            <summary>
            Gets information that allows the client to sort on the values of feed properties.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> objects that represent information that allows the client to sort on the values of feed properties. 
                The default value is an <i>empty</i> collection.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.TreatAsList">
            <summary>
            Gets or sets a value indicating if this feed is intended to be consumed as a list.
            </summary>
            <value><b>true</b> if the syndication feed is intended to be consumed as a list; otherwise false.</value>
            <remarks>
                This property allows the publisher of a feed document to indicate to the consumers of the feed that the feed is intended to be consumed as a list, 
                and as such is the primary means for feed consumers to identify lists.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Initializes the syndication extension context using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <b>XPathNavigator</b> used to load this <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext"/>.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the current context to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionHelper">
            <summary>
            SLE extension class
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionHelper.GetSimpleListGrouping(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Gets information that allows the client to group or filter on the values of feed properties.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.SimpleListGroup"/> objects that represent information that allows the client to group or filter on the values of feed properties. 
                The default value is an <i>empty</i> collection.
            </value>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionHelper.GetSimpleListSorting(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Gets information that allows the client to sort on the values of feed properties.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.SimpleListSort"/> objects that represent information that allows the client to sort on the values of feed properties. 
                The default value is an <i>empty</i> collection.
            </value>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionHelper.GetSimpleListTreatAsList(Sage.SData.Client.Atom.AtomFeed)">
            <summary>
            Gets a value indicating if this feed is intended to be consumed as a list.
            </summary>
            <value><b>true</b> if the syndication feed is intended to be consumed as a list; otherwise false.</value>
            <remarks>
                This property allows the publisher of a feed document to indicate to the consumers of the feed that the feed is intended to be consumed as a list, 
                and as such is the primary means for feed consumers to identify lists.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SimpleListSyndicationExtensionHelper.SetSimpleListTreatAsList(Sage.SData.Client.Atom.AtomFeed,System.Boolean)">
            <summary>
            Sets a value indicating if this feed is intended to be consumed as a list.
            </summary>
            <value><b>true</b> if the syndication feed is intended to be consumed as a list; otherwise false.</value>
            <remarks>
                This property allows the publisher of a feed document to indicate to the consumers of the feed that the feed is intended to be consumed as a list, 
                and as such is the primary means for feed consumers to identify lists.
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SyndicationExtension">
            <summary>
            Provides the set of methods, properties and events that web content syndication extensions should inherit from.
            </summary>
            <remarks>
                <para>
                    The <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> abstract class is provided to reduce the difficulty of implementing custom syndication extensions. 
                    While implementers are free to implement their custom syndication extensions by implementing the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> interface, 
                    it is <i>recommended</i> that custom syndication extensions inherit from the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> base class.
                </para>
                <para>
                    If you choose to not inherit from the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> abstract base class, please be aware that the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionAdapter"/> class 
                    internally calls the <see cref="M:System.Activator.CreateInstance(System.Type)"/> method, and so any custom syndication extension will need to have the 
                    appropriate <see cref="T:System.Security.Permissions.SecurityPermissionAttribute"/> and <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute"/> attributes applied as necessary.
                </para>
            </remarks>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionDescription">
            <summary>
            Private member to hold the human-readable description of the syndication extension.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionDocumentation">
            <summary>
            Private member to hold a URL that points to documentation for the syndication extension.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionName">
            <summary>
            Private member to hold the human-readable name of the syndication extension.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionVersion">
            <summary>
            Private member to hold the version of the specification that the syndication extension conforms to.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionXmlNamespace">
            <summary>
            Private member to hold the XML namespace that is used when qualifying the syndication extension's element and attribute names.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtension.extensionXmlPrefix">
            <summary>
            Private member to hold the prefix used to associate the syndication extension's element and attribute names with the syndication extension's XML namespace.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.#ctor(System.String,System.String,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class using the supplied parameters.
            </summary>
            <param name="xmlPrefix">The prefix used to associate this syndication extension's element and attribute names with this syndication extension's XML namespace.</param>
            <param name="xmlNamespace">The XML namespace that is used when qualifying this syndication extension's element and attribute names.</param>
            <param name="version">The <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.Version"/> of the specification that this syndication extension conforms to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlPrefix"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlPrefix"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="version"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.#ctor(System.String,System.String,System.Version,System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> class using the supplied parameters.
            </summary>
            <param name="xmlPrefix">The prefix used to associate this syndication extension's element and attribute names with this syndication extension's XML namespace.</param>
            <param name="xmlNamespace">The XML namespace that is used when qualifying this syndication extension's element and attribute names.</param>
            <param name="version">The <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.Version"/> of the specification that this syndication extension conforms to.</param>
            <param name="documentation">A <see cref="T:System.Uri"/> that points to the documentation for this syndication extension.</param>
            <param name="name">A human-readable name for this syndication extension.</param>
            <param name="description">A human-readable description for this syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlPrefix"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlPrefix"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xmlNamespace"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="version"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="documentation"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.Description">
            <summary>
            Gets a human-readable description of this syndication extension.
            </summary>
            <value>A human-readable description for this syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.Documentation">
            <summary>
            Gets a <see cref="T:System.Uri"/> that points to documentation for this syndication extension.
            </summary>
            <value>A <see cref="T:System.Uri"/> that points to the documentation or implementation details for this syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.Name">
            <summary>
            Gets a human-readable name of this syndication extension.
            </summary>
            <value>A human-readable name for this syndication extension.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.Version">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.Version"/> of the specification that this syndication extension conforms to.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.Version"/> of the specification that this syndication extension conforms to.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlNamespace">
            <summary>
            Gets the XML namespace that is used when qualifying this syndication extension's element and attribute names.
            </summary>
            <value>The XML namespace that is used when qualifying this syndication extension's element and attribute names.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlPrefix">
            <summary>
            Gets the prefix used to associate this syndication extension's element and attribute names with this syndication extension's XML namespace.
            </summary>
            <value>The prefix used to associate this syndication extension's element and attribute names with this syndication extension's <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlNamespace">XML namespace</see>.</value>
        </member>
        <member name="E:Sage.SData.Client.Extensions.SyndicationExtension.Loaded">
            <summary>
            Occurs when the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> state has been changed by a load operation.
            </summary>
            <seealso cref="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.OnExtensionLoaded(Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs)">
            <summary>
            Raises the <see cref="E:Sage.SData.Client.Extensions.SyndicationExtension.Loaded"/> event.
            </summary>
            <param name="e">A <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.CreateNamespaceManager(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a <see cref="T:System.Xml.XmlNamespaceManager"/> object for resolving prefixed XML namespaces utilized by this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
            </summary>
            <param name="navigator">Provides a cursor model for navigating syndication extension data.</param>
            <returns>A <see cref="T:System.Xml.XmlNamespaceManager"/> that resolves prefixed XML namespaces and provides scope management for these namespaces.</returns>
            <remarks>
                This method will return a <see cref="T:System.Xml.XmlNamespaceManager"/> that has a namespace added to it using the <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlPrefix"/> and <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlNamespace"/> 
                of the extension unless the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> already has an XML namespace associated to the <see cref="P:Sage.SData.Client.Extensions.SyndicationExtension.XmlPrefix"/>, in which case 
                the associated XML namespace is used instead. This is to prevent collisions and is an attempt to gracefully handle the case where a XML namespace that 
                is not per the extension's specification has been declared on the syndication resource.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.ExistsInSource(System.Xml.XPath.XPathNavigator)">
            <summary>
            Determines if the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> exists in the XML data in the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to parse.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> elements or attributes are present in the <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    This method should be as lightweight as possible when determining if the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> or its related entities are present in the <paramref name="source"/>. 
                    The default implementation utilizes the <see cref="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)"/> method to determine if the <paramref name="source"/> contains 
                    the expected namespace(s) for this <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/>.
                </para>
                <para>It is recommended that you call this method prior to executing a possibly costly load operation using the <see cref="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/> method.</para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.WriteXmlNamespaceDeclaration(System.Xml.XmlWriter)">
            <summary>
            Writes the prefixed XML namespace for the current syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the prefixed XML namespace declaration to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.GetSchema">
            <summary>
            This method is reserved and <u>should not be used</u>. When implementing the <see cref="T:System.Xml.Serialization.IXmlSerializable"/> interface, it is recommended 
            that a <b>null</b> reference (Nothing in Visual Basic) is returned from this method, and instead, if 
            specifying a custom schema is required, to apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
                A <see cref="T:System.Xml.Schema.XmlSchema"/> object that represents an in-memory representation of an XML Schema as specified 
                in the <b>World Wide Web Consortium (W3C)</b> XML Schema <i>Structures</i> and <i>Datatypes</i> specifications. 
                The default return value for this method is a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <remarks>
                <para>
                    When serializing or deserializing an object, the <see cref="T:System.Xml.Serialization.XmlSerializer"/> class does not perform XML validation. 
                    For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, 
                    for example by returning a <b>null</b> reference (Nothing in Visual Basic).
                </para>
                <para>
                    Some .NET Framework types as well as legacy custom types implementing the <see cref="T:System.Xml.Serialization.IXmlSerializable"/> interface may be using <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema"/> 
                    instead of <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/>. In this case, the method returns an accurate XML schema that describes the XML representation 
                    of the object generated by the <see cref="M:Sage.SData.Client.Extensions.SyndicationExtension.WriteXml(System.Xml.XmlWriter)"/> method.
                </para>
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication extension.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> was able to be initialized using the supplied <paramref name="source"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Extensions.SyndicationExtension.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XmlReader)">
            <summary>
            Initializes the syndication extension using the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication extension.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtension"/> was able to be initialized using the supplied <paramref name="reader"/>; otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <see cref="T:System.Xml.XmlReader"/> should be used to create a <see cref="T:System.Xml.XPath.IXPathNavigable"/> 
                                that is then passed to the <see cref="M:Sage.SData.Client.Extensions.SyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Sage.SData.Client.Extensions.SyndicationExtension.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtension.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the syndication extension to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SyndicationExtensionAdapter">
            <summary>
            Represents a <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> that are used to fill a <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.adapterNavigator">
            <summary>
            Private member to hold the XPathNavigator used to load a syndication extension.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.adapterSettings">
            <summary>
            Private member to hold the XPathNavigator used to configure the load of a syndication extension.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.#ctor(System.Xml.XPath.XPathNavigator,Sage.SData.Client.Common.SyndicationResourceLoadSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionAdapter"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/> and <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="navigator">A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the extended syndication resource information.</param>
            <param name="settings">The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> object used to configure the load operation of the <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.FrameworkExtensions">
            <summary>
            Gets the collection of <see cref="T:System.Type"/> objects that represent <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> instances natively supported by the framework.
            </summary>
            <value>
                <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> instances natively supported by the framework.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.Navigator">
            <summary>
            Gets the <see cref="T:System.Xml.XPath.XPathNavigator"/> used to fill an extensible syndication resource.
            </summary>
            <value>The <see cref="T:System.Xml.XPath.XPathNavigator"/> used to fill an extensible syndication resource.</value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.Settings">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill of an extensible syndication resource.
            </summary>
            <value>The <see cref="T:Sage.SData.Client.Common.SyndicationResourceLoadSettings"/> used to configure the fill of an extensible syndication resource.</value>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.FillExtensionTypes(Sage.SData.Client.Extensions.IExtensibleSyndicationObject,System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Fills the specified collection of <see cref="T:System.Type"/> objects using the supplied <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/>.
            </summary>
            <param name="entity">A <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/> to extract syndication extensions from.</param>
            <param name="types">The <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects to be filled.</param>
            <remarks>
               This method provides implementers of the <see cref="T:Sage.SData.Client.Common.ISyndicationResource"/> interface with a simple way 
               to fill a <see cref="P:Sage.SData.Client.Common.SyndicationResourceSaveSettings.SupportedExtensions"/> collection when implementing the 
               <see cref="M:Sage.SData.Client.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Sage.SData.Client.Common.SyndicationResourceSaveSettings)"/> abstract method.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entity"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="types"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.GetExtensions(System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Creates a collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> instances for the specified types.
            </summary>
            <param name="types">A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects to be instantiated.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects instantiated using the supplied <paramref name="types"/>.</returns>
            <remarks>
                <para>Each <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> instance in the <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection will be instantiated using its default constructor. </para>
                <para>Types that are a null reference or do not implement the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> interface are ignored.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="types"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.GetExtensions(System.Collections.ObjectModel.Collection{System.Type},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Creates a collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> instances for the specified types.
            </summary>
            <param name="types">A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent user-defined syndication extensions to be instantiated.</param>
            <param name="namespaces">A collection of XML nameapces that are used to filter the available native framework syndication extensions.</param>
            <returns>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects instantiated using the supplied <paramref name="types"/> and <paramref name="namespaces"/>.
            </returns>
            <remarks>
                This method instantiates all of the available native framework syndication extensions, and then filters them based on the XML namespaces and prefixes contained in the supplied <paramref name="namespaces"/>. 
                The user defined syndication extensions are then instantiated, and are added to the return collection if they do not already exist.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="types"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="namespaces"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.WriteExtensionsTo(System.Collections.Generic.IEnumerable{Sage.SData.Client.Extensions.ISyndicationExtension},System.Xml.XmlWriter)">
            <summary>
            Saves the supplied <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="extensions">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> objects that represent the syndication extensions to be written.</param>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extensions"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.WriteXmlNamespaceDeclarations(System.Collections.ObjectModel.Collection{System.Type},System.Xml.XmlWriter)">
            <summary>
            Writes the prefixed XML namespace declarations for the supplied <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of syndication extension <see cref="T:System.Type"/> objects to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="types">A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent the syndication extensions to write prefixed XML namespace declarations for.</param>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="types"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.Fill(Sage.SData.Client.Extensions.IExtensibleSyndicationObject)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/> to match the data source.
            </summary>
            <remarks>
                A default <see cref="T:System.Xml.XmlNamespaceManager"/> is created against this adapter's <see cref="P:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.Navigator"/> property 
                when resolving prefixed syndication elements and attributes.
            </remarks>
            <param name="entity">The <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/> to be filled.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entity"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionAdapter.Fill(Sage.SData.Client.Extensions.IExtensibleSyndicationObject,System.Xml.XmlNamespaceManager)">
            <summary>
            Modifies the <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/> to match the data source.
            </summary>
            <param name="entity">The <see cref="T:Sage.SData.Client.Extensions.IExtensibleSyndicationObject"/> to be filled.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> used to resolve prefixed syndication elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="entity"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="manager"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Sage.SData.Client.Extensions.ISyndicationExtension.Loaded"/> event.
            </summary>
            <remarks>
                A <see cref="E:Sage.SData.Client.Extensions.ISyndicationExtension.Loaded"/> event occurs whenever the <see cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)"/> 
                or <see cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/> methods are called.
            </remarks>
            <seealso cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>
            <seealso cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Sage.SData.Client.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.emptyEventArguments">
            <summary>
            Private member to hold instance of event with no event data.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.eventNavigator">
            <summary>
            Private member to hold read-only XPathNavigator object for navigating the XML data used to load the syndication extension.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.eventExtension">
            <summary>
            Private member to hold the syndication extension that resulted from the load operation.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication extension.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,Sage.SData.Client.Extensions.ISyndicationExtension)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/> and <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication extension.</param>
            <param name="extension">
                A <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> that represents the syndication extension after the load operation completed.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="extension"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.Empty">
            <summary>
            Represents an syndication extension loaded event with no event data.
            </summary>
            <value>An uninitialized instance of the <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> class.</value>
            <remarks>The value of Empty is a read-only instance of <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/> equivalent to the result of calling the <see cref="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.#ctor"/> constructor.</remarks>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.Data">
            <summary>
            Gets a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication extension.
            </summary>
            <value>
                A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication extension.
            </value>
        </member>
        <member name="P:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.Extension">
            <summary>
            Gets the <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> that resulted from the load operation.
            </summary>
            <value>
                The <see cref="T:Sage.SData.Client.Extensions.ISyndicationExtension"/> that resulted from the load operation. 
            </value>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.
            </remarks>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality(Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs,Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality(Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs,Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan(Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs,Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan(Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs,Sage.SData.Client.Extensions.SyndicationExtensionLoadedEventArgs)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Framework.AttachedFile">
            <summary>
            Represents a file that's been attached to a request or response.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.AttachedFile.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.AttachedFile"/> class. 
            </summary>
            <param name="contentType">The MIME content type of an attached file.</param>
            <param name="fileName">The file name of an attached file.</param>
            <param name="stream">The <see cref="P:Sage.SData.Client.Framework.AttachedFile.Stream"/> object that points to the content of an attached file.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.AttachedFile.ContentType">
            <summary>
            Gets the MIME content type of an attached file.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.AttachedFile.FileName">
            <summary>
            Gets the file name of an attached file.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.AttachedFile.Stream">
            <summary>
            Gets the <see cref="P:Sage.SData.Client.Framework.AttachedFile.Stream"/> object that points to the content of an attached file.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common">
            <summary>
            Provides the common elements for Syndication
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XmlNS">
            <summary>
            Prefix for xml namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.XS">
            <summary>
            XS namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XS.Namespace">
            <summary>
            Xml Schema namespace.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XS.Prefix">
            <summary>
            Prefix for XmlSchema namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.XSI">
            <summary>
            XSI namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XSI.Namespace">
            <summary>
            Namespace for XSI 
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XSI.Prefix">
            <summary>
            Prefix for XSI namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.XSI.Nil">
            <summary>
            Nil
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.Atom">
            <summary>
            ATOM namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.Atom.Namespace">
            <summary>
            Uri for Atom namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.Atom.Prefix">
            <summary>
            Prefix for Atom namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.SData">
            <summary>
            SData namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SData.Namespace">
            <summary>
            Uri for SData namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SData.Prefix">
            <summary>
            Prefix for SData namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.SME">
            <summary>
            SME namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SME.Namespace">
            <summary>
            Uri for SME namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SME.Prefix">
            <summary>
            Prefix for SME namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.HTTP">
            <summary>
            HTTP namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.HTTP.Namespace">
            <summary>
            Namespace for SData HTTP elements 
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.HTTP.Prefix">
            <summary>
            Prefix for SData Http header elements.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.Sync">
            <summary>
            Sync namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.Sync.Namespace">
            <summary>
            Namespace for SData Sync elements 
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.Sync.Prefix">
            <summary>
            Prefix for SData Http header elements.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.SLE">
            <summary>
            SLE namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SLE.Namespace">
            <summary>
            URI for SLE namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.SLE.Prefix">
            <summary>
            Prefix for SLE namespace
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Common.OpenSearch">
            <summary>
            OpenSearch namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.OpenSearch.Namespace">
            <summary>
            URI for OpenSearch namespace
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Common.OpenSearch.Prefix">
            <summary>
            Prefix for OpenSearch namespace
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.Common.GetSerializerNamespaces">
            <summary>
            Returns the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"/> for the Accounts types.
            </summary>
            <returns>The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"/> for the Accounts types.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.Common.IsFrameworkNamespace(System.String)">
            <summary>
            Returns a value indicating if the specified namespace is a framework namespace.
            </summary>
            <param name="ns">The namespace to check.</param>
            <returns><b>true</b> if the specified namespace is a framework namespace; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Framework.DiagnosisCode">
            <summary>
            Specifies the types of diagnosis code.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.BadUrlSyntax">
            <summary>
            Invalid URL syntax.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.BadQueryParameter">
            <summary>
            Invalid Query Parameter.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.ApplicationNotFound">
            <summary>
            Application does not exist.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.ApplicationUnavailable">
            <summary>
            Application exists but is not available.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.DatasetNotFound">
            <summary>
            Dataset does not exist.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.DatasetUnavailable">
            <summary>
            Dataset exists but is not available.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.ContractNotFound">
            <summary>
            Contract does not exist.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.ResourceKindNotFound">
            <summary>
            Resource kind does not exist.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.BadWhereSyntax">
            <summary>
            Invalid syntax for a where condition.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.DiagnosisCode.ApplicationDiagnosis">
            <summary>
            Application specific diagnosis, detail is in the applicationCode element.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.Diagnosis">
            <summary>
            Provides details of an error that has occurred.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.Diagnosis.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.Diagnosis.#ctor(Sage.SData.Client.Framework.Severity,System.String,Sage.SData.Client.Framework.DiagnosisCode)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> class.
            </summary>
            <param name="severity">One of the <see cref="P:Sage.SData.Client.Framework.Diagnosis.Severity"/> values.</param>
            <param name="message">A friendly message for the diagnosis.</param>
            <param name="code">One of the <see cref="T:Sage.SData.Client.Framework.DiagnosisCode"/> values.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.Diagnosis.#ctor(Sage.SData.Client.Framework.Severity,System.String,Sage.SData.Client.Framework.DiagnosisCode,System.String,System.String,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> class.
            </summary>
            <param name="severity">One of the <see cref="P:Sage.SData.Client.Framework.Diagnosis.Severity"/> values.</param>
            <param name="message">A friendly message for the diagnosis.</param>
            <param name="code">The application specific code for the error.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.Severity">
            <summary>
            Gets or sets the <see cref="P:Sage.SData.Client.Framework.Diagnosis.Severity"/> of the error.
            </summary>
            <value>One of the <see cref="P:Sage.SData.Client.Framework.Diagnosis.Severity"/> values.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.SDataCode">
            <summary>
            Gets or sets the SData diagnosis code for the error.
            </summary>
            <value>An SData diagnosis code for the error.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.ApplicationCode">
            <summary>
            Gets or sets the application specific diagnosis code for the error.
            </summary>
            <value>An application specific diagnosis code for the error.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.Message">
            <summary>
            Gets or sets a friendly message for the diagnosis.
            </summary>
            <value>A user friendly description of the error.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.StackTrace">
            <summary>
            Gets or sets the stack trace for the error.
            </summary>
            <value>A stack trace of the error.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.Diagnosis.PayloadPath">
            <summary>
            XPath expression that designates the payload element which is responsible for the error
            </summary>
            <value>An XPath expression</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.Diagnosis.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Framework.Diagnosis"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Framework.Diagnosis.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Framework.Diagnosis"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Framework.Digest">
            <summary>
            Provides details of a Digest for sync.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.Digest.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.Digest"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.Digest.#ctor(System.String,Sage.SData.Client.Framework.DigestEntry[])">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.Digest"/> class with the
            specified attributes.
            </summary>
            <param name="origin"></param>
            <param name="entries"></param>
        </member>
        <member name="M:Sage.SData.Client.Framework.Digest.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Framework.Digest"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Framework.Digest"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Framework.Digest"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Framework.Digest.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Framework.Digest"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Framework.DigestEntry">
            <summary>
            Provides details of a DigestEntry for sync.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.DigestEntry.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.DigestEntry"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.DigestEntry.#ctor(System.String,System.Int64,System.DateTime,System.Int32)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.DigestEntry"/> class with the
            specified attributes.
            </summary>
            <param name="endPoint"></param>
            <param name="tick"></param>
            <param name="stamp"></param>
            <param name="conflictPriority"></param>
        </member>
        <member name="M:Sage.SData.Client.Framework.DigestEntry.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Framework.DigestEntry"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Framework.DigestEntry"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Framework.DigestEntry"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Framework.DigestEntry.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Framework.DigestEntry"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Framework.HttpMethod">
            <summary>
            Enum of HTTP methods.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.HttpMethod.Get">
            <summary>
            Get request.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.HttpMethod.Post">
            <summary>
            Post request.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.HttpMethod.Put">
            <summary>
            Put request.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.HttpMethod.Delete">
            <summary>
            Delete requets.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.MediaType">
            <summary>
            Defines the list of supported media types.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Html">
            <summary>
            HTML
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Atom">
            <summary>
            ATOM feed syndication format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.AtomEntry">
            <summary>
            ATOM entry syndication format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Rss">
            <summary>
            RSS syndication format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Xml">
            <summary>
            XML format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.ImagePng">
            <summary>
            Image PNG format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.ImageJpeg">
            <summary>
            Image JPEG format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.ImageGif">
            <summary>
            Image GIF format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.ImageTiff">
            <summary>
            Image TIFF format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.ImageBmp">
            <summary>
            Image BMP format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Xslt">
            <summary>
            XLST format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Css">
            <summary>
            XSS format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Json">
            <summary>
            JSON format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Bson">
            <summary>
            BSON format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Form">
            <summary>
            Form format
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaType.Multipart">
            <summary>
            Multipart format
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.MediaTypeNames">
            <summary>
            Handles the mapping of <see cref="T:Sage.SData.Client.Framework.MediaType"/> values to names and vica-versa.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.AtomMediaType">
            <summary>
            ATOM feed content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.AtomFeedMediaType">
            <summary>
            ATOM feed content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.AtomEntryMediaType">
            <summary>
            ATOM entry content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.RssMediaType">
            <summary>
            RSS content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.XmlMediaType">
            <summary>
            XML content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.LegacyXmlMediaType">
            <summary>
            Legacy XML content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.HtmlMediaType">
            <summary>
            HTML content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.JsonMediaType">
            <summary>
            Javascript Object Notation (JSON) content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.BsonMediaType">
            <summary>
            Binary Javascript Object Notation (BSON) content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.FormMediaType">
            <summary>
            Form content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.TextMediaType">
            <summary>
            Text content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ImagePngMediaType">
            <summary>
            PNG Image content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ImageJpegMediaType">
            <summary>
            JPEG Image content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ImageGifMediaType">
            <summary>
            GIF Image content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ImageTiffMediaType">
            <summary>
            TIFF Image content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ImageBmpMediaType">
            <summary>
            BMP Image content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.XsltMediaType">
            <summary>
            XSLT content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.CssMediaType">
            <summary>
            CSS content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortJsonMediaType">
            <summary>
            Short Javascript Object Notation (JSON) content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortBsonMediaType">
            <summary>
            Short Binary Javascript Object Notation (BSON) content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortAtomMediaType">
            <summary>
            Short ATOM feed content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortAtomEntryMediaType">
            <summary>
            Short ATOM entry content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortRssMediaType">
            <summary>
            Short RSS content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortXmlMediaType">
            <summary>
            XML content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortHtmlMediaType">
            <summary>
            HTML content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortTextMediaType">
            <summary>
            Text content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortFormMediaType">
            <summary>
            Form content type
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortImagePngMediaType">
            <summary>
            Image PNG content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortImageJpegMediaType">
            <summary>
            Image JPEG content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortImageGifMediaType">
            <summary>
            Image GIF content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortImageTiffMediaType">
            <summary>
            Image TIFF content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortImageBmpMediaType">
            <summary>
            Image BMP content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortXsltMediaType">
            <summary>
            XSLT content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.ShortCssMediaType">
            <summary>
            CSS content type.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.MediaTypeNames.DefaultMediaType">
            <summary>
            Returns the default <see cref="T:Sage.SData.Client.Framework.MediaType"/>.
            </summary>
            <value>The default <see cref="T:Sage.SData.Client.Framework.MediaType"/>, which is <b>Atom</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.GetMediaType(Sage.SData.Client.Framework.MediaType)">
            <summary>
            Returns the name of the content type for the specified <see cref="T:Sage.SData.Client.Framework.MediaType"/>.
            </summary>
            <param name="type">One of the <see cref="T:Sage.SData.Client.Framework.MediaType"/> values.</param>
            <returns>A <see cref="T:System.String"/> containing the name of the specified <see cref="T:Sage.SData.Client.Framework.MediaType"/>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.GetMediaType(System.String)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified name.
            </summary>
            <param name="name">The name of the content type.</param>
            <returns>The <see cref="T:Sage.SData.Client.Framework.MediaType"/> that matches the specified name.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.TryGetMediaType(System.String,Sage.SData.Client.Framework.MediaType@)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified name.
            </summary>
            <param name="name"></param>
            <param name="mediaType">On return contains the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified name.</param>
            <returns><b>true</b> if the content type was found; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.GetShortMediaType(Sage.SData.Client.Framework.MediaType)">
            <summary>
            Returns the short name of the content type for the specified <see cref="T:Sage.SData.Client.Framework.MediaType"/>.
            </summary>
            <param name="type">One of the <see cref="T:Sage.SData.Client.Framework.MediaType"/> values.</param>
            <returns>A <see cref="T:System.String"/> containing the short name of the specified <see cref="T:Sage.SData.Client.Framework.MediaType"/>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.GetShortMediaType(System.String)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified short name.
            </summary>
            <param name="name">The short name of the content type.</param>
            <returns>The <see cref="T:Sage.SData.Client.Framework.MediaType"/> that matches the specified name.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.MediaTypeNames.TryGetShortMediaType(System.String,Sage.SData.Client.Framework.MediaType@)">
            <summary>
            Returns the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified short name.
            </summary>
            <param name="name"></param>
            <param name="mediaType">On return contains the <see cref="T:Sage.SData.Client.Framework.MediaType"/> for the specified name.</param>
            <returns><b>true</b> if the content type was found; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Sage.SData.Client.Framework.RequestOperation">
            <summary>
            Defines an operation to peform during a request.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.RequestOperation.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.RequestOperation"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.RequestOperation.#ctor(Sage.SData.Client.Framework.HttpMethod)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.RequestOperation"/> class.
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:Sage.SData.Client.Framework.RequestOperation.#ctor(Sage.SData.Client.Framework.HttpMethod,System.Object)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.RequestOperation"/> class with
            the specified <see cref="T:Sage.SData.Client.Atom.AtomEntry"/> and method.
            </summary>
            <param name="method">One of the <see cref="T:Sage.SData.Client.Framework.HttpMethod"/> values</param>
            <param name="resource">The input resource involved in the operation.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.Method">
            <summary>
            Gets or sets the method for the request.
            </summary>
            <value>One of the <see cref="T:Sage.SData.Client.Framework.HttpMethod"/> values.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.Predicate">
            <summary>
            Gets or sets the predicate for the request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.Resource">
            <summary>
            Gets or sets the input resource for the request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.ContentType">
            <summary>
            Gets or sets the input content type for the request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.ETag">
            <summary>
            Gets or sets the ETag value for the request.
            </summary>
            <value>The ETag value for the request.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.RequestOperation.Files">
            <summary>
            Gets the files that will be attached to the request content.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataException">
            <summary>
            The exception that is thrown when an error occurs on an SData server.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataException.#ctor(System.Net.WebException)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataException.Diagnosis">
            <summary>
            Gets the high level diagnostic information returned from the server.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataException.Diagnoses">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataException.StatusCode">
            <summary>
            Gets the HTTP status code associated with the exception.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataException.Message">
            <summary>
            Gets a message that describes the exception.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataRequest">
            <summary>
            The request class which is responsible for sending and
            receiving data over HTTP with the server.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataRequest"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataRequest.#ctor(System.String,Sage.SData.Client.Framework.HttpMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataRequest"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataRequest.#ctor(System.String,Sage.SData.Client.Framework.HttpMethod,Sage.SData.Client.Common.ISyndicationResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataRequest"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataRequest.#ctor(System.String,Sage.SData.Client.Framework.RequestOperation[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataRequest"/> class.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Uri">
            <summary>
            Gets or sets the target uri used by requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.UserName">
            <summary>
            Gets or sets the user name used by requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Password">
            <summary>
            Gets or sets the password used by requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.UserAgent">
            <summary>
            Gets or sets the user agent passed during requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Timeout">
            <summary>
            Gets or sets the timeout in milliseconds used during requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.TimeoutRetryAttempts">
            <summary>
            Gets or sets the number of timeout retry attempts that should be made before giving up.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Proxy">
            <summary>
            Gets or sets the proxy used by requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Accept">
            <summary>
            Gets or sets the accept media types accepted by requests.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Cookies">
            <summary>
            Gets or sets the cookies associated with this request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Credentials">
            <summary>
            Gets of sets the credentials associated with this request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataRequest.Operations">
            <summary>
            Lists the operations associated with this request.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataRequest.GetResponse">
            <summary>
            Execute the request and return a response object.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.ISDataResponse">
            <summary>
            An interfact which encapsulates interesting information returned
            from a request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.ContentType">
            <summary>
            The response content type.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.ETag">
            <summary>
            The response ETag.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.Location">
            <summary>
            The response location.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.Content">
            <summary>
            The response content.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.ISDataResponse.Files">
            <summary>
            Gets the files attached to the response.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataResponse">
            <summary>
            The response class which encapsulates interesting information returned
            from a request.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.ContentType">
            <summary>
            The response content type.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.ETag">
            <summary>
            The response ETag.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.Location">
            <summary>
            The response location.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.Content">
            <summary>
            The response content.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataResponse.Files">
            <summary>
            Gets the files attached to the response.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataUri">
            <summary>
            Helper class for building an SData compatible <see cref="T:System.Uri"/>.
            </summary>
            <remarks>
            The format of an SData <see cref="T:System.Uri"/> is as follows
            
            http(s)://&gt;host&lt;:&gt;port&lt;/&gt;server&lt;/&gt;product&lt;/&gt;contract&lt;/&gt;company-dataset&lt;/&gt;collection&lt;(resource identifier)&gt;value&lt;
            </remarks>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataUri.QueryArgNames">
            <summary>
            Specifies the names of the SData defined query arguments
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.OrderBy">
            <summary>
            Specifies the name of the 'orderby' query argument.
            </summary>
            <value>The name of the 'orderby' query argument</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Where">
            <summary>
            Specifies the name of the 'where' query argument.
            </summary>
            <value>The name of the 'where' query argument</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Thumbnail">
            <summary>
            Specifies the name of the 'thumbnail' query argument.
            </summary>
            <value>The name of the 'thumbnail' query argument</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Count">
            <summary>
            Specifies the name of the 'count' query argument.
            </summary>
            <value>The name of the 'count' query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.StartIndex">
            <summary>
            Specifies the name of the 'startIndex' query argument.
            </summary>
            <value>The name of the 'startIndex' query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Language">
            <summary>
            Specifies the name of the 'language' query argument.
            </summary>
            <value>The name of the 'language' query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Format">
            <summary>
            Specifies the name of the format type query argument.
            </summary>
            <value>The name of the format type query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Precedence">
            <summary>
            Specifies the name of the precedence query argument.
            </summary>
            <value>The name of the precedence query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Include">
            <summary>
            Specifies the name of the include query argument.
            </summary>
            <value>The name of the include query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Exclude">
            <summary>
            Specifies the name of the exclude query argument.
            </summary>
            <value>The name of the exclude query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.IncludeSchema">
            <summary>
            Specifies the name of the includeSchema query argument.
            </summary>
            <value>The name of the includeSchema query argument.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.TrackingId">
            <summary>
            Specifies the name of the TrackingID argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Search">
            <summary>
            Specifies the name of the search argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.IncludeContent">
            <summary>
            Specifies the name of the include content argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.ReturnDelta">
            <summary>
            Specifies the name of the return delta argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.Select">
            <summary>
            Specifies the name of the select argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.RunName">
            <summary>
            Specifies the name of the runName argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.QueryArgNames.RunStamp">
            <summary>
            Specifies the name of the runStamp argument
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.ProductPathIndex">
            <summary>
            Index of the product path segment within a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.ContractTypePathIndex">
            <summary>
            Index of the contract segment within a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.CompanyDatasetPathIndex">
            <summary>
            Index of the company-dataset segment within a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.CollectionTypePathIndex">
            <summary>
            Index of the primary resource path segment within a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SDataUri.ServiceMethodSegment">
            <summary>
            Name of the service method segment.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SDataUri.PropertySort">
            <summary>
            Order By details
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.PropertySort.#ctor(System.String,System.Boolean)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri.PropertySort"/> class.
            </summary>
            <param name="property">The name of the property.</param>
            <param name="descending">The direction.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.PropertySort.Property">
            <summary>
            Returns the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.PropertySort.Descending">
            <summary>
            Returns a value indicating if the order is descending.
            </summary>
            <value><b>true</b> for a descending sort; otherwise, <b>false</b> for ascending.</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri"/> class with
            the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to assign.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri"/> class with
            the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to assign.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor(Sage.SData.Client.Framework.SDataUri)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri"/> class with
            the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to assign.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.#ctor(Sage.SData.Client.Framework.UriFormatter)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SDataUri"/> class with
            the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to assign.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Product">
            <summary>
            Gets or sets the value of the Product within the <see cref="T:System.Uri"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Contract">
            <summary>
            Gets or sets the value of the Contract type within the <see cref="T:System.Uri"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.CompanyDataset">
            <summary>
            Gets or sets the value of the Company-Dataset within the <see cref="T:System.Uri"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.CollectionType">
            <summary>
            Returns the type of the collection within the <see cref="T:System.Uri"/>.
            </summary>
            <value>The type of the collection within the <see cref="T:System.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.CollectionPredicate">
            <summary>
            Returns the predicate associated with the <see cref="P:Sage.SData.Client.Framework.SDataUri.CollectionType"/>.
            </summary>
            <value>The predicate associated with the <see cref="P:Sage.SData.Client.Framework.SDataUri.CollectionType"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.HasCollectionPredicate">
            <summary>
            Returns a value indicating if there is a predicate associated with the <see cref="P:Sage.SData.Client.Framework.SDataUri.CollectionType"/>.
            </summary>
            <value><b>true</b> if there is a predicate associated with the <see cref="P:Sage.SData.Client.Framework.SDataUri.CollectionType"/>; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.ServiceMethod">
            <summary>
            Gets or sets the name of the service method.
            </summary>
            <value>The name of the service method.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.ServiceMethodPredicate">
            <summary>
            Gets or sets the predicate for the service method.
            </summary>
            <value>The predicate for the service method.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.OrderBy">
            <summary>
            Gets or sets the expression to use when sorting,
            </summary>
            <value>The expression to use when sorting.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.OrderByParsed">
            <summary>
            Returns the sort details.
            </summary>
            <value>The details of the sort.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Where">
            <summary>
            Gets or sets the expression to use when filtering a collection of resources.
            </summary>
            <value>The expression to use when filtering a collection of resources.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Thumbnail">
            <summary>
            Gets or sets the value indicating whether or not thumbnail representations should be returned.
            </summary>
            <value><b>true</b> if thumbnail representations should be returned; otherwise <b>false</b>.  The default is <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.IncludeContent">
            <summary>
            Gets or sets the a value indicating if the content should be included.
            </summary>
            <value><b>true</b> to include the content; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Count">
            <summary>
            Gets or sets the number of resources to return.
            </summary>
            <value>The number of resources to return. <b>0</b> to return all resources.  The default is value <b>0</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.StartIndex">
            <summary>
            Gets or sets the starting index to return resources from.
            </summary>
            <value>The starting index to return resources from. <b>0</b> specifies the first item.  The default value is <b>0</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Language">
            <summary>
            Gets or sets the language to use for resources.
            </summary>
            <value>The language to use for resources.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Format">
            <summary>
            Gets or sets the format type to return.
            </summary>
            <value>One of the <see cref="T:Sage.SData.Client.Framework.MediaType"/> values.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Precedence">
            <summary>
            Gets or sets the maximum precedence of the fields to return in the result.
            </summary>
            <value>0 to return no entity information (only name and id). 
            Higher values will return entity information for the properties 
            with an equal or lower precedence value.</value>
            <remarks>If <see cref="P:Sage.SData.Client.Framework.SDataUri.Thumbnail"/> is set to <b>true</b>, this
            will take no effect. Setting <see cref="P:Sage.SData.Client.Framework.SDataUri.Thumbnail"/> to <b>true</b>
            is equivalent to specifying a Precedence of 0.</remarks>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Include">
            <summary>
            Specifies which related objects should be included in the payload along
            with the main resource being requested.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Exclude">
            <summary>
            Specifies which related objects should be excluded from the payload. 
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.IncludeSchema">
            <summary>
            Gets or sets the value indicating whether or not the schema should be returned.
            </summary>
            <value><b>true</b> if the schema should be returned; otherwise <b>false</b>.  The default is <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.TrackingId">
            <summary>
            The ID used to track asynchronous operations, and to ensure that
            duplicate operations are not processed.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Search">
            <summary>
            Specifies a full-text search criteria.
            </summary>
            <remarks>
            The syntax for the search string may vary depending on the search 
            engine used by the provider. SData does not attempt to introduce 
            a standard syntax for full text searches because the search text 
            will usually be entered interactively through a search box.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.Select">
            <summary>
            Specifies the properties to return .
            </summary>
            <remarks>
            The select parameter gives more control on the depth and breadth of information returned. It allows the consumer to specify the list of properties that he wants in the response, very much like a SQL select clause.
            </remarks>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.ReturnDelta">
            <summary>
            Gets or sets the value indicating whether the server should only include properties that have been modified in its response.
            </summary>
            <value><b>true</b> if the server should only include properties that have been modified in its response; otherwise <b>false</b>.  The default is <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.RunName">
            <summary>
            A name that the synchronization engine assigned to the run.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.SDataUri.RunStamp">
            <summary>
            The timestamp at which the synchronization run was started.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.BuildLocalPath(System.String[])">
            <summary>
            Builds a local path from the specified segments.
            </summary>
            <param name="segments">Array of path segments.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.SDataUri.BuildLocalPath(System.Collections.Generic.IEnumerable{Sage.SData.Client.Framework.UriPathSegment})">
            <summary>
            Builds a local path from the specified segments.
            </summary>
            <param name="segments">Array of path segments.</param>
        </member>
        <member name="T:Sage.SData.Client.Framework.Severity">
            <summary>
            Defines the severity of an error.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Severity.Info">
            <summary>
            Informational message, does not require any special attention.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Severity.Warning">
            <summary>
            Warning message: does not prevent operation from succeeding but may require attention.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Severity.Transient">
            <summary>
            Transient error, operation failed but may succeed later in the same condition.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Severity.Error">
            <summary>
            Error, operation failed, request should be modified before resubmitting.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.Severity.Fatal">
            <summary>
            Severe error, operation should not be reattempted (and other operations are likely to fail too).
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SyncMode">
            <summary>
            Defines the sync mode.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SyncMode.CatchUp">
            <summary>
            An alternative version of the resource.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.SyncMode.Immediate">
            <summary>
            A resource related to this resource.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.SyncState">
            <summary>
            Provides details of a SyncState for sync.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SyncState.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SyncState"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.SyncState.#ctor(System.String,System.Int64,System.DateTime)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.SyncState"/> class with the
            specified attributes.
            </summary>
            <param name="endPoint"></param>
            <param name="tick"></param>
            <param name="stamp"></param>
        </member>
        <member name="M:Sage.SData.Client.Framework.SyncState.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)">
            <summary>
            Loads this <see cref="T:Sage.SData.Client.Framework.SyncState"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="source">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract information from.</param>
            <param name="manager">The <see cref="T:System.Xml.XmlNamespaceManager"/> object used to resolve prefixed syndication extension elements and attributes.</param>
            <returns><b>true</b> if the <see cref="T:Sage.SData.Client.Framework.SyncState"/> was initialized using the supplied <paramref name="source"/>, otherwise <b>false</b>.</returns>
            <remarks>
                This method expects the supplied <paramref name="source"/> to be positioned on the XML element that represents a <see cref="T:Sage.SData.Client.Framework.SyncState"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Framework.SyncState.WriteTo(System.Xml.XmlWriter,System.String)">
            <summary>
            Saves the current <see cref="T:Sage.SData.Client.Framework.SyncState"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to write the current context.</param>
            <param name="xmlNamespace">The XML namespace used to qualify prefixed syndication extension elements and attributes.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Sage.SData.Client.Framework.Tracking">
            <summary>
            Represents tracking information used to track the progress of an
            asynchronous operation.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.Phase">
            <summary>
            The current phase of the operation.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.PhaseDetail">
            <summary>
            More detailed information about the current phase of the operation.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.Progress">
            <summary>
            Percentage of the operation which is completed.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.ElapsedSeconds">
            <summary>
            Time elapsed since operation started, in seconds.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.RemainingSeconds">
            <summary>
            Expected remaining time, in seconds
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.Tracking.PollingMillis">
            <summary>
            Delay (in milliseconds) that the consumer should use 
            before polling the service again.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.UriFormatter">
            <summary>
            Helper class for building a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.UriName">
            <summary>
            Returns the <see cref="T:System.String"/> used as the name of the uri property during serialization.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.SchemeSuffix">
            <summary>
            Returns the <see cref="T:System.String"/> used as the suffix for the scheme part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> used as the suffix for the scheme part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.PortPrefix">
            <summary>
            Returns the <see cref="T:System.String"/> used as the prefix for the port part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> used as the prefix for the port part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.QueryPrefix">
            <summary>
            Returns the <see cref="T:System.String"/> used as the prefix for the query part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> used as the prefix for the query part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.QueryArgPrefix">
            <summary>
            Returns the <see cref="T:System.String"/> used as the argument separator for the query part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> used as the argument separator for the query part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.QueryArgValuePrefix">
            <summary>
            Returns the <see cref="T:System.String"/> used as the query argument and value separator.
            </summary>
            <value>A <see cref="T:System.String"/> used as the query argument and value separator.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.PathSegmentPrefix">
            <summary>
            Returns the <see cref="T:System.String"/> to use for separating the path parts of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> to use for separating the path parts of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.FragmentPrefix">
            <summary>
            Returns the <see cref="T:System.String"/> used to prefix the fragment part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.String"/> used to prefix the fragment part of a <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.Http">
            <summary>
            Returns the Http scheme.
            </summary>
            <value>A <see cref="T:System.String"/> containing the Http scheme.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.Https">
            <summary>
            Returns the Https scheme.
            </summary>
            <value>A <see cref="T:System.String"/> containing the Https scheme.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.UnspecifiedPort">
            <summary>
            Defines that a port has not been specified.
            </summary>
            <value>A value defining that a port has not been specified.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriFormatter.LocalHost">
            <summary>
            Gets the identifier/IPAddress to use for the Local Host.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class with
            the specified <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="uri">The <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> to assign.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class with
            the specified <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="uri">The <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> to assign.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.#ctor(Sage.SData.Client.Framework.UriFormatter)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriFormatter"/> class with
            the specified <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="uri">The <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> to assign.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Uri">
            <summary>
            Gets or sets the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Scheme">
            <summary>
            Gets or sets the scheme for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The scheme for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Port">
            <summary>
            Gets or sets the port for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The port for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> if one exists; otherwise, <b>-1</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Host">
            <summary>
            Gets or sets the host for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The host for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.PathPrefix">
            <summary>
            Gets or sets the path prefix for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <remarks>Represents the virtual root when hosting in IIS; otherwise empty.</remarks>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Server">
            <summary>
            Gets or sets the server for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The server for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Fragment">
            <summary>
            Gets or sets the fragment for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The fragment for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Path">
            <summary>
            Gets or sets the path of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The path for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.DirectPath">
            <summary>
            Returns the path of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> with all predicates removed.
            </summary>
            <value>The path for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> with all predicates removed</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Query">
            <summary>
            Gets or sets the query for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>
            </summary>
            <value>The query for the query.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.QueryArgs">
            <summary>
            Returns the query arguments for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the query arguments for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/></value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.PathQuery">
            <summary>
            Gets or sets the path and query of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <value>The path and query for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.PathSegments">
            <summary>
            Returns the components that make up the path.
            </summary>
            <value>Array of components that make up the path.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.DirectPathSegments">
            <summary>
            Returns the components that make up the direct path.
            </summary>
            <value>Array of components that make up the direct path.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.LastPathSegment">
            <summary>
            Returns the last path segment.
            </summary>
            <value>The last path segment.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.UseSsl">
            <summary>
            Gets or sets a flag indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> uses SSL.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> uses SSL; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.IsEmpty">
            <summary>
            Returns a flag indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> is empty.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> is empty; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.Item(System.String)">
            <summary>
            Gets or sets a query argument.
            </summary>
            <param name="name">The name of the argument.</param>
            <param name="value">The value of the argument.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.RequiresRebuildPath">
            <summary>
            Gets or sets a value indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be rebuilt.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be rebuilt; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.RequiresParsePath">
            <summary>
            Gets or sets a value indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be parsed.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be parsed; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.RequiresRebuildUri">
            <summary>
            Gets or sets a value indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be rebuilt.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be rebuilt; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriFormatter.RequiresParseUri">
            <summary>
            Gets or sets a value indicating if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be parsed.
            </summary>
            <value><b>true</b> if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be parsed; otherwise, <b>false</b>.</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnRequiresParsePathChanged">
            <summary>
            Called when the value of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.RequiresParsePath"/> value changes.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnRequiresRebuildPathChanged">
            <summary>
            Called when the value of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.RequiresRebuildPath"/> value changes.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnRequiresParseUriChanged">
            <summary>
            Called when the value of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.RequiresParseUri"/> value changes.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnRequiresRebuildUriChanged">
            <summary>
            Called when the value of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.RequiresRebuildUri"/> value changes.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.Empty">
            <summary>
            Resets the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> back to an empty <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.AppendQueryArgument(System.String,System.String,System.String)">
            <summary>
            Adds a query argument to a URI.
            </summary>
            <param name="uri">The <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> to add the parameter to.</param>
            <param name="name">The name of the query argument.</param>
            <param name="value">The value of the query argument.</param>
            <returns>The specified <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> with the additional query argument.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.AppendPath(System.String[])">
            <summary>
            Adds the specified path segments to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="segments">The path segments segments to add to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.AppendPath(Sage.SData.Client.Framework.UriPathSegment)">
            <summary>
            Adds the specified paths to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="segment">The path segment to add to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.AppendPath(System.Collections.Generic.IEnumerable{Sage.SData.Client.Framework.UriPathSegment})">
            <summary>
            Adds the specified paths to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="segments">The path segments to add to the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.SetPath(System.String[])">
            <summary>
            Sets the path for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="segments">The path segments for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.SetPath(System.Collections.Generic.IEnumerable{Sage.SData.Client.Framework.UriPathSegment})">
            <summary>
            Sets the path for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <param name="segments">The path segments for the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.TrimStart">
            <summary>
            Removes first path segment of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.TrimEnd">
            <summary>
            Removes last path segment of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.TrimRange(System.Int32,System.Int32)">
             <summary>
             Removes a range of path segments from the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
             </summary>
            <param name="iPathSegmentIndex">The zero-based starting index of the range of path segments to remove</param>
            <param name="iPathSegmentCount">The number of path segments to remove from the end of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representing the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.GetHashCode">
            <summary>
            Returns the hashcode for the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.
            </summary>
            <returns>The hashcode for the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.Equals(System.Object)">
            <summary>
            Compares the specified <see cref="T:System.Object"/> with this <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><b>true</b> if <paramref name="obj"/> match this <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.CheckRebuildUri">
            <summary>
            Checks if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs rebuilding.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnBuildUri">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be rebuilt.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.CheckParseUri">
            <summary>
            Checks if the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs parsing.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnParseUri">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs to be parsed.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.BuildQuery(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Builds a query <see cref="T:System.String"/> from the specified <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="args">The arguments to build the query string from.</param>
            <returns>A <see cref="T:System.String"/> containing the query.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.GetPathSegment(System.Int32)">
            <summary>
            Returns the segment at the specified index.
            </summary>
            <param name="index">The index of the segment.</param>
            <returns>The segment at the specified index.</returns>
            <remarks>If the <paramref name="index"/> is past the end of the current array the length is increased.</remarks>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.CheckRebuildPath">
            <summary>
            Checks if the path part of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs rebuilding.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnBuildPath">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be rebuilt.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.CheckParsePath">
            <summary>
            Checks if the path part of the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Uri"/> needs parsing.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriFormatter.OnParsePath">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriFormatter.Path"/> needs to be parsed.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.UriPathParser">
            <summary>
            Parses a Uri path into segments
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathParser.Parse(System.Uri)">
            <summary>
            Parses the path of the specified <see cref="T:System.Uri"/> into segments.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> containing the path to parse into segments.</param>
            <returns>An array of segments that form the path for the specified <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathParser.Parse(System.String)">
            <summary>
            Parses the specified path into segments.
            </summary>
            <param name="path">The path to parse into segments.</param>
            <returns>An array of segments that form the specified path.</returns>
        </member>
        <member name="T:Sage.SData.Client.Framework.UriPathSegment">
            <summary>
            Defines a path segment within a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriPathSegment.PredicatePrefix">
            <summary>
            Returns the prefix to use for a predicate.
            </summary>
            <value>The prefix to use for a predicate.</value>
        </member>
        <member name="F:Sage.SData.Client.Framework.UriPathSegment.PredicateSuffix">
            <summary>
            Returns the suffix to use for a predicate.
            </summary>
            <value>The suffix to use for a predicate.</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> class.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> class with
            the specified text.
            </summary>
            <param name="segment">The text and predicate for the segment.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.#ctor(System.String,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> class with
            the specified text and predicate.
            </summary>
            <param name="text">The text for the segment.</param>
            <param name="predicate">The predicate for the segment.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.#ctor(Sage.SData.Client.Framework.UriPathSegment)">
            <summary>
            Initialises a new instance of the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> class with
            the details of the specified segment.
            </summary>
            <param name="segment">The segment to copy the details from.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriPathSegment.Text">
            <summary>
            Gets or sets the text for the segment.
            </summary>
            <value>The text for the segment.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriPathSegment.Predicate">
            <summary>
            Gets or sets the predicate for the segment.
            </summary>
            <value>The predicate for the segment.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriPathSegment.HasPredicate">
            <summary>
            Returns a value indicating if this segment has a predicate.
            </summary>
            <value><b>true</b> if this segment has a predicate; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Sage.SData.Client.Framework.UriPathSegment.Segment">
            <summary>
            Gets or sets the text and predicate for the segment.
            </summary>
            <value>The text and predicate for the segment.</value>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of the segment.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of the segment.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.GetHashCode">
            <summary>
            Returns the haskcode for the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.
            </summary>
            <returns>The hashcode for the <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.Equals(System.Object)">
            <summary>
            Compares the specified <see cref="T:System.Object"/> with this <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><b>true</b> if <paramref name="obj"/> match this <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.FromStrings(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds an enumerable of <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> objects from an enumerable of <see cref="T:System.String"/>
            <see cref="T:System.Array"/>.
            </summary>
            <param name="segments"><see cref="T:System.Array"/> of strings.</param>
            <returns><see cref="T:System.Array"/> of <see cref="T:Sage.SData.Client.Framework.UriPathSegment"/> objects.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.GetPathSegments(System.String)">
            <summary>
            Returns the segments that make up the specified path.
            </summary>
            <param name="path">The path to to return the segments for.</param>
            <returns>Array of segments that make up the specified path.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.AppendPath(System.String,System.String)">
            <summary>
            Appends a segment to a path.
            </summary>
            <param name="path">The path to append the segment to.</param>
            <param name="segment">The segment to append to the path.</param>
            <returns>A <see cref="T:System.String"/> containg the segment appended to the path.</returns>
            <remarks>If the <paramref name="segment"/> starts with a forward slash it is assumed that the segment specifies an absolute path.</remarks>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.AppendPath(System.Text.StringBuilder,System.String)">
            <summary>
            Appends a segment to a path.
            </summary>
            <param name="path">The path to append the segment to.</param>
            <param name="segment">The segment to append to the path.</param>
            <remarks>If the <paramref name="segment"/> starts with a forward slash it is assumed that the segment specifies an absolute path.</remarks>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.OnRebuild">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Segment"/> needs rebuilding using the <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Text"/>
            and <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Predicate"/> values.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriPathSegment.OnParse">
            <summary>
            Called when the <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Segment"/> needs parsing to extract the
            <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Text"/> and <see cref="P:Sage.SData.Client.Framework.UriPathSegment.Predicate"/> values.
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Framework.UriQueryParser">
            <summary>
            Helper class for parsing the query part of a <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="query">The query to parse.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="args">On exit contains the query arguments.</param>
            <param name="query">The query to parse.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.String,System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="query">The query to parse.</param>
            <param name="separator">The character separating the arguments.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="args">On exit contains the query arguments.</param>
            <param name="query">The query to parse.</param>
            <param name="separator">The character separating the arguments.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="query">The query to parse.</param>
            <param name="complexArgs">Array of arguments that can be quoted.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="args">On exit contains the query arguments.</param>
            <param name="query">The query to parse.</param>
            <param name="complexArgs">Array of arguments that can be quoted.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="query">The query to parse.</param>
            <param name="complexArgs">Array of arguments that can be quoted.</param>
            <param name="separator">The character separating the arguments.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.UriQueryParser.Parse(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Parses the arguments from the specified query string.
            </summary>
            <param name="args">On exit contains the query arguments.</param>
            <param name="query">The query to parse.</param>
            <param name="complexArgs">Array of arguments that can be quoted.</param>
            <param name="separator">The character separating the arguments.</param>
        </member>
        <member name="T:Sage.SData.Client.Framework.W3CDateTime">
            <summary>
            Represents a W3C DateTime structure.
            </summary>
            <remarks>See http://www.w3.org/TR/NOTE-datetime for details on the W3C date time guidelines.</remarks>
        </member>
        <member name="F:Sage.SData.Client.Framework.W3CDateTime._utcDateTime">
            <summary>
            Private member to hold the datetime in a UTC format.
            </summary>
        </member>
        <member name="F:Sage.SData.Client.Framework.W3CDateTime._utcOffset">
            <summary>
            Private member to hold the UTC format timspan offest.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.W3CDateTime"/> class.
            </summary>
            <param name="dateTime">The datetime to represent in a W3C format.</param>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Framework.W3CDateTime"/> class.
            </summary>
            <param name="dateTime">The datetime to represent in a W3C format.</param>
            <param name="offset">The UTC offest for the datetime.</param>
        </member>
        <member name="P:Sage.SData.Client.Framework.W3CDateTime.DateTime">
            <summary>
            Gets the W3C datetime. 
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.W3CDateTime.UtcOffset">
            <summary>
            Gets the UTC offset.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Framework.W3CDateTime.UtcTime">
            <summary>
            Gets the UTC datetime.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.Parse(System.String)">
            <summary>
            Converts the specified string representation of a W3C date and time to its <see cref="T:Sage.SData.Client.Framework.W3CDateTime"/> equivalent.
            </summary>
            <param name="s">A string containing a date and time to convert.</param>
            <returns>A W3CDateTime equivalent to the date and time contained in s.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.ToDateString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>A string representation of value of this instance.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.TryParse(System.String,Sage.SData.Client.Framework.W3CDateTime@)">
            <summary>
            Returns a value indicating if sucessfully able to parse W3C formatted datetime string.
            </summary>
            <param name="date">The W3C datetime formatted string to parse.</param>
            <param name="result">The <see cref="T:Sage.SData.Client.Framework.W3CDateTime"/> represented by the datetime string.</param>
            <returns><b>true</b> if able to parse string representation, otherwise returns false.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="date"/> is an empty string or is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.FormatOffset(System.TimeSpan,System.String)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan"/> to its equivalent string representation.
            </summary>
            <param name="offset">The <see cref="T:System.TimeSpan"/> to convert.</param>
            <param name="separator">Separator used to deliminate hours and minutes.</param>
            <returns>A string representation of the TimeSpan.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.ParseW3COffSet(System.String)">
            <summary>
            Converts the specified string representation of an offset to its <see cref="T:System.TimeSpan"/> equivalent.
            </summary>
            <param name="s">A string containing a offset to convert.</param>
            <returns>A TimeSpan equivalent to the offset contained in s.</returns>
        </member>
        <member name="M:Sage.SData.Client.Framework.W3CDateTime.IsNull(Sage.SData.Client.Framework.W3CDateTime)">
            <summary>
            Returns a value indicating whether the specified date represents a null date.
            </summary>
            <param name="dateTime">The <see cref="T:Sage.SData.Client.Framework.W3CDateTime"/> that needs to be checked.</param>
            <returns><b>true</b> if the value represents a null date, otherwise returns false.</returns>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.IsLocalized">
            <summary>
            Does the property contain localized text?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.IsUniqueKey">
            <summary>
            Is the property a key that identifies a unique resource.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.Precedence">
            <summary>
            Controls the visibility of properties on small screens.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.GroupName">
            <summary>
            A group (category) name to group related properties.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.MaxLength">
            <summary>
            Maximum length of a string property value.
            This attribute is a hint for the user interface. A service consumer may pass a string which is longer than maxLength. In this case, the value will be truncated by the provider.
            A more sophisticated consumer may use this value to limit the size of its edit field and/or adjust its storage requirements so that they match what the provider uses.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.AverageLength">
            <summary>
            Average length (number of characters) of a string property value.
            This attribute is a hint for the user interface. A service consumer can use it to set the visible size of edit fields in a form.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.TotalDigits">
            <summary>
            Maximum overall number of digits for a decimal property value.
            This attribute is a hint for the user interface. A service consumer may ignore it and pass a decimal value with more digits. In this case the provider will round or truncate the value.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.FractionDigits">
            <summary>
            Maximum number of digits to the right of the decimal point for a decimal property value.
            This attribute is a hint for the user interface. A service consumer may ignore it and pass a decimal value with more decimal digits. In this case the provider will round or truncate the value.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.IsGlobalId">
            <summary>
            Is the property a global identifier for the resource?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.IsIdentifier">
            <summary>
            Is the property an identifier for the resource?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaValueProperty.IsDescriptor">
            <summary>
            Is the property a descriptor for the resource?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaItem.Label">
            <summary>
            A friendly name for the element (localized).
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaItem.Unsupported">
            <summary>
            Is the element part of a global contract that it is not supported by this specific provider?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaItem.Compliance">
            <summary>
            Applies to elements that are part of a global contract.
            Defines the compliance requirement for providers that implement the contract.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaItem.Tags">
            <summary>
            List of tags that apply to the definition.
            SData does not impose any predefined list of tags.
            Instead, each contract is free to define its own list of tags.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaNamedQueryType.InvocationMode">
            <summary>
            The supported invocation modes.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.IsMandatory">
            <summary>
            Is the property value mandatory when creating a new resource?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.IsReadOnly">
            <summary>
            Is the property read-only?
            For example, an ID set by the provider or a calculated property.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.CanSort">
            <summary>
            Can the feed be sorted by this property?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.CanFilter">
            <summary>
            Can the feed be filtered by the property?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.CanGroup">
            <summary>
            Can feed entries be grouped by values of this property?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaProperty.CopiedFrom">
            <summary>
            Indicates that the property is dependent upon a related resource and gives
            the XPath expression for the corresponding property in the related resource.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.Relationship">
            <summary>
            Type of relationship.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.IsCollection">
            <summary>
            Does the property refer to a collection of resources or a single resource?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanGet">
            <summary>
            Does the relationship property support GET (read and query) operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanPost">
            <summary>
            Does the relationship property support POST operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanPut">
            <summary>
            Does the relationship property support PUT operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanDelete">
            <summary>
            Does the relationship property support DELETE operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanPagePrevious">
            <summary>
            Does the relationship property support paging backwards?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanPageNext">
            <summary>
            Does the relationship property support paging forwards?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaRelationshipProperty.CanPageIndex">
            <summary>
            Does the relationship property support seeking?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.PluralName">
            <summary>
            Name of the resource kind in plural form. For example, accounts.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanSearch">
            <summary>
            Does the resource kind support full-text search through the search query parameter?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.HasUuid">
            <summary>
            Does the resource kind use UUIDs to identify resources?
            When this attribute is set, feeds payload MUST carry sdata:uuid attributes.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.SupportsETag">
            <summary>
            Does the resource kind support the ETag mechanism to control concurrent updates?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.BatchingMode">
            <summary>
            Does the resource kind support batching? If so, which invocation modes does it support?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.IsSyncSource">
            <summary>
            Can the resource kind be used as a source in a synchronization operation?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.IsSyncTarget">
            <summary>
            Can the resource kind be used as a target in a synchronization operation?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.SyncConflictPriority">
            <summary>
            Priority to resolve conflicts in synchronization.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.SyncOrder">
            <summary>
            Order in which the resource kind should be processed in a synchronization pass.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanGet">
            <summary>
            Does the resource kind support GET (read and query) operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanPost">
            <summary>
            Does the resource kind support POST operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanPut">
            <summary>
            Does the resource kind support PUT operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanDelete">
            <summary>
            Does the resource kind support DELETE operations?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanPagePrevious">
            <summary>
            Does the resource kind support paging backwards?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanPageNext">
            <summary>
            Does the resource kind support paging forwards?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.CanPageIndex">
            <summary>
            Does the resource kind support seeking?
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaResourceType.ProtocolFilters">
            <summary>
            List of protocol filter variables supported in where parameters and resource selectors.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaServiceOperationType.InvocationMode">
            <summary>
            The supported invocation modes.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaTopLevelType.Path">
            <summary>
            Relative URL to query resources or invoke the operation.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Metadata.SDataSchemaTopLevelType.HasTemplate">
            <summary>
            Does the resource kind, service operation or named query provide a $template URL?
            </summary>
        </member>
        <member name="T:Sage.SData.Client.Mime.MimeHelper">
            <summary>
            Helper class for inferring file MIME types.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeHelper.FindMimeType(System.String)">
            <summary>
            Find the MIME type of a local file using its file extension and the first few kilobytes of its content.
            </summary>
            <param name="filePath">The local file path.</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeHelper.FindMimeType(System.Byte[])">
            <summary>
            Find the MIME type of a sample of raw file data.
            </summary>
            <param name="data">The raw file data.</param>
            <returns></returns>
        </member>
        <member name="T:Sage.SData.Client.Mime.MimeMessage">
            <summary>
             Represents a MIME protocol message.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeMessage.Parse(System.IO.Stream,System.String)">
            <summary>
            Parses a stream into a <see cref="T:Sage.SData.Client.Mime.MimeMessage"/>, splitting it into parts based on the specified boundary.
            </summary>
            <param name="stream">The source stream to parse from.</param>
            <param name="boundary">The unique string used to designate boundaries between parts.</param>
            <returns></returns>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeMessage.#ctor(Sage.SData.Client.Mime.MimePart[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Mime.MimeMessage"/> class using the supplied parts.
            </summary>
            <param name="parts">A collection of initial parts.</param>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeMessage.#ctor(System.Collections.Generic.IEnumerable{Sage.SData.Client.Mime.MimePart})">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Mime.MimeMessage"/> class using the supplied parts.
            </summary>
            <param name="parts">A collection of initial parts.</param>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimeMessage.Boundary">
            <summary>
            Gets or sets the unique string used to designate boundaries between parts.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimeMessage.WriteTo(System.IO.Stream)">
            <summary>
            Writes the multipart MIME message to the specified stream.
            </summary>
            <param name="stream">The destination stream to write to.</param>
        </member>
        <member name="T:Sage.SData.Client.Mime.MimePart">
            <summary>
            Represents a MIME protocol message part.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimePart.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Mime.MimePart"/> class using the supplied content.
            </summary>
            <param name="content">The content of the MIME part.</param>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimePart.#ctor(System.IO.Stream,System.Net.WebHeaderCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sage.SData.Client.Mime.MimePart"/> class using the supplied content and headers.
            </summary>
            <param name="content">The content of the MIME part.</param>
            <param name="headers">The headers of the MIME part.</param>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.Headers">
            <summary>
            Gets the headers of the MIME part.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.ContentType">
            <summary>
            Gets the content type of the MIME part.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.ContentLength">
            <summary>
            Gets the content length of the MIME part.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.ContentTransferEncoding">
            <summary>
            Gets the content transfer encoding of the MIME part.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.ContentDisposition">
            <summary>
            Gets the content disposition of the MIME part.
            </summary>
        </member>
        <member name="P:Sage.SData.Client.Mime.MimePart.Content">
            <summary>
            Gets the content stream of the MIME part.
            </summary>
        </member>
        <member name="M:Sage.SData.Client.Mime.MimePart.WriteTo(System.IO.StreamWriter,System.String)">
            <summary>
            Writes the MIME part to the specified stream writer.
            </summary>
            <param name="writer">The destination writer to write to.</param>
            <param name="boundary">The unique string used to designated the beginning of the part.</param>
        </member>
    </members>
</doc>
